[{"/Users/kirk/Solana/grape-art/src/index.js":"1","/Users/kirk/Solana/grape-art/src/reportWebVitals.js":"2","/Users/kirk/Solana/grape-art/src/App.tsx":"3","/Users/kirk/Solana/grape-art/src/utils/grapeTools/constants.ts":"4","/Users/kirk/Solana/grape-art/src/Header/Header.tsx":"5","/Users/kirk/Solana/grape-art/src/Profile/Profile.tsx":"6","/Users/kirk/Solana/grape-art/src/Featured/Featured.tsx":"7","/Users/kirk/Solana/grape-art/src/components/ConfirmDialog/ConfirmDialog.tsx":"8","/Users/kirk/Solana/grape-art/src/utils/config/theme.tsx":"9","/Users/kirk/Solana/grape-art/src/Preview/Preview.tsx":"10","/Users/kirk/Solana/grape-art/src/utils/grapeTools/safe-math.ts":"11","/Users/kirk/Solana/grape-art/src/utils/grapeTools/utils.ts":"12","/Users/kirk/Solana/grape-art/src/utils/cyberConnect/types.ts":"13","/Users/kirk/Solana/grape-art/src/utils/auctionHouse/cancelWithdrawOffer.ts":"14","/Users/kirk/Solana/grape-art/src/utils/cyberConnect/query.ts":"15","/Users/kirk/Solana/grape-art/src/utils/cyberConnect/helper.ts":"16","/Users/kirk/Solana/grape-art/src/utils/auctionHouse/cancelOffer.ts":"17","/Users/kirk/Solana/grape-art/src/utils/auctionHouse/helpers/accounts.ts":"18","/Users/kirk/Solana/grape-art/src/utils/auctionHouse/withdrawOffer.ts":"19","/Users/kirk/Solana/grape-art/src/utils/auctionHouse/helpers/constants.ts":"20","/Users/kirk/Solana/grape-art/src/utils/auctionHouse/helpers/various.ts":"21","/Users/kirk/Solana/grape-art/src/utils/auctionHouse/createDAOProposal.ts":"22","/Users/kirk/Solana/grape-art/src/utils/auctionHouse/buyNowListing.ts":"23","/Users/kirk/Solana/grape-art/src/utils/auctionHouse/helpers/schema.ts":"24","/Users/kirk/Solana/grape-art/src/utils/auctionHouse/sellNowListing.ts":"25","/Users/kirk/Solana/grape-art/src/utils/auctionHouse/cancelListing.ts":"26","/Users/kirk/Solana/grape-art/src/utils/auctionHouse/depositInGrapeVine.ts":"27","/Users/kirk/Solana/grape-art/src/utils/auctionHouse/acceptOffer.ts":"28","/Users/kirk/Solana/grape-art/src/utils/auctionHouse/submitOffer.ts":"29","/Users/kirk/Solana/grape-art/src/utils/grapeTools/WalletAddress.tsx":"30","/Users/kirk/Solana/grape-art/src/utils/grapeTools/ShareUrl.tsx":"31","/Users/kirk/Solana/grape-art/src/utils/name-service.tsx":"32","/Users/kirk/Solana/grape-art/src/components/static/SolCurrencyIcon.tsx":"33","/Users/kirk/Solana/grape-art/src/components/static/GrapeIcon.tsx":"34","/Users/kirk/Solana/grape-art/src/utils/grapeTools/whitelist.ts":"35","/Users/kirk/Solana/grape-art/src/utils/grapeTools/mintverification.ts":"36","/Users/kirk/Solana/grape-art/src/utils/grapeTools/RegexTextField.jsx":"37","/Users/kirk/Solana/grape-art/src/utils/web3/name-service.tsx":"38","/Users/kirk/Solana/grape-art/src/utils/web3/name-auctioning.tsx":"39","/Users/kirk/Solana/grape-art/src/utils/cache.tsx":"40","/Users/kirk/Solana/grape-art/src/utils/web3/program-address.tsx":"41"},{"size":500,"mtime":1645482665001,"results":"42","hashOfConfig":"43"},{"size":362,"mtime":1645482665001,"results":"44","hashOfConfig":"43"},{"size":7651,"mtime":1646182242420,"results":"45","hashOfConfig":"43"},{"size":5240,"mtime":1646237492155,"results":"46","hashOfConfig":"43"},{"size":9499,"mtime":1645955144887,"results":"47","hashOfConfig":"43"},{"size":168908,"mtime":1646247049367,"results":"48","hashOfConfig":"43"},{"size":3699,"mtime":1646047234965,"results":"49","hashOfConfig":"43"},{"size":1654,"mtime":1645482664999,"results":"50","hashOfConfig":"43"},{"size":1270,"mtime":1645482665004,"results":"51","hashOfConfig":"43"},{"size":207776,"mtime":1646246865036,"results":"52","hashOfConfig":"43"},{"size":1902,"mtime":1645482665006,"results":"53","hashOfConfig":"43"},{"size":10549,"mtime":1645482665006,"results":"54","hashOfConfig":"43"},{"size":1241,"mtime":1646243170997,"results":"55","hashOfConfig":"43"},{"size":6701,"mtime":1645482665002,"results":"56","hashOfConfig":"43"},{"size":3774,"mtime":1646243201791,"results":"57","hashOfConfig":"43"},{"size":500,"mtime":1645482665005,"results":"58","hashOfConfig":"43"},{"size":4422,"mtime":1645482665002,"results":"59","hashOfConfig":"43"},{"size":17832,"mtime":1645482665003,"results":"60","hashOfConfig":"43"},{"size":4810,"mtime":1645482665004,"results":"61","hashOfConfig":"43"},{"size":2517,"mtime":1646240589920,"results":"62","hashOfConfig":"43"},{"size":7501,"mtime":1645482665004,"results":"63","hashOfConfig":"43"},{"size":3351,"mtime":1646172285303,"results":"64","hashOfConfig":"43"},{"size":9933,"mtime":1645482665002,"results":"65","hashOfConfig":"43"},{"size":5754,"mtime":1645482665003,"results":"66","hashOfConfig":"43"},{"size":5064,"mtime":1646163804762,"results":"67","hashOfConfig":"43"},{"size":4512,"mtime":1645482665002,"results":"68","hashOfConfig":"43"},{"size":3618,"mtime":1645482665002,"results":"69","hashOfConfig":"43"},{"size":9021,"mtime":1645482665002,"results":"70","hashOfConfig":"43"},{"size":8670,"mtime":1645482665004,"results":"71","hashOfConfig":"43"},{"size":6545,"mtime":1646067259265,"results":"72","hashOfConfig":"43"},{"size":10510,"mtime":1646246934492,"results":"73","hashOfConfig":"43"},{"size":3920,"mtime":1645482665006,"results":"74","hashOfConfig":"43"},{"size":4145,"mtime":1645482665000,"results":"75","hashOfConfig":"43"},{"size":9419,"mtime":1645482664999,"results":"76","hashOfConfig":"43"},{"size":1648,"mtime":1645482665006,"results":"77","hashOfConfig":"43"},{"size":491,"mtime":1645489226263,"results":"78","hashOfConfig":"43"},{"size":689,"mtime":1645482665005,"results":"79","hashOfConfig":"43"},{"size":2163,"mtime":1645482665007,"results":"80","hashOfConfig":"43"},{"size":2356,"mtime":1645482665006,"results":"81","hashOfConfig":"43"},{"size":2035,"mtime":1645482665004,"results":"82","hashOfConfig":"43"},{"size":4074,"mtime":1645482665007,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"p6rq7d",{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"95","usedDeprecatedRules":"92"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":146,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":154,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"92"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"92"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"92"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"92"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"92"},"/Users/kirk/Solana/grape-art/src/index.js",[],["190","191"],"/Users/kirk/Solana/grape-art/src/reportWebVitals.js",[],"/Users/kirk/Solana/grape-art/src/App.tsx",["192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210"],"import React, { FC, ReactNode, useCallback, useMemo } from 'react';\nimport { styled, ThemeProvider } from '@mui/material/styles';\nimport { HashRouter, BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n//import { LogView } from \"./Log/Log\";\nimport { ProfileView } from \"./Profile/Profile\";\nimport { PreviewView } from \"./Preview/Preview\";\nimport { FeaturedView } from \"./Featured/Featured\";\nimport CssBaseline from '@mui/material/CssBaseline';\nimport MuiDrawer from '@mui/material/Drawer';\n\nimport {\n  Box,\n  Grid,\n  Paper,\n  Container,\n  Typography,\n  AppBar,\n} from '@mui/material';\n\nimport Header from './Header/Header';\nimport { SnackbarProvider } from 'notistack';\nimport { useConnection, ConnectionProvider, WalletProvider, useWallet } from '@solana/wallet-adapter-react';\nimport { WalletAdapterNetwork, WalletError, WalletNotConnectedError } from '@solana/wallet-adapter-base';\nimport { Connection, Keypair, SystemProgram, Transaction, clusterApiUrl } from '@solana/web3.js';\nimport { Helmet } from 'react-helmet';\n\nimport { useSnackbar } from 'notistack';\n\nimport ConfirmDialog from './components/ConfirmDialog/ConfirmDialog';\n\n//import { WalletDialogProvider, WalletDisconnectButton, WalletMultiButton } from '../WalletAdapterMui';\n\n/*\nimport {\n  LedgerWalletAdapter,\n  PhantomWalletAdapter,\n  SlopeWalletAdapter,\n  SolflareWalletAdapter,\n  SolletExtensionWalletAdapter,\n  SolletWalletAdapter,\n  TorusWalletAdapter,\n  //CloverWalletAdapter,\n  //MathWalletAdapter,\n  //Coin98WalletAdapter,\n  //SolongWalletAdapter,\n} from '@solana/wallet-adapter-wallets';\n*/\n\nimport {\n    getLedgerWallet,\n    getPhantomWallet,\n    getSlopeWallet,\n    getSolflareWallet,\n    getSolletExtensionWallet,\n    getSolletWallet,\n    //getTorusWallet,\n  } from '@solana/wallet-adapter-wallets';\n\n\n//import { mainListItems, secondaryListItems } from './components/SidebarList/SidebarList';\nimport grapeTheme from  './utils/config/theme'\nimport \"./App.less\";\nimport { GRAPE_RPC_ENDPOINT, FREE_RPC_ENDPOINT } from './utils/grapeTools/constants';\n\nfunction Copyright(props: any) {\n  return (\n    <Typography sx={{background:'transparent'}} variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      Powered by Grape on Solana\n      {/*\n      <Link color=\"inherit\" href=\"https://verify.grapes.network\">\n        Grape Network | Dashboard v1.1.5\n      </Link>\n      */}\n    </Typography>\n  );\n}\n\n\nfunction DashboardContent() {\n  const [open, setOpen] = React.useState(true);\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  // You can also provide a custom RPC endpoint\n  const network = WalletAdapterNetwork.Mainnet; //.Devnet; //.Mainnet;\n  // You can also provide a custom RPC endpoint\n  //const endpoint =  useMemo(() => clusterApiUrl(network), [network]); // GRAPE_RPC_ENDPOINT;\n  //const endpoint =  GRAPE_RPC_ENDPOINT;\n  const endpoint =  FREE_RPC_ENDPOINT;\n  const wallets = useMemo(() => [\n  \n    getPhantomWallet(),\n    getSolflareWallet(),\n    getSlopeWallet(),\n    getSolletWallet({ network }),\n    getSolletExtensionWallet({ network }),\n    getLedgerWallet(),\n  \n    //getTorusWallet({\n    //  options: { clientId: 'BCX2hQWDez2_qJhmSuQC7DXD4OG0VfGEFjCZfLar2EA5NvKyudCxOOlOcQ4YZbPGQhdwLonSXZr3i_siIJVhtwI' }\n    //}),\n  /*  \n    new PhantomWalletAdapter(),\n    new SlopeWalletAdapter(),\n    new SolflareWalletAdapter(),\n    new TorusWalletAdapter(),\n    new LedgerWalletAdapter(),\n    new SolletWalletAdapter({ network }),\n    new SolletExtensionWalletAdapter({ network }),\n  */  \n    //new CloverWalletAdapter(),\n    //new MathWalletAdapter(),\n    //new Coin98WalletAdapter(),\n    //new SolongWalletAdapter(),\n  ], [network]);\n  \n  /*\n  const { enqueueSnackbar } = useSnackbar();\n  const onError = useCallback(\n      (error) => {\n          enqueueSnackbar(error.message ? `${error.name}: ${error.message}` : error.name, { variant: 'error' });\n          console.error(error);\n      },\n      [enqueueSnackbar]\n  );\n  */\n\n  return (\n    <>\n        <ThemeProvider theme={grapeTheme}>\n            <div className=\"grape-gradient-background\">\n            <SnackbarProvider>\n                <ConnectionProvider endpoint={endpoint}>\n                    <WalletProvider wallets={wallets} autoConnect>\n                    \n                    <Grid \n                        //color={grapeTheme.palette.primary.light}\n                        sx={{ \n                          flex: 1\n                        }}>\n                        <CssBaseline />\n                        <Router>\n                        <AppBar position=\"fixed\" color=\"primary\" style={{ background: 'rgba(0,0,0,0.5)' }}>\n                            <Header\n                                open={open} \n                                toggleDrawer={toggleDrawer}\n                            />\n                        </AppBar>\n                            \n                          <Grid\n                            component=\"main\"\n                            sx={{\n                                mt: 6,\n                                display: 'flex',\n                                flexGrow: 1\n                            }}\n                            >\n                            <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4}}>\n                                <ConfirmDialog />\n                                <Routes>\n\n                                  <Route path=\"/featured\" element={<FeaturedView/>} />\n\n                                  <Route path=\"/\" element={<ProfileView/>}>\n                                    <Route path=\":handlekey\" element={<ProfileView />} />\n                                  </Route>\n                                  <Route index element={<ProfileView/>} />\n                                  \n                                  <Route path=\"profile/*\" element={<ProfileView />} >\n                                      <Route path=\":handlekey\" element={<ProfileView />} />\n                                  </Route>\n\n                                  <Route path=\"collection/*\" element={<ProfileView />} >\n                                      <Route path=\":handlekey\" element={<ProfileView />} />\n                                  </Route>\n                                  \n                                  <Route path=\"preview/*\" element={<PreviewView />}>\n                                      <Route path=\":handlekey\" element={<PreviewView />} />\n                                  </Route>\n\n                                  <Route path=\"*\" element={<NotFound />} />\n                                </Routes>\n                                \n                                <Copyright sx={{ mt: 4 }} />\n                            </Container>\n                          </Grid>\n                        </Router>\n                    </Grid>\n                    \n                    </WalletProvider>\n                </ConnectionProvider>\n            </SnackbarProvider>\n            </div>\n        </ThemeProvider>\n    </>\n  );\n}\n\nexport const NotFound = () => {\n  return (\n    <div style={{ height: \"100%\", overflow: \"auto\" }}>\n      <Paper className=\"grape-paper-background\">\n        <Grid \n          className=\"grape-paper\" \n          container\n          alignContent=\"center\"\n          justifyContent=\"center\"\n          direction=\"column\">\n          <Grid item>\n            <Typography \n              align=\"center\"\n              variant=\"h3\">\n              {'No Grapes Here...'}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n  </div>\n  )\n}\n\n//export const Dashboard: FC<{ children: ReactNode }> = ({ children }) => {\nexport default function Dashboard() {\n  return <DashboardContent />;\n}",["211","212"],"/Users/kirk/Solana/grape-art/src/utils/grapeTools/constants.ts",["213"],"//export const FREE_RPC_ENDPOINT = 'https://grape.genesysgo.net/';\n//export const FREE_RPC_ENDPOINT = 'https://api.mainnet-beta.solana.com';\n//export const FREE_RPC_ENDPOINT = 'https://free.rpcpool.com';\nexport const FREE_RPC_ENDPOINT = 'https://solana-api.projectserum.com/';\nexport const GRAPE_RPC_ENDPOINT = 'https://grape.genesysgo.net/';\n\n//export const FREE_RPC_ENDPOINT = 'https://api.mainnet-beta.solana.com';\n//export const GRAPE_RPC_ENDPOINT = 'https://api.mainnet-beta.solana.com';\n\nexport const GRAPE_RPC_REFRESH = 25000;\nexport const GRAPE_TREASURY = 'GrapevviL94JZRiZwn2LjpWtmDacXU8QhAJvzpUMMFdL';\n\nexport const TOKEN_VERIFICATION_ADDRESS = '8upjSpvjcdpuzhfR1zriwg5NXkwDruejqNE9WNbPRtyA';\nexport const TOKEN_VERIFICATION_NAME = 'Grape';\nexport const TOKEN_VERIFICATION_AMOUNT = 1000;\nexport const TOKEN_REALM_ID = 'By2sVGZXwfQq6rAiAM3rNPJ9iQfb5e2QhnF4YjJ4Bip';\nexport const TOKEN_REALM_PROGRAM_ID = 'GovER5Lthms3bLBqWub97yVrMmEogzX7xNjdXpPPCVZw';\n\nexport const FEATURED_DAO_ARRAY = [{\n    address:'66pJhhESDjdeBBDdkKmxYYd7q6GUggYPWjxpMKNX39KV',\n    daourl:'https://realms.today/dao/Ukraine',\n    img:'/solana4ukraine.png',\n    title:'Solana for Ukraine',\n    text:'NFT Artists come together in the DAO made exlusively to help out Ukraine, all proceeds of these NFT\\'s will be donated to help the Ukrainian people'\n}]\n\n//export const GRAPE_PREVIEW = '/preview/';\n//export const GRAPE_PROFILE = '/profile/';\n\nexport const GRAPE_PREVIEW = '/preview?pkey=';\nexport const GRAPE_PROFILE = '/profile?pkey=';\n\nexport const OTHER_MARKETPLACES = new Array(\n    {\n        name: 'Magic Eden',\n        logo: 'https://magiceden.io/static/media/logo.ca418d75.svg',\n        //logo: 'https://magiceden.io/img/logo.png',\n        address: 'GUfCR9mK6azb9vcpsxgXyj7XRPAKJd4KMHTTVvtncGgp',\n        previewUrl: 'https://www.magiceden.io/item-details/',\n        url: 'https://www.magiceden.io'\n    },{\n        name: 'SolanArt',\n        logo: 'https://solanart.io/static/media/logo.0054f7e7.png',\n        address: '3D49QorJyNaL4rcpiynbuS3pRH4Y7EXEM6v6ZGaqfFGK',\n        previewUrl: 'https://solanart.io/search/?token=',\n        url: 'https://solanart.io'\n    },{\n        name: 'Digital Eyes',\n        logo: 'https://ik.imagekit.io/srjnqnjbpn9/logo/digitaleyes.svg?ik-sdk-version=react-1.0.11',\n        //logo: 'https://ik.imagekit.io/favicon-32x32.png',\n        address: 'F4ghBzHFNgJxV4wEQDchU5i7n4XWWMBSaq7CuswGiVsr',\n        previewUrl: '',\n        url: 'https://www.magiceden.io'\n    },{\n        name: 'Digital Eyes',\n        logo: 'https://ik.imagekit.io/srjnqnjbpn9/logo/digitaleyes.svg?ik-sdk-version=react-1.0.11',\n        //logo: 'https://ik.imagekit.io/srjnqnjbpn9/logo/favicon-32x32.png',\n        address: 'BweTPKW9QsWZTJnfbLz88ekKaWw7HrBJsStrduHryPgk',\n        previewUrl: '',\n        url: 'https://www.magiceden.io'\n    },{\n        name: 'Alph Art',\n        //logo: 'https://alpha.art/icon-root.svg',\n        logo: 'https://alpha.art/logo_192.png',\n        address: '4pUQS4Jo2dsfWzt3VgHXy3H6RYnEDd11oWPiaM2rdAPw',\n        previewUrl: 'https://alpha.art/t/',\n        url: 'https://www.alpha.art'\n    },{\n        name: 'FTX',\n        logo: 'https://ftx.us/static/media/ftxus_logo_white.b384ac52.svg',\n        address: '73tF8uN3BwVzUzwETv59WNAafuEBct2zTgYbYXLggQiU',\n        previewUrl: '',\n        url: 'https://ftx.us/nfts'\n    },{\n        name: 'FTX',\n        logo: 'https://ftx.us/static/media/ftxus_logo_white.b384ac52.svg',\n        address: 'HHvnfyY7vNWhjeHqCVyMPr4UjDp3ptqu3QbuFoCkrm8r',\n        previewUrl: '',\n        url: 'https://ftx.us/nfts'\n    },{\n        name: 'FTX',\n        logo: 'https://ftx.us/static/media/ftxus_logo_white.b384ac52.svg',\n        address: 'HznNaC2cz1iXMtHMG3HAgMH2xkrt2iTXfUKz6wwAAVPB',\n        previewUrl: '',\n        url: 'https://ftx.us/nfts'\n    },{\n        name: 'SMB Market',\n        //logo: 'https://market.solanamonkey.business/logo/smb-market.svg',\n        logo: 'https://market.solanamonkey.business/logo/smb.png',\n        address: 'G6xptnrkj4bxg9H9ZyPzmAnNsGghSxZ7oBCL1KNKJUza',\n        previewUrl: 'https://market.solanamonkey.business/item/',\n        url: 'https://market.solanamonkey.business/'\n    },{\n        name: 'SMB Market',\n        //logo: 'https://market.solanamonkey.business/logo/smb-market.svg',\n        logo: 'https://market.solanamonkey.business/logo/smb.png',\n        address: '7Ppgch9d4XRAygVNJP4bDkc7V6htYXGfghX4zzG9r4cH',\n        previewUrl: 'https://market.solanamonkey.business/item/',\n        url: 'https://market.solanamonkey.business/'\n    },{\n        name: 'SMB Market',\n        //logo: 'https://market.solanamonkey.business/logo/smb-market.svg',\n        logo: 'https://market.solanamonkey.business/logo/smb.png',\n        address: 'EQEpTS8SiVPUxyqRgT2Jdx9dHEwbpcbSZ2sotiAUZ7i7',\n        previewUrl: 'https://market.solanamonkey.business/item/',\n        url: 'https://market.solanamonkey.business/'\n    },{\n        name: 'SMB Market',\n        //logo: 'https://market.solanamonkey.business/logo/smb-market.svg',\n        logo: 'https://market.solanamonkey.business/logo/smb.png',\n        address: 'CPo76cw52gKMTyvCS9GpnnZfvmkQQxovLwQFxonZrCRU',\n        previewUrl: 'https://market.solanamonkey.business/item/',\n        url: 'https://market.solanamonkey.business/'\n    }\n);","/Users/kirk/Solana/grape-art/src/Header/Header.tsx",["214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247"],"import * as React from 'react';\nimport { styled, alpha } from '@mui/material/styles';\nimport { Link, useLocation, NavLink } from 'react-router-dom';\nimport { useNavigate } from 'react-router';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\n\nimport { useSnackbar } from 'notistack';\n\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\nimport Snackbar, { SnackbarOrigin } from '@mui/material/Snackbar';\n\nimport {\n    WalletModalProvider,\n    WalletDisconnectButton,\n    WalletMultiButton\n} from '@solana/wallet-adapter-react-ui';\n\nimport {\n    MenuItem,\n    Menu,\n    Tooltip,\n    Dialog,\n    DialogTitle,\n    InputBase,\n    Paper,\n    Container,\n    List,\n    ListItem,\n    ListItemText\n} from '@mui/material';\n\n\nimport SearchIcon from '@mui/icons-material/Search';\nimport IconButton from '@mui/material/IconButton';\n\nimport DashboardOutlinedIcon from '@mui/icons-material/DashboardOutlined';\n\nimport { ValidateAddress } from '../utils/grapeTools/WalletAddress'; // global key handling\n\nrequire('@solana/wallet-adapter-react-ui/styles.css');\n\nexport interface State extends SnackbarOrigin {\n    open: boolean;\n}\n\nfunction getParam(param: string) {\n    //return new URLSearchParams(document.location.search).get(param);\n    return new URLSearchParams(window.location.search).get(param);\n}\n\ninterface HeaderProps{\n    children?:React.ReactNode;\n}\n\nconst Search = styled('div')(({ theme }) => ({\n    position: 'relative',\n    border: '1px solid rgba(255,255,255,0.25)',\n    borderRadius: '17px',\n    backgroundColor: alpha(theme.palette.common.white, 0.015),\n    '&:hover': {\n        border: '1px solid rgba(255,255,255,0.75)',\n        backgroundColor: alpha(theme.palette.common.white, 0.1),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    marginTop: 5,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n        width: 'auto',\n    },\n  }));\n\n  const SearchIconWrapper = styled('div')(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: alpha(theme.palette.common.white, 0.25),\n  }));\n  \n  const StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: 'inherit',\n    '& .MuiInputBase-input': {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: '100%',\n      },\n    },\n  }));\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\n    props,\n    ref,\n    ) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nexport function Header(props: any) {\n    const { open_menu } = props;\n    const [open_snackbar, setSnackbarState] = React.useState(false);\n    \n    const [tokenParam, setTokenParam] = React.useState(getParam('token'));\n    const [discordId, setDiscordId] = React.useState(getParam('discord_id'));\n    const [userId, setUserId] = React.useState(getParam('user_id'));\n    const [providers, setProviders] = React.useState(['Sollet', 'Sollet Extension', 'Phantom','Solflare']);\n    const [open_wallet, setOpenWallet] = React.useState(false);\n    \n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const isWalletOpen = Boolean(anchorEl);\n    const [newinputpkvalue, setNewInputPKValue] = React.useState(null);\n    const navigate = useNavigate();\n    const location = useLocation();\n    const currPath = location.pathname;\n    const searchParams = new URLSearchParams(location.search);\n    //const currPath = location?.pathname ?? \"\";\n    const { enqueueSnackbar } = useSnackbar();\n\n    const routes = [\n        { name: \"Home\", path: \"/\" },\n        // { name: \"Servers\", path: \"/servers\" },\n\n        // { name: \"Settings\", path: \"/settings\" }\n    ]\n    \n    /*\n    const toggleDrawer = () => {\n        //setOpenDrawer(!open);\n        open = !open;//setOpen(!open);\n    };\n    */\n\n    \n    /*\n    async function connect() {\n        let wallet = new Wallet();\n        wallet.onChange = (wallet) => onWalletConnect(wallet);\n        await wallet.connect();\n    }\n\n    async function connectPhantom() {\n        let wallet = new PhantomWallet();\n        wallet.onChange = (wallet: any) => onWalletConnect(wallet);\n        await wallet.connect();\n    }\n    \n    async function connectSolflare() {\n        let wallet = new SolflareWallet();\n        wallet.onChange = () => onWalletConnect(wallet);\n        await wallet.connect();\n    }\n    \n    async function onWalletConnect(wallet: any){\n        if(wallet){\n            let session = await wallet.signMessage('$GRAPE');\n            if(session){\n                setSession(session);\n            }\n        }\n    }\n    */\n    \n\n    //Menu\n    const menuId = 'primary-wallet-account-menu';\n    const menuWalletId = 'primary-fullwallet-account-menu';\n\n    const handleProfileMenuOpen = (event: any) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        // this.props.parentCallback(\"Data from child\");\n    };\n\n    const handleWalletConnectClickOpen = (type: string, callback: any) => {\n        /*\n        switch(type) {\n            case \"sollet\":\n                connect();\n                break;\n            case \"phantom\":\n                connectPhantom();\n                break;\n            case \"solflare\":\n                connectSolflare();\n                break;\n            default:\n                break;\n        }\n        */\n       \n        callback && callback();\n    };\n\n    const handleCloseWallet = (value: any) => {\n        setOpenWallet(false);\n\n    };\n\n    function SimpleDialog(props: any) {\n        const { onClose, selectedValue, open_wallet } = props;\n\n        const handleCloseWallet = () => {\n            onClose(selectedValue);\n        };\n\n        const handleListItemClick = (value: any) => {\n            onClose(value);\n        };\n\n        return (\n            <Dialog onClose={handleCloseWallet} aria-labelledby=\"simple-dialog-title\" open={open_wallet}>\n                <DialogTitle id=\"simple-dialog-title\">Select Wallet</DialogTitle>\n                <List>\n                    {providers.map((provider) => (\n                        <ListItem button onClick={() => handleListItemClick(provider)} key={provider}>\n                            <ListItemText primary={provider} />\n                        </ListItem>\n                    ))}\n                </List>\n            </Dialog>\n        );\n    }\n\n    const handleClickSnackbar = () => {\n        enqueueSnackbar(`Copied...`,{ variant: 'success' });\n        \n        handleMenuClose();\n        //setSnackbarState(true);\n    };\n\n    function handlePublicKeySubmit(event: any) {\n        event.preventDefault();\n\n        if (newinputpkvalue && newinputpkvalue.length>0 && ValidateAddress(newinputpkvalue)){\n            navigate({\n                pathname: '/profile/'+newinputpkvalue\n            },\n                { replace: true }\n            );\n            \n        } else{\n            setNewInputPKValue('');\n        }\n    }\n\n\n    const handleCloseSnackbar = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setSnackbarState(false);\n    };\n\n\n    return (\n\n        <Toolbar\n            color=\"inherit\"\n            sx={{\n                pr: '24px', // keep right padding when drawer closed\n                background: 'none'\n            }}\n            >\n\n            <Box display='flex' flexGrow={1}>\n                <Button\n                    variant=\"text\"\n                    component={NavLink} color=\"inherit\" to=\"/\"\n                >\n                    <Typography\n                        component=\"h1\"\n                        variant=\"h6\"\n                        color=\"inherit\"\n                        display='flex'\n                    >\n                        <img src=\"/grape_white_logo.svg\" height=\"40px\" width=\"137px\" className=\"header-logo\" alt=\"Grape\" />\n                    </Typography>\n                </Button>\n                    <Container\n                        component=\"form\"\n                        onSubmit={handlePublicKeySubmit}\n                        sx={{background:'none'}}\n                        >\n                        <Search\n                            sx={{height:'40px'}}\n                        >\n                            <SearchIconWrapper>\n                                <SearchIcon />\n                            </SearchIconWrapper>\n                            <StyledInputBase\n                                sx={{height:'40px', width:'100%'}}\n                                placeholder=\"Search Wallet\"\n                                inputProps={{ 'aria-label': 'search' }}\n                                onChange={(e) => setNewInputPKValue(e.target.value)}\n                            />\n                        </Search>\n                    </Container>\n\n\n            </Box>\n            <div>\n                <WalletModalProvider>\n                    <WalletMultiButton />\n                </WalletModalProvider>\n            </div>\n        </Toolbar>\n        \n    );\n}\n\nexport default Header;\n","/Users/kirk/Solana/grape-art/src/Profile/Profile.tsx",["248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393"],"/Users/kirk/Solana/grape-art/src/Featured/Featured.tsx",["394","395","396","397","398","399","400","401"],"import * as React from 'react';\nimport { styled, alpha } from '@mui/material/styles';\nimport { Link, useLocation, NavLink } from 'react-router-dom';\n\nimport { GRAPE_PREVIEW, GRAPE_PROFILE, FEATURED_DAO_ARRAY } from '../utils/grapeTools/constants';\n\nimport {\n    Grid,\n    Button,\n    ButtonGroup,\n    Card,\n    CardActions,\n    CardContent,\n    CardMedia,\n    Typography,\n} from '@mui/material';\n\nimport ShareSocialURL from '../utils/grapeTools/ShareUrl';\nimport { MakeLinkableAddress, ValidateAddress, trimAddress, timeAgo } from '../utils/grapeTools/WalletAddress'; // global key handling\n\nimport { CardActionArea } from '@mui/material';\n\nexport function FeaturedView(props: any) {\n    \n  return (\n        <>\n            {FEATURED_DAO_ARRAY.map((featured: any, key: number) => (\n            <Card sx={{borderRadius:'26px',mb:2}}>\n                <CardActionArea\n                    component={Link} to={`${GRAPE_PROFILE}${featured.address}`}\n                >\n                    \n                    <CardMedia\n                        component=\"img\"\n                        image={featured.img}\n                        alt={featured.title}\n                            sx={{\n                                maxHeight: '250',\n                                background: 'rgba(0, 0, 0, 1)',\n                                m:0,\n                                p:0,\n                            }} \n                        />\n                        \n                    <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\n                        {featured.title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.primary\">\n                        {featured.text}\n                    </Typography>\n                        <img\n                            src={featured.img}\n                            alt=\"\"\n                            style={{\n                                opacity: '0.025',\n                                position: 'absolute',\n                                marginTop:2,\n                                marginBottom:2,\n                                padding:1,\n                                top:'-20%',\n                                left:'-20%',\n                                width:'150%'\n                            }}\n                        />\n                    </CardContent>\n                \n                </CardActionArea>\n                <CardActions>\n                    <Grid \n                        container\n                        direction=\"row\"\n                        justifyContent='flex-end'\n                        alignContent='flex-end'\n                        sx={{\n                            p:1,pr:1.25\n                        }}\n                    >\n                        <ButtonGroup variant=\"text\">\n                            <Button size=\"small\" \n                                component=\"a\" href={`${featured.daourl}`} target=\"_blank\"\n                                sx={{borderRadius:'24px', color:'white'}}>\n                                View DAO</Button>\n                            <Button size=\"small\"    \n                                component={Link} to={`${GRAPE_PROFILE}${featured.address}`}\n                                sx={{borderRadius:'24px', color:'white'}}\n                            >View Collection</Button>\n                            <ShareSocialURL url={'https://grape.art'+GRAPE_PROFILE+featured.address} title={'Grape Profile | '+trimAddress(featured.address,4)} />\n                        </ButtonGroup>\n                    </Grid>\n                </CardActions>\n            </Card> \n            ))}\n        </>\n  );\n}","/Users/kirk/Solana/grape-art/src/components/ConfirmDialog/ConfirmDialog.tsx",[],"/Users/kirk/Solana/grape-art/src/utils/config/theme.tsx",["402","403"],"import { createTheme, makeStyles } from '@mui/material/styles';\n// paper: #12151B\n\n//background: rgb(18,21,28);\n//background: linear-gradient(0deg, rgba(18,21,28,1) 10%, rgba(2,0,36,1) 35%, rgba(90,111,179,1) 100%);\n\n \n//background: #F0F2F0;  /* fallback for old browsers */\n//background: -webkit-linear-gradient(to right, #000C40, #F0F2F0);  /* Chrome 10-25, Safari 5.1-6 */\n//background: linear-gradient(to right, #000C40, #F0F2F0); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n\n//background: #141E30;  /* fallback for old browsers */\n//background: -webkit-linear-gradient(to right, #243B55, #141E30);  /* Chrome 10-25, Safari 5.1-6 */\n//background: linear-gradient(to right, #243B55, #141E30); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n\n\nconst themeInstance = {\n  background: 'linear-gradient(0deg, rgba(18,21,28,1) 10%, rgba(2,0,36,1) 35%, rgba(90,111,179,1) 100%)',//'#0A1D30',\n\n};\n\nconst theme = createTheme({\n//const useStyles = makeStyles((theme: typeof themeInstance) => ({\n  typography: {\n    fontFamily: [\n      'GrapeFont',\n      'sans-serif',\n    ].join(','),\n  },  \n  palette: {\n    mode: \"dark\",\n    background: {\n      default: '#0A1D30',\n      paper: \"#000000\"\n    },\n  }\n});\n\nexport default theme;","/Users/kirk/Solana/grape-art/src/Preview/Preview.tsx",["404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557"],"/Users/kirk/Solana/grape-art/src/utils/grapeTools/safe-math.ts",[],"/Users/kirk/Solana/grape-art/src/utils/grapeTools/utils.ts",["558"],"import { deserializeUnchecked, serialize, BinaryReader, BinaryWriter } from 'borsh';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js'\nconst base58 = require('bs58');\n\nexport type StringPublicKey = string;\n\nexport const extendBorsh = () => {\n\t(BinaryReader.prototype as any).readPubkey = function () {\n\t\tconst reader = this as unknown as BinaryReader;\n\t\tconst array = reader.readFixedArray(32);\n\t\treturn new PublicKey(array);\n\t};\n\n\t(BinaryWriter.prototype as any).writePubkey = function (value: PublicKey) {\n\t\tconst writer = this as unknown as BinaryWriter;\n\t\twriter.writeFixedArray(value.toBuffer());\n\t};\n\n\t(BinaryReader.prototype as any).readPubkeyAsString = function () {\n\t\tconst reader = this as unknown as BinaryReader;\n\t\tconst array = reader.readFixedArray(32);\n\t\treturn base58.encode(array) as StringPublicKey;\n\t};\n\n\t(BinaryWriter.prototype as any).writePubkeyAsString = function (\n\t\tvalue: StringPublicKey,\n\t) {\n\t\tconst writer = this as unknown as BinaryWriter;\n\t\twriter.writeFixedArray(base58.decode(value));\n\t};\n};\n\nextendBorsh();\n\nexport const METADATA_PREFIX = 'metadata';\nexport const EDITION = 'edition';\nexport const RESERVATION = 'reservation';\n\nexport const MAX_NAME_LENGTH = 32;\n\nexport const MAX_SYMBOL_LENGTH = 10;\n\nexport const MAX_URI_LENGTH = 200;\n\nexport const MAX_CREATOR_LIMIT = 5;\n\nexport const MAX_CREATOR_LEN = 32 + 1 + 1;\nexport const MAX_METADATA_LEN =\n\t1 +\n\t32 +\n\t32 +\n\tMAX_NAME_LENGTH +\n\tMAX_SYMBOL_LENGTH +\n\tMAX_URI_LENGTH +\n\tMAX_CREATOR_LIMIT * MAX_CREATOR_LEN +\n\t2 +\n\t1 +\n\t1 +\n\t198;\n\nexport const MAX_EDITION_LEN = 1 + 32 + 8 + 200;\n\nexport const EDITION_MARKER_BIT_SIZE = 248;\n\n\nexport enum MetadataKey {\n\tUninitialized = 0,\n\tMetadataV1 = 4,\n\tEditionV1 = 1,\n\tMasterEditionV1 = 2,\n\tMasterEditionV2 = 6,\n\tEditionMarker = 7,\n}\n\nexport enum MetadataCategory {\n\tAudio = 'audio',\n\tVideo = 'video',\n\tImage = 'image',\n\tVR = 'vr',\n}\n\nexport type MetadataFile = {\n\turi: string;\n\ttype: string;\n};\n\nexport type FileOrString = MetadataFile | String;\n\nexport type Attribute = {\n\ttrait_type?: string;\n\tdisplay_type?: string;\n\tvalue: string | number;\n};\n\nexport interface IMetadataExtension {\n\tname: string;\n\tsymbol: string;\n\n\tcreators: Creator[] | null;\n\tdescription: string;\n\t// preview image absolute URI\n\timage: string;\n\tanimation_url?: string;\n\n\tattributes?: Attribute[];\n\n\t// stores link to item on meta\n\texternal_url: string;\n\n\tseller_fee_basis_points: number;\n\n\tproperties: {\n\t\tfiles?: FileOrString[];\n\t\tcategory: MetadataCategory;\n\t\tmaxSupply?: number;\n\t\tcreators?: {\n\t\t\taddress: string;\n\t\t\tshares: number;\n\t\t}[];\n\t};\n}\n\nexport class MasterEditionV1 {\n\tkey: MetadataKey;\n\tsupply: typeof BN;\n\tmaxSupply?: typeof BN;\n\t/// Can be used to mint tokens that give one-time permission to mint a single limited edition.\n\tprintingMint: StringPublicKey;\n\t/// If you don't know how many printing tokens you are going to need, but you do know\n\t/// you are going to need some amount in the future, you can use a token from this mint.\n\t/// Coming back to token metadata with one of these tokens allows you to mint (one time)\n\t/// any number of printing tokens you want. This is used for instance by Auction Manager\n\t/// with participation NFTs, where we dont know how many people will bid and need participation\n\t/// printing tokens to redeem, so we give it ONE of these tokens to use after the auction is over,\n\t/// because when the auction begins we just dont know how many printing tokens we will need,\n\t/// but at the end we will. At the end it then burns this token with token-metadata to\n\t/// get the printing tokens it needs to give to bidders. Each bidder then redeems a printing token\n\t/// to get their limited editions.\n\toneTimePrintingAuthorizationMint: StringPublicKey;\n\n\tconstructor(args: {\n\t\tkey: MetadataKey;\n\t\tsupply: typeof BN;\n\t\tmaxSupply?: typeof BN;\n\t\tprintingMint: StringPublicKey;\n\t\toneTimePrintingAuthorizationMint: StringPublicKey;\n\t}) {\n\t\tthis.key = MetadataKey.MasterEditionV1;\n\t\tthis.supply = args.supply;\n\t\tthis.maxSupply = args.maxSupply;\n\t\tthis.printingMint = args.printingMint;\n\t\tthis.oneTimePrintingAuthorizationMint =\n\t\t\targs.oneTimePrintingAuthorizationMint;\n\t}\n}\n\nexport class MasterEditionV2 {\n\tkey: MetadataKey;\n\tsupply: typeof BN;\n\tmaxSupply?: typeof BN;\n\n\tconstructor(args: { key: MetadataKey; supply: typeof BN; maxSupply?: typeof BN }) {\n\t\tthis.key = MetadataKey.MasterEditionV2;\n\t\tthis.supply = args.supply;\n\t\tthis.maxSupply = args.maxSupply;\n\t}\n}\n\nexport class EditionMarker {\n\tkey: MetadataKey;\n\tledger: number[];\n\n\tconstructor(args: { key: MetadataKey; ledger: number[] }) {\n\t\tthis.key = MetadataKey.EditionMarker;\n\t\tthis.ledger = args.ledger;\n\t}\n\n\teditionTaken(edition: number) {\n\t\tconst editionOffset = edition % EDITION_MARKER_BIT_SIZE;\n\t\tconst indexOffset = Math.floor(editionOffset / 8);\n\n\t\tif (indexOffset > 30) {\n\t\t\tthrow Error('bad index for edition');\n\t\t}\n\n\t\tconst positionInBitsetFromRight = 7 - (editionOffset % 8);\n\n\t\tconst mask = Math.pow(2, positionInBitsetFromRight);\n\n\t\tconst appliedMask = this.ledger[indexOffset] & mask;\n\n\t\treturn appliedMask !== 0;\n\t}\n}\n\nexport class Edition {\n\tkey: MetadataKey;\n\t/// Points at MasterEdition struct\n\tparent: StringPublicKey;\n\t/// Starting at 0 for master record, this is incremented for each edition minted.\n\tedition: typeof BN;\n\n\tconstructor(args: {\n\t\tkey: MetadataKey;\n\t\tparent: StringPublicKey;\n\t\tedition: typeof BN;\n\t}) {\n\t\tthis.key = MetadataKey.EditionV1;\n\t\tthis.parent = args.parent;\n\t\tthis.edition = args.edition;\n\t}\n}\nexport class Creator {\n\taddress: StringPublicKey;\n\tverified: boolean;\n\tshare: number;\n\n\tconstructor(args: {\n\t\taddress: StringPublicKey;\n\t\tverified: boolean;\n\t\tshare: number;\n\t}) {\n\t\tthis.address = args.address;\n\t\tthis.verified = args.verified;\n\t\tthis.share = args.share;\n\t}\n}\n\nexport class Data {\n\tname: string;\n\tsymbol: string;\n\turi: string;\n\tsellerFeeBasisPoints: number;\n\tcreators: Creator[] | null;\n\tconstructor(args: {\n\t\tname: string;\n\t\tsymbol: string;\n\t\turi: string;\n\t\tsellerFeeBasisPoints: number;\n\t\tcreators: Creator[] | null;\n\t}) {\n\t\tthis.name = args.name;\n\t\tthis.symbol = args.symbol;\n\t\tthis.uri = args.uri;\n\t\tthis.sellerFeeBasisPoints = args.sellerFeeBasisPoints;\n\t\tthis.creators = args.creators;\n\t}\n}\n\nexport class Metadata {\n\tkey: MetadataKey;\n\tupdateAuthority: StringPublicKey;\n\tmint: StringPublicKey;\n\tdata: Data;\n\tprimarySaleHappened: boolean;\n\tisMutable: boolean;\n\teditionNonce: number | null;\n\n\t// set lazy\n\tmasterEdition?: StringPublicKey;\n\tedition?: StringPublicKey;\n\n\tconstructor(args: {\n\t\tupdateAuthority: StringPublicKey;\n\t\tmint: StringPublicKey;\n\t\tdata: Data;\n\t\tprimarySaleHappened: boolean;\n\t\tisMutable: boolean;\n\t\teditionNonce: number | null;\n\t}) {\n\t\tthis.key = MetadataKey.MetadataV1;\n\t\tthis.updateAuthority = args.updateAuthority;\n\t\tthis.mint = args.mint;\n\t\tthis.data = args.data;\n\t\tthis.primarySaleHappened = args.primarySaleHappened;\n\t\tthis.isMutable = args.isMutable;\n\t\tthis.editionNonce = args.editionNonce;\n\t}\n}\n\nclass CreateMetadataArgs {\n\tinstruction: number = 0;\n\tdata: Data;\n\tisMutable: boolean;\n\n\tconstructor(args: { data: Data; isMutable: boolean }) {\n\t\tthis.data = args.data;\n\t\tthis.isMutable = args.isMutable;\n\t}\n}\nclass UpdateMetadataArgs {\n\tinstruction: number = 1;\n\tdata: Data | null;\n\t// Not used by this app, just required for instruction\n\tupdateAuthority: StringPublicKey | null;\n\tprimarySaleHappened: boolean | null;\n\tconstructor(args: {\n\t\tdata?: Data;\n\t\tupdateAuthority?: string;\n\t\tprimarySaleHappened: boolean | null;\n\t}) {\n\t\tthis.data = args.data ? args.data : null;\n\t\tthis.updateAuthority = args.updateAuthority ? args.updateAuthority : null;\n\t\tthis.primarySaleHappened = args.primarySaleHappened;\n\t}\n}\n\nclass CreateMasterEditionArgs {\n\tinstruction: number = 10;\n\tmaxSupply: typeof BN | null;\n\tconstructor(args: { maxSupply: typeof BN | null }) {\n\t\tthis.maxSupply = args.maxSupply;\n\t}\n}\n\nclass MintPrintingTokensArgs {\n\tinstruction: number = 9;\n\tsupply: typeof BN;\n\n\tconstructor(args: { supply: typeof BN }) {\n\t\tthis.supply = args.supply;\n\t}\n}\n\nexport const METADATA_SCHEMA = new Map<any, any>([\n\t[\n\t\tCreateMetadataArgs,\n\t\t{\n\t\t\tkind: 'struct',\n\t\t\tfields: [\n\t\t\t\t['instruction', 'u8'],\n\t\t\t\t['data', Data],\n\t\t\t\t['isMutable', 'u8'], // bool\n\t\t\t],\n\t\t},\n\t],\n\t[\n\t\tUpdateMetadataArgs,\n\t\t{\n\t\t\tkind: 'struct',\n\t\t\tfields: [\n\t\t\t\t['instruction', 'u8'],\n\t\t\t\t['data', { kind: 'option', type: Data }],\n\t\t\t\t['updateAuthority', { kind: 'option', type: 'pubkeyAsString' }],\n\t\t\t\t['primarySaleHappened', { kind: 'option', type: 'u8' }],\n\t\t\t],\n\t\t},\n\t],\n\n\t[\n\t\tCreateMasterEditionArgs,\n\t\t{\n\t\t\tkind: 'struct',\n\t\t\tfields: [\n\t\t\t\t['instruction', 'u8'],\n\t\t\t\t['maxSupply', { kind: 'option', type: 'u64' }],\n\t\t\t],\n\t\t},\n\t],\n\t[\n\t\tMintPrintingTokensArgs,\n\t\t{\n\t\t\tkind: 'struct',\n\t\t\tfields: [\n\t\t\t\t['instruction', 'u8'],\n\t\t\t\t['supply', 'u64'],\n\t\t\t],\n\t\t},\n\t],\n\t[\n\t\tMasterEditionV1,\n\t\t{\n\t\t\tkind: 'struct',\n\t\t\tfields: [\n\t\t\t\t['key', 'u8'],\n\t\t\t\t['supply', 'u64'],\n\t\t\t\t['maxSupply', { kind: 'option', type: 'u64' }],\n\t\t\t\t['printingMint', 'pubkeyAsString'],\n\t\t\t\t['oneTimePrintingAuthorizationMint', 'pubkeyAsString'],\n\t\t\t],\n\t\t},\n\t],\n\t[\n\t\tMasterEditionV2,\n\t\t{\n\t\t\tkind: 'struct',\n\t\t\tfields: [\n\t\t\t\t['key', 'u8'],\n\t\t\t\t['supply', 'u64'],\n\t\t\t\t['maxSupply', { kind: 'option', type: 'u64' }],\n\t\t\t],\n\t\t},\n\t],\n\t[\n\t\tEdition,\n\t\t{\n\t\t\tkind: 'struct',\n\t\t\tfields: [\n\t\t\t\t['key', 'u8'],\n\t\t\t\t['parent', 'pubkeyAsString'],\n\t\t\t\t['edition', 'u64'],\n\t\t\t],\n\t\t},\n\t],\n\t[\n\t\tData,\n\t\t{\n\t\t\tkind: 'struct',\n\t\t\tfields: [\n\t\t\t\t['name', 'string'],\n\t\t\t\t['symbol', 'string'],\n\t\t\t\t['uri', 'string'],\n\t\t\t\t['sellerFeeBasisPoints', 'u16'],\n\t\t\t\t['creators', { kind: 'option', type: [Creator] }],\n\t\t\t],\n\t\t},\n\t],\n\t[\n\t\tCreator,\n\t\t{\n\t\t\tkind: 'struct',\n\t\t\tfields: [\n\t\t\t\t['address', 'pubkeyAsString'],\n\t\t\t\t['verified', 'u8'],\n\t\t\t\t['share', 'u8'],\n\t\t\t],\n\t\t},\n\t],\n\t[\n\t\tMetadata,\n\t\t{\n\t\t\tkind: 'struct',\n\t\t\tfields: [\n\t\t\t\t['key', 'u8'],\n\t\t\t\t['updateAuthority', 'pubkeyAsString'],\n\t\t\t\t['mint', 'pubkeyAsString'],\n\t\t\t\t['data', Data],\n\t\t\t\t['primarySaleHappened', 'u8'], // bool\n\t\t\t\t['isMutable', 'u8'], // bool\n\t\t\t],\n\t\t},\n\t],\n\t[\n\t\tEditionMarker,\n\t\t{\n\t\t\tkind: 'struct',\n\t\t\tfields: [\n\t\t\t\t['key', 'u8'],\n\t\t\t\t['ledger', [31]],\n\t\t\t],\n\t\t},\n\t],\n]);\n\n// eslint-disable-next-line no-control-regex\nconst METADATA_REPLACE = new RegExp('\\u0000', 'g');\n\nexport const decodeMetadata = (buffer: Buffer): Metadata => {\n\tconst metadata = deserializeUnchecked(\n\t\tMETADATA_SCHEMA,\n\t\tMetadata,\n\t\tbuffer,\n\t) as Metadata;\n\tmetadata.data.name = metadata.data.name.replace(METADATA_REPLACE, '');\n\tmetadata.data.uri = metadata.data.uri.replace(METADATA_REPLACE, '');\n\tmetadata.data.symbol = metadata.data.symbol.replace(METADATA_REPLACE, '');\n\treturn metadata;\n};\n","/Users/kirk/Solana/grape-art/src/utils/cyberConnect/types.ts",[],"/Users/kirk/Solana/grape-art/src/utils/auctionHouse/cancelWithdrawOffer.ts",["559","560","561","562"],"import {\n    ENV_AH,\n    AUCTION_HOUSE_ADDRESS,\n    WRAPPED_SOL_MINT,\n    TOKEN_PROGRAM_ID,\n  } from './helpers/constants';\nimport { PublicKey, SystemProgram, TransactionInstruction } from '@solana/web3.js'\nimport { BN, web3 } from '@project-serum/anchor';\nimport { GRAPE_RPC_ENDPOINT, OTHER_MARKETPLACES } from '../../utils/grapeTools/constants';\nimport {InstructionsAndSignersSet} from \"./helpers/types\";\n\nimport {\n    loadAuctionHouseProgram,\n    getAuctionHouseTradeState,\n    getTokenAmount,\n    getAtaForMint,\n    getAuctionHouseBuyerEscrow,\n  } from './helpers/accounts';\nimport { ASSOCIATED_TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport { getPriceWithMantissa } from './helpers/various';\n\nfunction convertSolVal(sol: any){\n  let sol_precision = 6;\n  return +sol/1000000000;\n}\n\nexport async function cancelWithdrawOffer(offerAmount: number, mint: string, buyerWalletKey: PublicKey, mintOwner: any): Promise<InstructionsAndSignersSet> {\n    //START CANCEL\n    let tokenSize = 1;\n    const auctionHouseKey = new web3.PublicKey(AUCTION_HOUSE_ADDRESS);\n    const mintKey = new web3.PublicKey(mint);\n    let anchorProgram = await loadAuctionHouseProgram(null, ENV_AH, GRAPE_RPC_ENDPOINT);\n    const auctionHouseObj = await anchorProgram.account.auctionHouse.fetch(auctionHouseKey,);\n    const sellerWalletKey = new web3.PublicKey(mintOwner);\n\n    //check if escrow amount already exists to determine if we need to deposit amount to grapevine \n    const escrow = (await getAuctionHouseBuyerEscrow(auctionHouseKey, buyerWalletKey))[0];\n    const escrow_amount = await getTokenAmount(anchorProgram,escrow,auctionHouseObj.treasuryMint,);\n    const escrowSolAmount = convertSolVal(escrow_amount);\n\n    const buyPriceAdjusted = new BN(\n      await getPriceWithMantissa(\n        offerAmount,\n        //@ts-ignore\n        auctionHouseObj.treasuryMint,\n        buyerWalletKey,\n        anchorProgram,\n      ),\n    );\n    //console.log('buyPriceAdjusted:', buyPriceAdjusted);\n    const tokenSizeAdjusted = new BN(\n      await getPriceWithMantissa(\n        tokenSize,\n        mintKey,\n        buyerWalletKey,\n        anchorProgram,\n      ),\n    );\n    \n    //const tokenAccountKey = (await getAtaForMint(mintKey, buyerWalletKey))[0];\n    const tokenAccountKey = (await getAtaForMint(mintKey, sellerWalletKey))[0];\n    \n    const tradeState = (\n          await getAuctionHouseTradeState(\n              auctionHouseKey,\n              buyerWalletKey,\n              tokenAccountKey,\n              //@ts-ignore\n              auctionHouseObj.treasuryMint,\n              mintKey,\n              tokenSizeAdjusted,\n              buyPriceAdjusted,\n          )\n    )[0];  \n    \n    const signers: any[] = [];\n\n    const instruction = anchorProgram.instruction.cancel(\n      buyPriceAdjusted,\n      tokenSizeAdjusted,\n      {\n        accounts: {\n          wallet: buyerWalletKey,\n          tokenAccount: tokenAccountKey,\n          tokenMint: mintKey,\n          //@ts-ignore\n          authority: auctionHouseObj.authority,\n          auctionHouse: auctionHouseKey,\n          //@ts-ignore\n          auctionHouseFeeAccount: auctionHouseObj.auctionHouseFeeAccount,\n          tradeState,\n          tokenProgram: TOKEN_PROGRAM_ID,\n        },\n        signers,\n      },\n    );\n    \n    const instructions = [instruction];\n    //END CANCEL\n\n    //START WITHDRAW\n    let withdrawAmmount = 0;\n    if (escrowSolAmount < offerAmount){\n      withdrawAmmount = escrowSolAmount;\n    } else {\n      withdrawAmmount = offerAmount;\n    }\n    const amountAdjusted = await getPriceWithMantissa(\n      withdrawAmmount,\n      //@ts-ignore\n      auctionHouseObj.treasuryMint,\n      buyerWalletKey,\n      anchorProgram,\n    );\n\n    const [escrowPaymentAccount, bump] = await getAuctionHouseBuyerEscrow(\n      auctionHouseKey,\n      buyerWalletKey,\n    );\n\n    const isNative = auctionHouseObj.treasuryMint.equals(WRAPPED_SOL_MINT);\n\n    const ata = (\n      await getAtaForMint(\n        //@ts-ignore\n        auctionHouseObj.treasuryMint,\n        buyerWalletKey,\n      )\n    )[0];\n\n    const transferAuthority = web3.Keypair.generate();\n    //const signers = isNative ? [] : [transferAuthority];\n    const currBal = await getTokenAmount(\n      anchorProgram,\n      escrowPaymentAccount,\n      //@ts-ignore\n      auctionHouseObj.treasuryMint,\n    ); \n\n    const instruction2 = anchorProgram.instruction.withdraw(\n      bump,\n      new BN(amountAdjusted),\n      {\n        accounts: {\n          wallet: buyerWalletKey,\n          receiptAccount: isNative ? buyerWalletKey : ata,\n          escrowPaymentAccount,\n          //@ts-ignore\n          treasuryMint: auctionHouseObj.treasuryMint,\n          //@ts-ignore\n          authority: auctionHouseObj.authority,\n          auctionHouse: auctionHouseKey,\n          //@ts-ignore\n          auctionHouseFeeAccount: auctionHouseObj.auctionHouseFeeAccount,\n          tokenProgram: TOKEN_PROGRAM_ID,\n          systemProgram: web3.SystemProgram.programId,\n          rent: web3.SYSVAR_RENT_PUBKEY,\n          ataProgram: ASSOCIATED_TOKEN_PROGRAM_ID,\n        },\n        signers,\n      },\n    );\n\n    instructions.push(instruction2);\n\n    const GRAPE_AH_MEMO = {\n      state:5, // status (0: withdraw, 1: offer, 2: listing, 3: buy/execute (from listing), 4: buy/execute(accept offer), 5: cancel)\n      ah:auctionHouseKey.toString(), // pk\n      mint:mint.toString(), // mint\n      amount:buyPriceAdjusted.toNumber() // price\n    };\n\n    let derivedMintPDA = await web3.PublicKey.findProgramAddress([Buffer.from((mintKey).toBuffer())], auctionHouseKey);\n    let derivedBuyerPDA = await web3.PublicKey.findProgramAddress([Buffer.from((buyerWalletKey).toBuffer())], auctionHouseKey);\n    let derivedOwnerPDA = await web3.PublicKey.findProgramAddress([Buffer.from((new PublicKey(mintOwner)).toBuffer())], auctionHouseKey);\n  \n\n    instructions.push(\n      SystemProgram.transfer({\n        fromPubkey: buyerWalletKey,\n        toPubkey: derivedMintPDA[0],\n        lamports: 0,\n      })\n    );\n\n    instructions.push(\n      SystemProgram.transfer({\n          fromPubkey: buyerWalletKey,\n          toPubkey: derivedBuyerPDA[0],\n          lamports: 0,\n      })\n    );\n    instructions.push(\n      SystemProgram.transfer({\n          fromPubkey: buyerWalletKey,\n          toPubkey: derivedOwnerPDA[0],\n          lamports: 0,\n      })\n    );\n    instructions.push(\n      new TransactionInstruction({\n          keys: [{ pubkey: buyerWalletKey, isSigner: true, isWritable: true }],\n          data: Buffer.from(JSON.stringify(GRAPE_AH_MEMO), 'utf-8'),\n          programId: new PublicKey(\"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr\"),\n      })\n    );\n\n    return {\n      signers: signers,\n      instructions: instructions\n    }\n\n}","/Users/kirk/Solana/grape-art/src/utils/cyberConnect/query.ts",[],"/Users/kirk/Solana/grape-art/src/utils/cyberConnect/helper.ts",[],"/Users/kirk/Solana/grape-art/src/utils/auctionHouse/cancelOffer.ts",["563"],"import {\n    ENV_AH,\n    AUCTION_HOUSE_ADDRESS,\n    TOKEN_PROGRAM_ID,\n  } from './helpers/constants';\nimport { PublicKey, SystemProgram, TransactionInstruction } from '@solana/web3.js'\nimport { BN, web3 } from '@project-serum/anchor';\nimport { GRAPE_RPC_ENDPOINT, OTHER_MARKETPLACES } from '../../utils/grapeTools/constants';\nimport {InstructionsAndSignersSet} from \"./helpers/types\";\n\nimport {\n    loadAuctionHouseProgram,\n    getAuctionHouseTradeState,\n    getAtaForMint,\n  } from './helpers/accounts';\nimport { getPriceWithMantissa } from './helpers/various';\n\nexport async function cancelOffer(offerAmount: number, mint: string, buyerWalletKey: PublicKey, mintOwner: any): Promise<InstructionsAndSignersSet> {\n\n    let tokenSize = 1;\n    const auctionHouseKey = new web3.PublicKey(AUCTION_HOUSE_ADDRESS);\n    const mintKey = new web3.PublicKey(mint);\n    let anchorProgram = await loadAuctionHouseProgram(null, ENV_AH, GRAPE_RPC_ENDPOINT);\n    const auctionHouseObj = await anchorProgram.account.auctionHouse.fetch(auctionHouseKey,);\n    const sellerWalletKey = new web3.PublicKey(mintOwner);\n    const buyPriceAdjusted = new BN(\n      await getPriceWithMantissa(\n        offerAmount,\n        //@ts-ignore\n        auctionHouseObj.treasuryMint,\n        buyerWalletKey,\n        anchorProgram,\n      ),\n    );\n    //console.log('buyPriceAdjusted:', buyPriceAdjusted);\n    const tokenSizeAdjusted = new BN(\n      await getPriceWithMantissa(\n        tokenSize,\n        mintKey,\n        buyerWalletKey,\n        anchorProgram,\n      ),\n    );\n    //const tokenAccountKey = (await getAtaForMint(mintKey, buyerWalletKey))[0];\n    const tokenAccountKey = (await getAtaForMint(mintKey, sellerWalletKey))[0];\n    const tradeState = (\n          await getAuctionHouseTradeState(\n              auctionHouseKey,\n              buyerWalletKey,\n              tokenAccountKey,\n              //@ts-ignore\n              auctionHouseObj.treasuryMint,\n              mintKey,\n              tokenSizeAdjusted,\n              buyPriceAdjusted,\n          )\n    )[0];  \n    //console.log('tradeState:', tradeState.toBase58());\n    const signers: any[] = [];\n\n    const instruction = anchorProgram.instruction.cancel(\n      buyPriceAdjusted,\n      tokenSizeAdjusted,\n      {\n        accounts: {\n          wallet: buyerWalletKey,\n          tokenAccount: tokenAccountKey,\n          tokenMint: mintKey,\n          //@ts-ignore\n          authority: auctionHouseObj.authority,\n          auctionHouse: auctionHouseKey,\n          //@ts-ignore\n          auctionHouseFeeAccount: auctionHouseObj.auctionHouseFeeAccount,\n          tradeState,\n          tokenProgram: TOKEN_PROGRAM_ID,\n        },\n        signers,\n      },\n    );\n    //console.log('instruction:', instruction);\n    //console.log(\"instruction: \"+JSON.stringify(instruction));\n    const instructions = [instruction];\n\n    let derivedMintPDA = await web3.PublicKey.findProgramAddress([Buffer.from((mintKey).toBuffer())], auctionHouseKey);\n    let derivedBuyerPDA = await web3.PublicKey.findProgramAddress([Buffer.from((buyerWalletKey).toBuffer())], auctionHouseKey);\n    let derivedOwnerPDA = await web3.PublicKey.findProgramAddress([Buffer.from((new PublicKey(mintOwner)).toBuffer())], auctionHouseKey);\n  \n    const GRAPE_AH_MEMO = {\n      state:5, // status (0: withdraw, 1: offer, 2: listing, 3: buy/execute (from listing), 4: buy/execute(accept offer), 5: cancel)\n      ah:auctionHouseKey.toString(), // pk\n      mint:mint.toString(), // mint\n      amount:buyPriceAdjusted.toNumber() // price\n    };\n\n    instructions.push(\n      SystemProgram.transfer({\n        fromPubkey: buyerWalletKey,\n        toPubkey: derivedMintPDA[0],\n        lamports: 0,\n      })\n    );\n\n    instructions.push(\n      SystemProgram.transfer({\n          fromPubkey: buyerWalletKey,\n          toPubkey: derivedBuyerPDA[0],\n          lamports: 0,\n      })\n    );\n    instructions.push(\n      SystemProgram.transfer({\n          fromPubkey: buyerWalletKey,\n          toPubkey: derivedOwnerPDA[0],\n          lamports: 0,\n      })\n    );\n    instructions.push(\n      new TransactionInstruction({\n          keys: [{ pubkey: buyerWalletKey, isSigner: true, isWritable: true }],\n          data: Buffer.from(JSON.stringify(GRAPE_AH_MEMO), 'utf-8'),\n          programId: new PublicKey(\"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr\"),\n      })\n    );\n\n    return {\n      signers: signers,\n      instructions: instructions\n    }\n\n}","/Users/kirk/Solana/grape-art/src/utils/auctionHouse/helpers/accounts.ts",["564","565","566","567","568"],"import {\n  Keypair,\n  PublicKey,\n  SystemProgram,\n  AccountInfo,\n} from '@solana/web3.js';\nimport {\n  CANDY_MACHINE,\n  CANDY_MACHINE_PROGRAM_ID,\n  SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n  TOKEN_METADATA_PROGRAM_ID,\n  TOKEN_PROGRAM_ID,\n  FAIR_LAUNCH_PROGRAM_ID,\n  AUCTION_HOUSE_PROGRAM_ID,\n  AUCTION_HOUSE,\n  FEE_PAYER,\n  TREASURY,\n  WRAPPED_SOL_MINT,\n  TOKEN_ENTANGLEMENT_PROGRAM_ID,\n  TOKEN_ENTANGLER,\n  ESCROW,\n  B,\n  A,\n} from './constants';\nimport * as anchor from '@project-serum/anchor';\n//import { Wallet } from '@solana/wallet-adapter-react';\nimport fs from 'fs';\n//import { createConfigAccount } from './instructions';\nimport { web3 } from '@project-serum/anchor';\nimport log from 'loglevel';\nimport { AccountLayout, u64 } from '@solana/spl-token';\n\nexport type AccountAndPubkey = {\n  pubkey: string;\n  account: AccountInfo<Buffer>;\n};\n\nexport type StringPublicKey = string;\n\n// TODO: expose in spl package\nexport const deserializeAccount = (data: Buffer) => {\n  const accountInfo = AccountLayout.decode(data);\n  accountInfo.mint = new PublicKey(accountInfo.mint);\n  accountInfo.owner = new PublicKey(accountInfo.owner);\n  accountInfo.amount = u64.fromBuffer(accountInfo.amount);\n\n  if (accountInfo.delegateOption === 0) {\n    accountInfo.delegate = null;\n    accountInfo.delegatedAmount = new u64(0);\n  } else {\n    accountInfo.delegate = new PublicKey(accountInfo.delegate);\n    accountInfo.delegatedAmount = u64.fromBuffer(accountInfo.delegatedAmount);\n  }\n\n  accountInfo.isInitialized = accountInfo.state !== 0;\n  accountInfo.isFrozen = accountInfo.state === 2;\n\n  if (accountInfo.isNativeOption === 1) {\n    accountInfo.rentExemptReserve = u64.fromBuffer(accountInfo.isNative);\n    accountInfo.isNative = true;\n  } else {\n    accountInfo.rentExemptReserve = null;\n    accountInfo.isNative = false;\n  }\n\n  if (accountInfo.closeAuthorityOption === 0) {\n    accountInfo.closeAuthority = null;\n  } else {\n    accountInfo.closeAuthority = new PublicKey(accountInfo.closeAuthority);\n  }\n\n  return accountInfo;\n};\n\nexport const createConfig = async function (\n  anchorProgram: anchor.Program,\n  payerWallet: Keypair,\n  configData: {\n    maxNumberOfLines: anchor.BN;\n    symbol: string;\n    sellerFeeBasisPoints: number;\n    isMutable: boolean;\n    maxSupply: anchor.BN;\n    retainAuthority: boolean;\n    creators: {\n      address: PublicKey;\n      verified: boolean;\n      share: number;\n    }[];\n  },\n) {\n  const configAccount = Keypair.generate();\n  const uuid = uuidFromConfigPubkey(configAccount.publicKey);\n\n  if (!configData.creators || configData.creators.length === 0) {\n    throw new Error(`Invalid config, there must be at least one creator.`);\n  }\n\n  const totalShare = (configData.creators || []).reduce(\n    (acc, curr) => acc + curr.share,\n    0,\n  );\n\n  /*if (totalShare !== 100) {\n    throw new Error(`Invalid config, creators shares must add up to 100`);\n  }\n\n  return {\n    config: configAccount.publicKey,\n    uuid,\n    txId: await anchorProgram.rpc.initializeConfig(\n      {\n        uuid,\n        ...configData,\n      },\n      {\n        accounts: {\n          config: configAccount.publicKey,\n          authority: payerWallet.publicKey,\n          payer: payerWallet.publicKey,\n          systemProgram: SystemProgram.programId,\n          rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n        },\n        signers: [payerWallet, configAccount],\n        instructions: [\n          await createConfigAccount(\n            anchorProgram,\n            configData,\n            payerWallet.publicKey,\n            configAccount.publicKey,\n          ),\n        ],\n      },\n    ),\n  };*/\n};\n\nexport function uuidFromConfigPubkey(configAccount: PublicKey) {\n  return configAccount.toBase58().slice(0, 6);\n}\n\nexport const getTokenWallet = async function (\n  wallet: PublicKey,\n  mint: PublicKey,\n) {\n  return (\n    await PublicKey.findProgramAddress(\n      [wallet.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\n      SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    )\n  )[0];\n};\n\nexport const getCandyMachineAddress = async (\n  config: anchor.web3.PublicKey,\n  uuid: string,\n): Promise<[PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from(CANDY_MACHINE), config.toBuffer(), Buffer.from(uuid)],\n    CANDY_MACHINE_PROGRAM_ID,\n  );\n};\n\nexport const getConfig = async (\n  authority: anchor.web3.PublicKey,\n  uuid: string,\n): Promise<[PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from(CANDY_MACHINE), authority.toBuffer(), Buffer.from(uuid)],\n    CANDY_MACHINE_PROGRAM_ID,\n  );\n};\n\nexport const getTokenMint = async (\n  authority: anchor.web3.PublicKey,\n  uuid: string,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [\n      Buffer.from('fair_launch'),\n      authority.toBuffer(),\n      Buffer.from('mint'),\n      Buffer.from(uuid),\n    ],\n    FAIR_LAUNCH_PROGRAM_ID,\n  );\n};\n\nexport const getFairLaunch = async (\n  tokenMint: anchor.web3.PublicKey,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from('fair_launch'), tokenMint.toBuffer()],\n    FAIR_LAUNCH_PROGRAM_ID,\n  );\n};\n\nexport const getFairLaunchTicket = async (\n  tokenMint: anchor.web3.PublicKey,\n  buyer: anchor.web3.PublicKey,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from('fair_launch'), tokenMint.toBuffer(), buyer.toBuffer()],\n    FAIR_LAUNCH_PROGRAM_ID,\n  );\n};\n\nexport const getFairLaunchLotteryBitmap = async (\n  tokenMint: anchor.web3.PublicKey,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from('fair_launch'), tokenMint.toBuffer(), Buffer.from('lottery')],\n    FAIR_LAUNCH_PROGRAM_ID,\n  );\n};\n\nexport const getFairLaunchTicketSeqLookup = async (\n  tokenMint: anchor.web3.PublicKey,\n  seq: anchor.BN,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from('fair_launch'), tokenMint.toBuffer(), seq.toBuffer('le', 8)],\n    FAIR_LAUNCH_PROGRAM_ID,\n  );\n};\n\nexport const getAtaForMint = async (\n  mint: anchor.web3.PublicKey,\n  buyer: anchor.web3.PublicKey,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [buyer.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\n    SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n  );\n};\n\nexport const getParticipationMint = async (\n  authority: anchor.web3.PublicKey,\n  uuid: string,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [\n      Buffer.from('fair_launch'),\n      authority.toBuffer(),\n      Buffer.from('mint'),\n      Buffer.from(uuid),\n      Buffer.from('participation'),\n    ],\n    FAIR_LAUNCH_PROGRAM_ID,\n  );\n};\n\nexport const getParticipationToken = async (\n  authority: anchor.web3.PublicKey,\n  uuid: string,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [\n      Buffer.from('fair_launch'),\n      authority.toBuffer(),\n      Buffer.from('mint'),\n      Buffer.from(uuid),\n      Buffer.from('participation'),\n      Buffer.from('account'),\n    ],\n    FAIR_LAUNCH_PROGRAM_ID,\n  );\n};\n\nexport const getTreasury = async (\n  tokenMint: anchor.web3.PublicKey,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from('fair_launch'), tokenMint.toBuffer(), Buffer.from('treasury')],\n    FAIR_LAUNCH_PROGRAM_ID,\n  );\n};\n\nexport const getMetadata = async (\n  mint: anchor.web3.PublicKey,\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from('metadata'),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID,\n    )\n  )[0];\n};\n\nexport const getMasterEdition = async (\n  mint: anchor.web3.PublicKey,\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from('metadata'),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from('edition'),\n      ],\n      TOKEN_METADATA_PROGRAM_ID,\n    )\n  )[0];\n};\n\nexport const getEditionMarkPda = async (\n  mint: anchor.web3.PublicKey,\n  edition: number,\n): Promise<anchor.web3.PublicKey> => {\n  const editionNumber = Math.floor(edition / 248);\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from('metadata'),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from('edition'),\n        Buffer.from(editionNumber.toString()),\n      ],\n      TOKEN_METADATA_PROGRAM_ID,\n    )\n  )[0];\n};\n\nexport const getAuctionHouse = async (\n  creator: anchor.web3.PublicKey,\n  treasuryMint: anchor.web3.PublicKey,\n): Promise<[PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from(AUCTION_HOUSE), creator.toBuffer(), treasuryMint.toBuffer()],\n    AUCTION_HOUSE_PROGRAM_ID,\n  );\n};\n\nexport const getAuctionHouseProgramAsSigner = async (): Promise<\n  [PublicKey, number]\n> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from(AUCTION_HOUSE), Buffer.from('signer')],\n    AUCTION_HOUSE_PROGRAM_ID,\n  );\n};\n\nexport const getAuctionHouseFeeAcct = async (\n  auctionHouse: anchor.web3.PublicKey,\n): Promise<[PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [\n      Buffer.from(AUCTION_HOUSE),\n      auctionHouse.toBuffer(),\n      Buffer.from(FEE_PAYER),\n    ],\n    AUCTION_HOUSE_PROGRAM_ID,\n  );\n};\n\nexport const getAuctionHouseTreasuryAcct = async (\n  auctionHouse: anchor.web3.PublicKey,\n): Promise<[PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [\n      Buffer.from(AUCTION_HOUSE),\n      auctionHouse.toBuffer(),\n      Buffer.from(TREASURY),\n    ],\n    AUCTION_HOUSE_PROGRAM_ID,\n  );\n};\n\nexport const getAuctionHouseBuyerEscrow = async (\n  auctionHouse: anchor.web3.PublicKey,\n  wallet: anchor.web3.PublicKey,\n): Promise<[PublicKey, number]> => {\n  //console.log(\"get escrow inside\");\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from(AUCTION_HOUSE), auctionHouse.toBuffer(), wallet.toBuffer()],\n    AUCTION_HOUSE_PROGRAM_ID,\n  );\n};\n\nexport const getAuctionHouseTradeState = async (\n  auctionHouse: anchor.web3.PublicKey,\n  wallet: anchor.web3.PublicKey,\n  tokenAccount: anchor.web3.PublicKey,\n  treasuryMint: anchor.web3.PublicKey,\n  tokenMint: anchor.web3.PublicKey,\n  tokenSize: anchor.BN,\n  buyPrice: anchor.BN,\n): Promise<[PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [\n      Buffer.from(AUCTION_HOUSE),\n      wallet.toBuffer(),\n      auctionHouse.toBuffer(),\n      tokenAccount.toBuffer(),\n      treasuryMint.toBuffer(),\n      tokenMint.toBuffer(),\n      //nmaz needed to change otherwise would crash (browserify compatibility)\n      //buyPrice.toBuffer('le', 8),\n      buyPrice.toArrayLike(Buffer,'le',8),\n      //tokenSize.toBuffer('le', 8),\n      tokenSize.toArrayLike(Buffer,'le',8),\n    ],\n    AUCTION_HOUSE_PROGRAM_ID,\n  );\n};\n\nexport const getTokenEntanglement = async (\n  mintA: anchor.web3.PublicKey,\n  mintB: anchor.web3.PublicKey,\n): Promise<[PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from(TOKEN_ENTANGLER), mintA.toBuffer(), mintB.toBuffer()],\n    TOKEN_ENTANGLEMENT_PROGRAM_ID,\n  );\n};\n\nexport const getTokenEntanglementEscrows = async (\n  mintA: anchor.web3.PublicKey,\n  mintB: anchor.web3.PublicKey,\n): Promise<[PublicKey, number, PublicKey, number]> => {\n  return [\n    ...(await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(TOKEN_ENTANGLER),\n        mintA.toBuffer(),\n        mintB.toBuffer(),\n        Buffer.from(ESCROW),\n        Buffer.from(A),\n      ],\n      TOKEN_ENTANGLEMENT_PROGRAM_ID,\n    )),\n    ...(await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(TOKEN_ENTANGLER),\n        mintA.toBuffer(),\n        mintB.toBuffer(),\n        Buffer.from(ESCROW),\n        Buffer.from(B),\n      ],\n      TOKEN_ENTANGLEMENT_PROGRAM_ID,\n    )),\n  ];\n};\n\n\n\nexport function loadWalletKey(keypair: any): Keypair {\n  if (!keypair || keypair == '') {\n    throw new Error('Keypair is required!');\n  }\n  const loaded = Keypair.fromSecretKey(\n    //new Uint8Array(JSON.parse(fs.readFileSync(keypair).toString())),\n    //new Uint8Array(JSON.parse((keypair))),\n    new Uint8Array(keypair),\n  );\n  log.info(`wallet public key: ${loaded.publicKey}`);\n  //console.log(`wallet public key: ${loaded.publicKey}`);\n  return loaded;\n}\n\n/*\nexport async function loadCandyProgram(\n  walletKeyPair: Keypair,\n  env: string,\n  customRpcUrl?: string,\n) {\n  if (customRpcUrl) console.log('USING CUSTOM URL', customRpcUrl);\n\n  // @ts-ignore\n  const solConnection = new anchor.web3.Connection(\n    //@ts-ignore\n    customRpcUrl || web3.clusterApiUrl(env),\n  );\n\n  const walletWrapper = new anchor.Wallet(walletKeyPair);\n  const provider = new anchor.Provider(solConnection, walletWrapper, {\n    preflightCommitment: 'recent',\n  });\n  const idl = await anchor.Program.fetchIdl(CANDY_MACHINE_PROGRAM_ID, provider);\n  const program = new anchor.Program(idl, CANDY_MACHINE_PROGRAM_ID, provider);\n  log.debug('program id from anchor', program.programId.toBase58());\n  return program;\n}*/\n\n/*\nexport async function loadFairLaunchProgram(\n  walletKeyPair: Keypair,\n  env: string,\n  customRpcUrl?: string,\n) {\n  if (customRpcUrl) console.log('USING CUSTOM URL', customRpcUrl);\n\n  // @ts-ignore\n  const solConnection = new anchor.web3.Connection(\n    //@ts-ignore\n    customRpcUrl || web3.clusterApiUrl(env),\n  );\n  const walletWrapper = new anchor.Wallet(walletKeyPair);\n  const provider = new anchor.Provider(solConnection, walletWrapper, {\n    preflightCommitment: 'recent',\n  });\n  const idl = await anchor.Program.fetchIdl(FAIR_LAUNCH_PROGRAM_ID, provider);\n\n  return new anchor.Program(idl, FAIR_LAUNCH_PROGRAM_ID, provider);\n}\n*/\nexport async function loadAuctionHouseProgram(\n  walletKeyPair: Keypair,\n  env: string,\n  customRpcUrl?: string,\n) {\n  if (customRpcUrl) console.log('USING CUSTOM URL', customRpcUrl);\n\n  // @ts-ignore\n  const solConnection = new anchor.web3.Connection(\n    //@ts-ignore\n    customRpcUrl || web3.clusterApiUrl(env),\n  );\n  \n  const walletWrapper = new anchor.Wallet(walletKeyPair);\n  const provider = new anchor.Provider(solConnection, walletWrapper, {\n    preflightCommitment: 'recent',\n  });\n  const idl = await anchor.Program.fetchIdl(AUCTION_HOUSE_PROGRAM_ID, provider);\n\n  return new anchor.Program(idl, AUCTION_HOUSE_PROGRAM_ID, provider);\n}\n\n/*\nexport async function loadTokenEntanglementProgream(\n  walletKeyPair: Keypair,\n  env: string,\n  customRpcUrl?: string,\n) {\n  if (customRpcUrl) console.log('USING CUSTOM URL', customRpcUrl);\n\n  // @ts-ignore\n  const solConnection = new anchor.web3.Connection(\n    //@ts-ignore\n    customRpcUrl || web3.clusterApiUrl(env),\n  );\n  const walletWrapper = new anchor.Wallet(walletKeyPair);\n  const provider = new anchor.Provider(solConnection, walletWrapper, {\n    preflightCommitment: 'recent',\n  });\n  const idl = await anchor.Program.fetchIdl(\n    TOKEN_ENTANGLEMENT_PROGRAM_ID,\n    provider,\n  );\n\n  return new anchor.Program(idl, TOKEN_ENTANGLEMENT_PROGRAM_ID, provider);\n}\n*/\n\nexport async function getTokenAmount(\n  anchorProgram: anchor.Program,\n  account: anchor.web3.PublicKey,\n  mint: anchor.web3.PublicKey,\n): Promise<number> {\n  let amount = 0;\n  if (!mint.equals(WRAPPED_SOL_MINT)) {\n    try {\n      const token =\n        await anchorProgram.provider.connection.getTokenAccountBalance(account);\n      amount = token.value.uiAmount * Math.pow(10, token.value.decimals);\n    } catch (e) {\n      log.error(e);\n      log.info(\n        'Account ',\n        account.toBase58(),\n        'didnt return value. Assuming 0 tokens.',\n      );\n    }\n  } else {\n    amount = await anchorProgram.provider.connection.getBalance(account);\n  }\n  return amount;\n}\n\nexport async function getProgramAccounts(\n  connection: anchor.web3.Connection,\n  programId: string,\n  configOrCommitment?: any,\n): Promise<AccountAndPubkey[]> {\n  const extra: any = {};\n  let commitment;\n  //let encoding;\n\n  if (configOrCommitment) {\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else {\n      commitment = configOrCommitment.commitment;\n      //encoding = configOrCommitment.encoding;\n\n      if (configOrCommitment.dataSlice) {\n        extra.dataSlice = configOrCommitment.dataSlice;\n      }\n\n      if (configOrCommitment.filters) {\n        extra.filters = configOrCommitment.filters;\n      }\n    }\n  }\n\n  const args = connection._buildArgs([programId], commitment, 'base64', extra);\n  const unsafeRes = await (connection as any)._rpcRequest(\n    'getProgramAccounts',\n    args,\n  );\n\n  return unsafeResAccounts(unsafeRes.result);\n}\n\n//function unsafeAccount(account: anchor.web3.AccountInfo<string[]>) {\nfunction unsafeAccount(account: anchor.web3.AccountInfo<[string, string]>) {\n    return {\n    // TODO: possible delay parsing could be added here\n    data: Buffer.from(account.data[0], 'base64'),\n    executable: account.executable,\n    lamports: account.lamports,\n    // TODO: maybe we can do it in lazy way? or just use string\n    owner: account.owner,\n  } as anchor.web3.AccountInfo<Buffer>;\n}\n\nfunction unsafeResAccounts(\n  data: Array<{\n    //account: anchor.web3.AccountInfo<string[]>;\n    account: anchor.web3.AccountInfo<[string, string]>;\n    pubkey: string;\n  }>,\n) {\n  return data.map(item => ({\n    account: unsafeAccount(item.account),\n    pubkey: item.pubkey,\n  }));\n}\n","/Users/kirk/Solana/grape-art/src/utils/auctionHouse/withdrawOffer.ts",["569","570","571"],"import {\n    ENV_AH,\n    AUCTION_HOUSE_ADDRESS,\n    WRAPPED_SOL_MINT,\n    TOKEN_PROGRAM_ID,\n  } from './helpers/constants';\nimport { PublicKey, SystemProgram, TransactionInstruction } from '@solana/web3.js'\nimport { BN, web3 } from '@project-serum/anchor';\nimport { GRAPE_RPC_ENDPOINT, OTHER_MARKETPLACES } from '../../utils/grapeTools/constants';\nimport {InstructionsAndSignersSet} from \"./helpers/types\";\n\nimport {\n    loadAuctionHouseProgram,\n    getAuctionHouseTradeState,\n    getTokenAmount,\n    getAtaForMint,\n    getAuctionHouseBuyerEscrow,\n  } from './helpers/accounts';\nimport { getPriceWithMantissa } from './helpers/various';\nimport { ASSOCIATED_TOKEN_PROGRAM_ID } from '@solana/spl-token';\n\nexport async function withdrawOffer(offerAmount: number, mint: string, buyerWalletKey: PublicKey): Promise<InstructionsAndSignersSet> {\n  \n    const auctionHouseKey = new web3.PublicKey(AUCTION_HOUSE_ADDRESS);  \n\n    let anchorProgram = await loadAuctionHouseProgram(null, ENV_AH, GRAPE_RPC_ENDPOINT);\n    const auctionHouseObj = await anchorProgram.account.auctionHouse.fetch(auctionHouseKey,);    \n    //const buyerWalletKey = new web3.PublicKey(walletPublicKey);\n\n    const amountAdjusted = await getPriceWithMantissa(\n        offerAmount,\n        //@ts-ignore\n        auctionHouseObj.treasuryMint,\n        buyerWalletKey,\n        anchorProgram,\n    );\n\n    const [escrowPaymentAccount, bump] = await getAuctionHouseBuyerEscrow(\n      auctionHouseKey,\n      buyerWalletKey,\n    );\n\n    const isNative = auctionHouseObj.treasuryMint.equals(WRAPPED_SOL_MINT);\n\n    const ata = (\n      await getAtaForMint(\n        //@ts-ignore\n        auctionHouseObj.treasuryMint,\n        buyerWalletKey,\n      )\n    )[0];\n\n    const transferAuthority = web3.Keypair.generate();\n    const signers = isNative ? [] : [transferAuthority];\n\n    const currBal = await getTokenAmount(\n      anchorProgram,\n      escrowPaymentAccount,\n      //@ts-ignore\n      auctionHouseObj.treasuryMint,\n    ); \n\n    const instruction = anchorProgram.instruction.withdraw(\n      bump,\n      new BN(amountAdjusted),\n      {\n        accounts: {\n          wallet: buyerWalletKey,\n\n          receiptAccount: isNative ? buyerWalletKey : ata,\n          escrowPaymentAccount,\n          //@ts-ignore\n          treasuryMint: auctionHouseObj.treasuryMint,\n          //@ts-ignore\n          authority: auctionHouseObj.authority,\n          auctionHouse: auctionHouseKey,\n          //@ts-ignore\n          auctionHouseFeeAccount: auctionHouseObj.auctionHouseFeeAccount,\n          tokenProgram: TOKEN_PROGRAM_ID,\n          systemProgram: web3.SystemProgram.programId,\n          rent: web3.SYSVAR_RENT_PUBKEY,\n          ataProgram: ASSOCIATED_TOKEN_PROGRAM_ID,\n        },\n        signers,\n      },\n    );\n\n    const instructions = [instruction];\n    \n\n\n    //let derivedOwnerPDA = await web3.PublicKey.findProgramAddress([Buffer.from((new PublicKey(mintOwner)).toBuffer())], auctionHouseKey);\n  \n    const GRAPE_AH_MEMO = {\n      state:0, // status (0: withdraw, 1: offer, 2: listing, 3: buy/execute (from listing), 4: buy/execute(accept offer), 5: cancel)\n      ah:auctionHouseKey.toString(), // pk\n      mint:mint?.toString(), // mint\n      amount:amountAdjusted // price\n    };\n\n    if (mint){\n      const mintKey = new web3.PublicKey(mint);\n      let derivedMintPDA = await web3.PublicKey.findProgramAddress([Buffer.from((mintKey).toBuffer())], auctionHouseKey);\n      instructions.push(\n        SystemProgram.transfer({\n          fromPubkey: buyerWalletKey,\n          toPubkey: derivedMintPDA[0],\n          lamports: 0,\n        })\n      );\n\n      let derivedBuyerPDA = await web3.PublicKey.findProgramAddress([Buffer.from((buyerWalletKey).toBuffer())], auctionHouseKey);\n      instructions.push(\n        SystemProgram.transfer({\n            fromPubkey: buyerWalletKey,\n            toPubkey: derivedBuyerPDA[0],\n            lamports: 0,\n        })\n      );\n    }else{\n      let derivedBuyerPDA = await web3.PublicKey.findProgramAddress([Buffer.from((buyerWalletKey).toBuffer())], auctionHouseKey);\n\n      instructions.push(\n        SystemProgram.transfer({\n            fromPubkey: buyerWalletKey,\n            toPubkey: derivedBuyerPDA[0],\n            lamports: 0,\n        })\n      );\n    }\n    /*\n    instructions.push(\n      SystemProgram.transfer({\n          fromPubkey: buyerWalletKey,\n          toPubkey: derivedOwnerPDA[0],\n          lamports: 0,\n      })\n    );*/\n\n    instructions.push(\n      new TransactionInstruction({\n          keys: [{ pubkey: buyerWalletKey, isSigner: true, isWritable: true }],\n          data: Buffer.from(JSON.stringify(GRAPE_AH_MEMO), 'utf-8'),\n          programId: new PublicKey(\"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr\"),\n      })\n    );\n\n    return {\n      signers: signers,\n      instructions: instructions\n    }\n\n}","/Users/kirk/Solana/grape-art/src/utils/auctionHouse/helpers/constants.ts",[],"/Users/kirk/Solana/grape-art/src/utils/auctionHouse/helpers/various.ts",["572","573","574"],"import { LAMPORTS_PER_SOL, AccountInfo } from '@solana/web3.js';\nimport fs from 'fs';\nimport weighted from 'weighted';\nimport path from 'path';\nimport { Program, web3 } from '@project-serum/anchor';\nimport { Token, TOKEN_PROGRAM_ID } from '@solana/spl-token';\n\n//const { readFile } = fs.promises;\n\n/*export async function readJsonFile(fileName: string) {\n  const file = await readFile(fileName, 'utf-8');\n  return JSON.parse(file);\n}*/\n\nexport function shuffle(array: any) {\n  let currentIndex = array.length,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex != 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex],\n    ];\n  }\n\n  return array;\n}\n\n/*export const assertValidBreakdown = breakdown => {\n  const total = Object.values(breakdown).reduce(\n    (sum: number, el: number) => (sum += el),\n    0,\n  );\n  if (total > 101 || total < 99) {\n    console.log(breakdown);\n    throw new Error('Breakdown not within 1% of 100! It is: ' + total);\n  }\n};\n\nexport const generateRandomSet = (breakdown, dnp) => {\n  let valid = true;\n  let tmp = {};\n\n  do {\n    valid = true;\n    const keys = shuffle(Object.keys(breakdown));\n    keys.forEach(attr => {\n      const breakdownToUse = breakdown[attr];\n\n      const formatted = Object.keys(breakdownToUse).reduce((f, key) => {\n        if (breakdownToUse[key]['baseValue']) {\n          f[key] = breakdownToUse[key]['baseValue'];\n        } else {\n          f[key] = breakdownToUse[key];\n        }\n        return f;\n      }, {});\n\n      assertValidBreakdown(formatted);\n      const randomSelection = weighted.select(formatted);\n      tmp[attr] = randomSelection;\n    });\n\n    keys.forEach(attr => {\n      let breakdownToUse = breakdown[attr];\n\n      keys.forEach(otherAttr => {\n        if (\n          tmp[otherAttr] &&\n          typeof breakdown[otherAttr][tmp[otherAttr]] != 'number' &&\n          breakdown[otherAttr][tmp[otherAttr]][attr]\n        ) {\n          breakdownToUse = breakdown[otherAttr][tmp[otherAttr]][attr];\n\n          console.log(\n            'Because this item got attr',\n            tmp[otherAttr],\n            'we are using different probabilites for',\n            attr,\n          );\n\n          assertValidBreakdown(breakdownToUse);\n          const randomSelection = weighted.select(breakdownToUse);\n          tmp[attr] = randomSelection;\n        }\n      });\n    });\n\n    Object.keys(tmp).forEach(attr1 => {\n      Object.keys(tmp).forEach(attr2 => {\n        if (\n          dnp[attr1] &&\n          dnp[attr1][tmp[attr1]] &&\n          dnp[attr1][tmp[attr1]][attr2] &&\n          dnp[attr1][tmp[attr1]][attr2].includes(tmp[attr2])\n        ) {\n          console.log('Not including', tmp[attr1], tmp[attr2], 'together');\n          valid = false;\n          tmp = {};\n        }\n      });\n    });\n  } while (!valid);\n  return tmp;\n};*/\n\nexport const getUnixTs = () => {\n  return new Date().getTime() / 1000;\n};\n\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function fromUTF8Array(data: number[]) {\n  // array of bytes\n  let str = '',\n    i;\n\n  for (i = 0; i < data.length; i++) {\n    const value = data[i];\n\n    if (value < 0x80) {\n      str += String.fromCharCode(value);\n    } else if (value > 0xbf && value < 0xe0) {\n      str += String.fromCharCode(((value & 0x1f) << 6) | (data[i + 1] & 0x3f));\n      i += 1;\n    } else if (value > 0xdf && value < 0xf0) {\n      str += String.fromCharCode(\n        ((value & 0x0f) << 12) |\n          ((data[i + 1] & 0x3f) << 6) |\n          (data[i + 2] & 0x3f),\n      );\n      i += 2;\n    } else {\n      // surrogate pair\n      const charCode =\n        (((value & 0x07) << 18) |\n          ((data[i + 1] & 0x3f) << 12) |\n          ((data[i + 2] & 0x3f) << 6) |\n          (data[i + 3] & 0x3f)) -\n        0x010000;\n\n      str += String.fromCharCode(\n        (charCode >> 10) | 0xd800,\n        (charCode & 0x03ff) | 0xdc00,\n      );\n      i += 3;\n    }\n  }\n\n  return str;\n}\n\nexport function parsePrice(price: string, mantissa: number = LAMPORTS_PER_SOL) {\n  return Math.ceil(parseFloat(price) * mantissa);\n}\n\nexport function parseDate(date: string) {\n  if (date === 'now') {\n    return Date.now() / 1000;\n  }\n  return Date.parse(date) / 1000;\n}\n\nexport const getMultipleAccounts = async (\n  connection: any,\n  keys: string[],\n  commitment: string,\n) => {\n  const result = await Promise.all(\n    chunks(keys, 99).map(chunk =>\n      getMultipleAccountsCore(connection, chunk, commitment),\n    ),\n  );\n\n  const array = result\n    .map(\n      a =>\n        //@ts-ignore\n        a.array.map(acc => {\n          if (!acc) {\n            return undefined;\n          }\n\n          const { data, ...rest } = acc;\n          const obj = {\n            ...rest,\n            data: Buffer.from(data[0], 'base64'),\n          } as AccountInfo<Buffer>;\n          return obj;\n        }) as AccountInfo<Buffer>[],\n    )\n    //@ts-ignore\n    .flat();\n  return { keys, array };\n};\n\nexport function chunks(array: any, size: any) {\n  return Array.apply(0, new Array(Math.ceil(array.length / size))).map(\n    (_, index: any) => array.slice(index * size, (index + 1) * size),\n  );\n}\n\nexport function generateRandoms(\n  numberOfAttrs: number = 1,\n  total: number = 100,\n) {\n  const numbers = [];\n  const loose_percentage = total / numberOfAttrs;\n\n  for (let i = 0; i < numberOfAttrs; i++) {\n    const random = Math.floor(Math.random() * loose_percentage) + 1;\n    numbers.push(random);\n  }\n\n  const sum = numbers.reduce((prev, cur) => {\n    return prev + cur;\n  }, 0);\n\n  numbers.push(total - sum);\n  return numbers;\n}\n\nexport const getMetadata = (\n  name: string = '',\n  symbol: string = '',\n  index: number = 0,\n  creators: any,\n  description: string = '',\n  seller_fee_basis_points: number = 500,\n  attrs: any,\n  collection: any,\n) => {\n  const attributes = [];\n  for (const prop in attrs) {\n    attributes.push({\n      trait_type: prop,\n      value: path.parse(attrs[prop]).name,\n    });\n  }\n\n  return {\n    name: `${name}${index + 1}`,\n    symbol,\n    image: `${index}.png`,\n    properties: {\n      files: [\n        {\n          uri: `${index}.png`,\n          type: 'image/png',\n        },\n      ],\n      category: 'image',\n      creators,\n    },\n    description,\n    seller_fee_basis_points,\n    attributes,\n    collection,\n  };\n};\n\nconst getMultipleAccountsCore = async (\n  connection: any,\n  keys: string[],\n  commitment: string,\n) => {\n  const args = connection._buildArgs([keys], commitment, 'base64');\n\n  const unsafeRes = await connection._rpcRequest('getMultipleAccounts', args);\n  if (unsafeRes.error) {\n    throw new Error(\n      'failed to get info about account ' + unsafeRes.error.message,\n    );\n  }\n\n  if (unsafeRes.result.value) {\n    const array = unsafeRes.result.value as AccountInfo<string[]>[];\n    return { keys, array };\n  }\n\n  // TODO: fix\n  throw new Error();\n};\n\nexport const getPriceWithMantissa = async (\n  price: number,\n  mint: web3.PublicKey,\n  walletKeyPair: any,\n  anchorProgram: Program,\n): Promise<number> => {\n  const token = new Token(\n    anchorProgram.provider.connection,\n    new web3.PublicKey(mint),\n    TOKEN_PROGRAM_ID,\n    walletKeyPair,\n  );\n\n  const mintInfo = await token.getMintInfo();\n\n  const mantissa = 10 ** mintInfo.decimals;\n\n  return Math.ceil(price * mantissa);\n};\n","/Users/kirk/Solana/grape-art/src/utils/auctionHouse/createDAOProposal.ts",["575","576","577","578","579","580","581","582","583","584","585","586","587"],"import { PublicKey, SystemProgram, TransactionInstruction, Transaction } from '@solana/web3.js'\nimport { BN, web3 } from '@project-serum/anchor';\nimport {InstructionsAndSignersSet} from \"./helpers/types\";\nimport { \n  getRealms, \n  getVoteRecordsByVoter, \n  getTokenOwnerRecordAddress,\n  getTokenOwnerRecordForRealm, \n  getTokenOwnerRecordsByOwner, \n  getGovernanceAccounts, \n  pubkeyFilter, \n  TokenOwnerRecord, \n  withCreateProposal,\n  VoteType, \n  getGovernanceProgramVersion,\n  serializeInstructionToBase64,\n  createInstructionData,\n  withInsertTransaction,\n  InstructionData,\n} from '@solana/spl-governance';\n\nimport { \n  TOKEN_REALM_PROGRAM_ID,\n} from '../grapeTools/constants';\n\n  export async function createDAOProposal(offerAmount: number, mint: string, walletPublicKey: string, mintOwner: any, weightedScore: any, daoPublicKey: string, connection: any, transactionInstr: InstructionsAndSignersSet, sendTransaction: any): Promise<InstructionsAndSignersSet> {\n    const programVersion = await getGovernanceProgramVersion(\n        connection,\n        new PublicKey(daoPublicKey),\n        \"\"\n      );\n\n    let instructions: TransactionInstruction[] = [];\n    //let initialInstructions: TransactionInstruction[] = [];\n    const signers: any[] = [];\n    // fetch realms information on the dao\n    const voteType = VoteType.SINGLE_CHOICE;\n    const options = ['Approve'];\n    const useDenyOption = true;\n    const programId = new PublicKey(TOKEN_REALM_PROGRAM_ID);\n    const realmPk = new PublicKey('DcR6g5EawaEoTRYcnuBjtD26VSVjWNoi1C1hKJWwvcup');\n    const governancePk = new PublicKey('JAbgQLj9MoJ2Kvie8t8Y6z6as3Epf7rDp87Po3wFwrNK');\n    const name = 'Sale of NFT: '+mint+' for '+offerAmount+'sol on grape.art';\n    const descriptionLink = '';\n    const governingTokenMint = new PublicKey('9Z7SQ1WMiDNaHu2cX823sZxD2SQpscoLGkyeLAHEqy9r');\n    const governanceAuthority = new PublicKey(walletPublicKey);\n    const proposalIndex = 0;\n\n    const tokenOwnerRecordPk = await getTokenOwnerRecordAddress(\n      programId,\n      realmPk,\n      governingTokenMint,\n      governancePk\n    );\n    const proposalPk = await withCreateProposal(\n      instructions,\n      new PublicKey(daoPublicKey), \n      programVersion,\n      realmPk,\n      governancePk,\n      tokenOwnerRecordPk,\n      name,\n      descriptionLink,\n      governingTokenMint,\n      governanceAuthority,\n      proposalIndex,\n      voteType,\n      options,\n      useDenyOption,\n      new PublicKey(walletPublicKey),\n  );\n  \n  const instructionData: InstructionData[]=[]; //createInstructionData([transactionInstr.instructions]);\n  \n  for (var instruction of transactionInstr.instructions){\n    instructionData.push(createInstructionData(instruction));\n  }\n\n  //const instructionData2 = createInstructionData(instruction);\n  //instructionData.push(instructionData2);\n\n  console.log(\"instructionData: \"+JSON.stringify(instructionData));\n  console.log(\"wallet: \"+walletPublicKey);\n\n  const wit = await withInsertTransaction(\n    instructions,\n    new PublicKey(daoPublicKey),\n    programVersion,\n    governancePk,\n    proposalPk,\n    tokenOwnerRecordPk,\n    governanceAuthority,\n    0,\n    0,\n    0,\n    instructionData,\n    new PublicKey(walletPublicKey),\n  );\n  \n  console.log(\"instructions: \"+JSON.stringify(instructions));\n\n  return {\n    signers: signers,\n    instructions: instructions\n  }\n\n}","/Users/kirk/Solana/grape-art/src/utils/auctionHouse/buyNowListing.ts",["588","589","590"],"import {\n    ENV_AH,\n    AUCTION_HOUSE_ADDRESS,\n    WRAPPED_SOL_MINT,\n    TOKEN_PROGRAM_ID,\n  } from './helpers/constants';\nimport { PublicKey, SystemProgram, TransactionInstruction } from '@solana/web3.js'\nimport { BN, web3 } from '@project-serum/anchor';\nimport { GRAPE_RPC_ENDPOINT, OTHER_MARKETPLACES } from '../../utils/grapeTools/constants';\nimport {InstructionsAndSignersSet} from \"./helpers/types\";\n\nimport {\n    loadAuctionHouseProgram,\n    getAuctionHouseTradeState,\n    getTokenAmount,\n    getAtaForMint,\n    getAuctionHouseBuyerEscrow,\n    getAuctionHouseProgramAsSigner,\n    getMetadata,\n  } from './helpers/accounts';\nimport { getPriceWithMantissa } from './helpers/various';\nimport { decodeMetadata, Metadata } from './helpers/schema';\nimport { ASSOCIATED_TOKEN_PROGRAM_ID, Token } from '@solana/spl-token';\n\nexport async function buyNowListing(offerAmount: number, mint: string, walletPublicKey: string, buyerAddress: PublicKey): Promise<InstructionsAndSignersSet> {\n  //START BUY\n  let tokenSize = 1;\n  const auctionHouseKey = new web3.PublicKey(AUCTION_HOUSE_ADDRESS);\n  const mintKey = new web3.PublicKey(mint);\n  let anchorProgram = await loadAuctionHouseProgram(null, ENV_AH, GRAPE_RPC_ENDPOINT);\n  const auctionHouseObj = await anchorProgram.account.auctionHouse.fetch(auctionHouseKey,);    \n  const sellerWalletKey = new web3.PublicKey(walletPublicKey);\n\n  const buyPriceAdjusted = new BN(\n    await getPriceWithMantissa(\n      offerAmount,\n      //@ts-ignore\n      auctionHouseObj.treasuryMint,\n      buyerAddress, \n      anchorProgram,\n    ),\n  );\n\n  const tokenSizeAdjusted = new BN(\n    await getPriceWithMantissa(\n      tokenSize,\n      mintKey,\n      buyerAddress, \n      anchorProgram,\n    ),\n  );\n\n  const [escrowPaymentAccount, escrowBump] = await getAuctionHouseBuyerEscrow(\n    auctionHouseKey,\n    buyerAddress, \n  );\n\n  const results = await anchorProgram.provider.connection.getTokenLargestAccounts(mintKey); \n\n  const tokenAccountKey: web3.PublicKey = results.value[0].address;\n\n  const [tradeState, tradeBump] = await getAuctionHouseTradeState(\n    auctionHouseKey,\n    buyerAddress, \n    tokenAccountKey,\n    //@ts-ignore\n    auctionHouseObj.treasuryMint,\n    mintKey,\n    tokenSizeAdjusted,\n    buyPriceAdjusted,\n  );\n\n  const isNative = auctionHouseObj.treasuryMint.equals(WRAPPED_SOL_MINT);\n  const ata = (\n      await getAtaForMint(\n          //@ts-ignore\n          auctionHouseObj.treasuryMint,\n          buyerAddress, \n      )\n  )[0];\n\n  const transferAuthority = web3.Keypair.generate();\n  const signers = isNative ? [] : [transferAuthority];\n\n  const instruction = anchorProgram.instruction.buy(\n    tradeBump,\n    escrowBump,\n    buyPriceAdjusted,\n    tokenSizeAdjusted,\n    {\n        accounts: {\n            wallet: buyerAddress,\n            paymentAccount: isNative ? buyerAddress : ata,\n            transferAuthority: isNative ? web3.SystemProgram.programId : transferAuthority.publicKey,\n            metadata: await getMetadata(mintKey),\n            tokenAccount: tokenAccountKey,\n            escrowPaymentAccount,\n            //@ts-ignore\n            treasuryMint: auctionHouseObj.treasuryMint,\n            //@ts-ignore\n            authority: auctionHouseObj.authority,\n            auctionHouse: auctionHouseKey,\n            //@ts-ignore\n            auctionHouseFeeAccount: auctionHouseObj.auctionHouseFeeAccount,\n            buyerTradeState: tradeState,\n            tokenProgram: TOKEN_PROGRAM_ID,\n            systemProgram: web3.SystemProgram.programId,\n            rent: web3.SYSVAR_RENT_PUBKEY,\n        },\n    }\n  );\n\n  const instructions = [\n    ...(isNative\n        ? []\n        : [\n            Token.createApproveInstruction(\n                TOKEN_PROGRAM_ID,\n                ata,\n                transferAuthority.publicKey,\n                buyerAddress,\n                [],\n                buyPriceAdjusted.toNumber(),\n            ),\n        ]),\n    instruction,\n    ...(isNative\n        ? []\n        : [\n            Token.createRevokeInstruction(\n                TOKEN_PROGRAM_ID,\n                ata,\n                buyerAddress,\n                [],\n            ),\n        ]),\n  ];\n\n  if (AUCTION_HOUSE_ADDRESS) {\n    //signers.push(auctionHouseKeypairLoaded);\n    instruction.keys\n      .filter(k => k.pubkey.equals(new PublicKey(AUCTION_HOUSE_ADDRESS)))\n      .map(k => (k.isSigner = false));\n  }\n\n  //const instructions = [instruction];\n  //END BUY\n  \n  //START EXECUTE SALE\n  //const buyerWalletKey = new web3.PublicKey(buyerAddress);\n  const buyPriceAdjusted2 = new BN(\n      await getPriceWithMantissa(\n        offerAmount,\n        //@ts-ignore\n        auctionHouseObj.treasuryMint,\n        sellerWalletKey, \n        anchorProgram,\n      ),\n  );\n\n  const tokenSizeAdjusted2 = new BN(\n    await getPriceWithMantissa(\n      tokenSize,\n      mintKey,\n      sellerWalletKey, \n      anchorProgram,\n    ),\n  );\n  const tokenAccountKey2 = (await getAtaForMint(mintKey, sellerWalletKey))[0];\n  const buyerTradeState = (\n      await getAuctionHouseTradeState(\n        auctionHouseKey,\n        buyerAddress,\n        tokenAccountKey2,\n        //@ts-ignore\n        auctionHouseObj.treasuryMint,\n        mintKey,\n        tokenSizeAdjusted2,\n        buyPriceAdjusted2,\n      )\n  )[0];\n  const sellerTradeState = (\n    await getAuctionHouseTradeState(\n      auctionHouseKey,\n      sellerWalletKey,\n      tokenAccountKey2,\n      //@ts-ignore\n      auctionHouseObj.treasuryMint,\n      mintKey,\n      tokenSizeAdjusted2,\n      buyPriceAdjusted2,\n    )\n  )[0];\n  const [freeTradeState, freeTradeStateBump] =\n  await getAuctionHouseTradeState(\n      auctionHouseKey,\n      sellerWalletKey,\n      tokenAccountKey2,\n      //@ts-ignore\n      auctionHouseObj.treasuryMint,\n      mintKey,\n      tokenSizeAdjusted2,\n      new BN(0),\n  );\n\n  const [programAsSigner, programAsSignerBump] = await getAuctionHouseProgramAsSigner();\n\n  const metadata = await getMetadata(mintKey);\n  const metadataObj = await anchorProgram.provider.connection.getAccountInfo(metadata,);\n  const metadataDecoded: Metadata = decodeMetadata(Buffer.from(metadataObj.data),);\n  \n  const remainingAccounts = [];\n  for (let i = 0; i < metadataDecoded.data.creators.length; i++) {\n    remainingAccounts.push({\n        pubkey: new web3.PublicKey(metadataDecoded.data.creators[i].address),\n        isWritable: true,\n        isSigner: false,\n    });\n    if (!isNative) {\n        remainingAccounts.push({\n            pubkey: (await getAtaForMint(\n                        //@ts-ignore\n                        auctionHouseObj.treasuryMint,\n                        remainingAccounts[remainingAccounts.length - 1].pubkey,\n                        )\n                    )[0],\n            isWritable: true,\n            isSigner: false,\n        });\n    }\n  }\n\n  const tMint: web3.PublicKey = auctionHouseObj.treasuryMint;\n\n  const instruction2 = anchorProgram.instruction.executeSale(\n    escrowBump,\n    freeTradeStateBump,\n    programAsSignerBump,\n    buyPriceAdjusted2,\n    tokenSizeAdjusted2,\n    {\n      accounts: {\n          buyer: buyerAddress,\n          seller: sellerWalletKey,\n          metadata,\n          tokenAccount: tokenAccountKey2,\n          tokenMint: mintKey,\n          escrowPaymentAccount,\n          treasuryMint: tMint,\n          sellerPaymentReceiptAccount: isNative ? sellerWalletKey : (\n              await getAtaForMint(tMint, sellerWalletKey)\n              )[0],\n          buyerReceiptTokenAccount: (\n              await getAtaForMint(mintKey, buyerAddress)\n          )[0],\n          //@ts-ignore\n          authority: auctionHouseObj.authority,\n          auctionHouse: auctionHouseKey,\n          //@ts-ignore\n          auctionHouseFeeAccount: auctionHouseObj.auctionHouseFeeAccount,\n          //@ts-ignore\n          auctionHouseTreasury: auctionHouseObj.auctionHouseTreasury,\n          sellerTradeState,\n          buyerTradeState,\n          tokenProgram: TOKEN_PROGRAM_ID,\n          systemProgram: web3.SystemProgram.programId,\n          ataProgram: ASSOCIATED_TOKEN_PROGRAM_ID,\n          programAsSigner,\n          rent: web3.SYSVAR_RENT_PUBKEY,\n          freeTradeState,\n      },\n      remainingAccounts,\n      signers,\n    },\n  );    \n\n  if (AUCTION_HOUSE_ADDRESS) {\n    //signers.push(auctionHouseKeypairLoaded);\n    instruction2.keys\n      .filter(k => k.pubkey.equals(new PublicKey(AUCTION_HOUSE_ADDRESS)))\n      .map(k => (k.isSigner = false));\n  }\n\n  const GRAPE_AH_MEMO = {\n    state:3, // status (0: withdraw, 1: offer, 2: listing, 3: buy/execute (from listing), 4: buy/execute(accept offer), 5: cancel)\n    ah:auctionHouseKey.toString(), // pk\n    mint:mintKey.toString(), // mint\n    amount:buyPriceAdjusted.toNumber() // price\n  };\n\n\n//  let derivedMintPDA = await web3.PublicKey.findProgramAddress([Buffer.from((mintKey).toBuffer())], auctionHouseKey);\n//  let derivedBuyerPDA = await web3.PublicKey.findProgramAddress([Buffer.from((buyerWalletKey).toBuffer())], auctionHouseKey);\n//  let derivedOwnerPDA = await web3.PublicKey.findProgramAddress([Buffer.from((new PublicKey(mintOwner)).toBuffer())], auctionHouseKey);\n/*\n  instructions.push(\n    SystemProgram.transfer({\n      fromPubkey: sellerWalletKey,\n      toPubkey: derivedMintPDA[0],\n      lamports: 0,\n    })\n  );\n\n  instructions.push(\n    SystemProgram.transfer({\n        fromPubkey: sellerWalletKey,\n        toPubkey: derivedBuyerPDA[0],\n        lamports: 0,\n    })\n  );\n  instructions.push(\n    SystemProgram.transfer({\n        fromPubkey: sellerWalletKey,\n        toPubkey: derivedOwnerPDA[0],\n        lamports: 0,\n    })\n  );*/\n  instructions.push(instruction2);\n\n  instructions.push(\n    new TransactionInstruction({\n        keys: [{ pubkey: buyerAddress, isSigner: true, isWritable: true }],\n        data: Buffer.from(JSON.stringify(GRAPE_AH_MEMO), 'utf-8'),\n        programId: new PublicKey(\"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr\"),\n    })\n  );\n\n  return {\n    signers: signers,\n    instructions: instructions\n  }\n}","/Users/kirk/Solana/grape-art/src/utils/auctionHouse/helpers/schema.ts",[],"/Users/kirk/Solana/grape-art/src/utils/auctionHouse/sellNowListing.ts",["591"],"import {\n    ENV_AH,\n    AUCTION_HOUSE_ADDRESS,\n    TOKEN_PROGRAM_ID,\n  } from './helpers/constants';\nimport { PublicKey, SystemProgram, TransactionInstruction } from '@solana/web3.js'\nimport { BN, web3 } from '@project-serum/anchor';\nimport { GRAPE_RPC_ENDPOINT, OTHER_MARKETPLACES } from '../../utils/grapeTools/constants';\nimport {InstructionsAndSignersSet} from \"./helpers/types\";\n\nimport {\n    loadAuctionHouseProgram,\n    getAuctionHouseTradeState,\n    getAtaForMint,\n    getAuctionHouseProgramAsSigner,\n    getMetadata,\n  } from './helpers/accounts';\nimport { getPriceWithMantissa } from './helpers/various';\n\n  export async function sellNowListing(offerAmount: number, mint: string, walletPublicKey: string, mintOwner: any, weightedScore: any, daoPublicKey: string): Promise<InstructionsAndSignersSet> {\n\n    let tokenSize = 1;\n    const auctionHouseKey = new web3.PublicKey(AUCTION_HOUSE_ADDRESS);\n    const mintKey = new web3.PublicKey(mint);\n    let anchorProgram = await loadAuctionHouseProgram(null, ENV_AH, GRAPE_RPC_ENDPOINT);\n    const auctionHouseObj = await anchorProgram.account.auctionHouse.fetch(auctionHouseKey,);    \n    const thisWalletPublicKey = new web3.PublicKey(walletPublicKey);\n    \n    let sellerWalletKey = thisWalletPublicKey;\n    if (daoPublicKey){\n      sellerWalletKey = new web3.PublicKey(daoPublicKey);\n    }\n\n    const buyPriceAdjusted = new BN(\n      await getPriceWithMantissa(\n        +offerAmount,\n        //@ts-ignore\n        auctionHouseObj.treasuryMint,\n        sellerWalletKey, \n        anchorProgram,\n      ),\n    );\n    const tokenSizeAdjusted = new BN(\n      await getPriceWithMantissa(\n        tokenSize,\n        mintKey,\n        sellerWalletKey, \n        anchorProgram,\n      ),\n    );\n\n    const tokenAccountKey = (await getAtaForMint(mintKey, sellerWalletKey))[0];\n    const [programAsSigner, programAsSignerBump] =\n        await getAuctionHouseProgramAsSigner();\n    const [tradeState, tradeBump] = await getAuctionHouseTradeState(\n        auctionHouseKey,\n        sellerWalletKey,\n        tokenAccountKey,\n        //@ts-ignore\n        auctionHouseObj.treasuryMint,\n        mintKey,\n        tokenSizeAdjusted,\n        buyPriceAdjusted,\n    );\n    const [freeTradeState1, freeTradeBump] = await getAuctionHouseTradeState(\n      auctionHouseKey,\n      sellerWalletKey,\n      tokenAccountKey,\n      //@ts-ignore\n      auctionHouseObj.treasuryMint,\n      mintKey,\n      tokenSizeAdjusted,\n      new BN(0),\n    );\n\n    const signers: any[] = [];\n\n    const instruction = anchorProgram.instruction.sell(\n      tradeBump,\n      freeTradeBump,\n      programAsSignerBump,\n      buyPriceAdjusted,\n      tokenSizeAdjusted,\n      {\n      accounts: {\n          wallet: sellerWalletKey,\n          metadata: await getMetadata(mintKey),\n          tokenAccount: tokenAccountKey,\n          //@ts-ignore\n          authority: auctionHouseObj.authority,\n          auctionHouse: auctionHouseKey,\n          //@ts-ignore\n          auctionHouseFeeAccount: auctionHouseObj.auctionHouseFeeAccount,\n          sellerTradeState: tradeState,\n          freeSellerTradeState: freeTradeState1,\n          tokenProgram: TOKEN_PROGRAM_ID,\n          systemProgram: web3.SystemProgram.programId,\n          programAsSigner,\n          rent: web3.SYSVAR_RENT_PUBKEY,\n      },\n      signers,\n      },\n    ); \n\n    const instructions = [instruction];\n    \n    let derivedMintPDA = await web3.PublicKey.findProgramAddress([Buffer.from((mintKey).toBuffer())], auctionHouseKey);\n    let derivedBuyerPDA = await web3.PublicKey.findProgramAddress([Buffer.from((sellerWalletKey).toBuffer())], auctionHouseKey);\n    let derivedOwnerPDA = await web3.PublicKey.findProgramAddress([Buffer.from((new PublicKey(mintOwner)).toBuffer())], auctionHouseKey);\n  \n    const GRAPE_AH_MEMO = {\n      state:2, // status (0: withdraw, 1: offer, 2: listing, 3: buy/execute (from listing), 4: buy/execute(accept offer), 5: cancel)\n      ah:auctionHouseKey.toString(), // pk\n      mint:mintKey.toString(), // mint\n      amount:buyPriceAdjusted.toNumber(), // price\n      score:weightedScore, // spam protection for our feed/higher score weight higher feed visibility\n    };\n    \n    instructions.push(\n      SystemProgram.transfer({\n        fromPubkey: sellerWalletKey,\n        toPubkey: derivedMintPDA[0],\n        lamports: 0,\n      })\n    );\n\n    instructions.push(\n      SystemProgram.transfer({\n          fromPubkey: sellerWalletKey,\n          toPubkey: derivedBuyerPDA[0],\n          lamports: 0,\n      })\n    );\n    instructions.push(\n      SystemProgram.transfer({\n          fromPubkey: sellerWalletKey,\n          toPubkey: derivedOwnerPDA[0],\n          lamports: 0,\n      })\n    );\n    instructions.push(\n      new TransactionInstruction({\n          keys: [{ pubkey: sellerWalletKey, isSigner: true, isWritable: true }],\n          data: Buffer.from(JSON.stringify(GRAPE_AH_MEMO), 'utf-8'),\n          programId: new PublicKey(\"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr\"),\n      })\n    );\n\n    return {\n      signers: signers,\n      instructions: instructions\n    }\n\n  }","/Users/kirk/Solana/grape-art/src/utils/auctionHouse/cancelListing.ts",["592"],"import {\n    ENV_AH,\n    AUCTION_HOUSE_ADDRESS,\n    TOKEN_PROGRAM_ID,\n  } from './helpers/constants';\nimport { PublicKey, SystemProgram, TransactionInstruction } from '@solana/web3.js'\nimport { BN, web3 } from '@project-serum/anchor';\nimport { GRAPE_RPC_ENDPOINT, OTHER_MARKETPLACES } from '../../utils/grapeTools/constants';\nimport {InstructionsAndSignersSet} from \"./helpers/types\";\n\nimport {\n    loadAuctionHouseProgram,\n    getAuctionHouseTradeState,\n    getAtaForMint,\n  } from './helpers/accounts';\nimport { getPriceWithMantissa } from './helpers/various';\n\nexport async function cancelListing(offerAmount: number, mint: string, walletPublicKey: string, mintOwner: any): Promise<InstructionsAndSignersSet> {\n\n    let tokenSize = 1;\n    const auctionHouseKey = new web3.PublicKey(AUCTION_HOUSE_ADDRESS);\n    const mintKey = new web3.PublicKey(mint);\n    let anchorProgram = await loadAuctionHouseProgram(null, ENV_AH, GRAPE_RPC_ENDPOINT);\n    const auctionHouseObj = await anchorProgram.account.auctionHouse.fetch(auctionHouseKey,);\n    const sellerWalletKey = new web3.PublicKey(walletPublicKey);\n    const buyPriceAdjusted = new BN(\n      await getPriceWithMantissa(\n        offerAmount,\n        //@ts-ignore\n        auctionHouseObj.treasuryMint,\n        sellerWalletKey,\n        anchorProgram,\n      ),\n    );\n    //console.log('buyPriceAdjusted:', buyPriceAdjusted);\n    const tokenSizeAdjusted = new BN(\n      await getPriceWithMantissa(\n        tokenSize,\n        mintKey,\n        sellerWalletKey,\n        anchorProgram,\n      ),\n    );\n    //console.log('tokenSizeAdjusted:', tokenSizeAdjusted);\n    const tokenAccountKey = (await getAtaForMint(mintKey, sellerWalletKey))[0];\n    //console.log('tokenAccountKey:', tokenAccountKey.toBase58());\n    const tradeState = (\n          await getAuctionHouseTradeState(\n              auctionHouseKey,\n              sellerWalletKey,\n              tokenAccountKey,\n              //@ts-ignore\n              auctionHouseObj.treasuryMint,\n              mintKey,\n              tokenSizeAdjusted,\n              buyPriceAdjusted,\n          )\n    )[0];  \n    //console.log('tradeState:', tradeState.toBase58());\n    const signers: any[] = [];\n\n    const instruction = anchorProgram.instruction.cancel(\n      buyPriceAdjusted,\n      tokenSizeAdjusted,\n      {\n        accounts: {\n          wallet: sellerWalletKey,\n          tokenAccount: tokenAccountKey,\n          tokenMint: mintKey,\n          //@ts-ignore\n          authority: auctionHouseObj.authority,\n          auctionHouse: auctionHouseKey,\n          //@ts-ignore\n          auctionHouseFeeAccount: auctionHouseObj.auctionHouseFeeAccount,\n          tradeState,\n          tokenProgram: TOKEN_PROGRAM_ID,\n        },\n        signers,\n      },\n    );\n    //console.log(\"instruction: \"+JSON.stringify(instruction));\n    const instructions = [instruction];\n\n    let derivedMintPDA = await web3.PublicKey.findProgramAddress([Buffer.from((mintKey).toBuffer())], auctionHouseKey);\n    let derivedBuyerPDA = await web3.PublicKey.findProgramAddress([Buffer.from((sellerWalletKey).toBuffer())], auctionHouseKey);\n    let derivedOwnerPDA = await web3.PublicKey.findProgramAddress([Buffer.from((new PublicKey(mintOwner)).toBuffer())], auctionHouseKey);\n  \n    //is it withdraw here or cancel (we are removing the listing we made)\n    const GRAPE_AH_MEMO = {\n      state:5, // status (0: withdraw, 1: offer, 2: listing, 3: buy/execute (from listing), 4: buy/execute(accept offer), 5: cancel)\n      ah:auctionHouseKey.toString(), // pk\n      mint:mintKey.toString(), // mint\n      amount:buyPriceAdjusted.toNumber() // price\n    };\n\n    instructions.push(\n      SystemProgram.transfer({\n        fromPubkey: sellerWalletKey,\n        toPubkey: derivedMintPDA[0],\n        lamports: 0,\n      })\n    );\n\n    instructions.push(\n      SystemProgram.transfer({\n          fromPubkey: sellerWalletKey,\n          toPubkey: derivedBuyerPDA[0],\n          lamports: 0,\n      })\n    );\n    instructions.push(\n      SystemProgram.transfer({\n          fromPubkey: sellerWalletKey,\n          toPubkey: derivedOwnerPDA[0],\n          lamports: 0,\n      })\n    );\n    instructions.push(\n      new TransactionInstruction({\n          keys: [{ pubkey: sellerWalletKey, isSigner: true, isWritable: true }],\n          data: Buffer.from(JSON.stringify(GRAPE_AH_MEMO), 'utf-8'),\n          programId: new PublicKey(\"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr\"),\n      })\n    );\n\n    return {\n      signers: signers,\n      instructions: instructions\n    }\n\n}","/Users/kirk/Solana/grape-art/src/utils/auctionHouse/depositInGrapeVine.ts",["593","594","595","596"],"import {\n    ENV_AH,\n    AUCTION_HOUSE_ADDRESS,\n    WRAPPED_SOL_MINT,\n    TOKEN_PROGRAM_ID,\n  } from './helpers/constants';\nimport { PublicKey, SystemProgram, TransactionInstruction } from '@solana/web3.js'\nimport { BN, web3 } from '@project-serum/anchor';\nimport { GRAPE_RPC_ENDPOINT, OTHER_MARKETPLACES } from '../grapeTools/constants';\nimport {InstructionsAndSignersSet} from \"./helpers/types\";\n\nimport {\n    loadAuctionHouseProgram,\n    getAuctionHouseTradeState,\n    getTokenAmount,\n    getAtaForMint,\n    getAuctionHouseBuyerEscrow,\n  } from './helpers/accounts';\nimport { getPriceWithMantissa } from './helpers/various';\nimport { ASSOCIATED_TOKEN_PROGRAM_ID } from '@solana/spl-token';\n\nexport async function depositInGrapeVine(escrowAmount: number, buyerWalletKey: PublicKey): Promise<InstructionsAndSignersSet> {\n  \n    const auctionHouseKey = new web3.PublicKey(AUCTION_HOUSE_ADDRESS);  \n\n    let anchorProgram = await loadAuctionHouseProgram(null, ENV_AH, GRAPE_RPC_ENDPOINT);\n    const auctionHouseObj = await anchorProgram.account.auctionHouse.fetch(auctionHouseKey,);    \n\n    const amountAdjusted = await getPriceWithMantissa(\n        escrowAmount,\n        //@ts-ignore\n        auctionHouseObj.treasuryMint,\n        buyerWalletKey,\n        anchorProgram,\n    );\n\n    const [escrowPaymentAccount, escrowBump] = await getAuctionHouseBuyerEscrow(\n      auctionHouseKey,\n      buyerWalletKey,\n    );\n\n    const isNative = auctionHouseObj.treasuryMint.equals(WRAPPED_SOL_MINT);\n\n    const ata = (\n      await getAtaForMint(\n        //@ts-ignore\n        auctionHouseObj.treasuryMint,\n        buyerWalletKey,\n      )\n    )[0];\n\n    const transferAuthority = web3.Keypair.generate();\n    const signers = isNative ? [] : [transferAuthority];\n\n    const instruction = anchorProgram.instruction.deposit(\n      escrowBump,\n      new BN(amountAdjusted),\n      {\n        accounts: {\n          wallet: buyerWalletKey,\n          paymentAccount: isNative ? buyerWalletKey : ata,\n          transferAuthority: isNative\n            ? web3.SystemProgram.programId\n            : transferAuthority.publicKey,\n          escrowPaymentAccount,\n          //@ts-ignore\n          treasuryMint: auctionHouseObj.treasuryMint,\n          //@ts-ignore\n          authority: auctionHouseObj.authority,\n          auctionHouse: auctionHouseKey,\n          //@ts-ignore\n          auctionHouseFeeAccount: auctionHouseObj.auctionHouseFeeAccount,\n          tokenProgram: TOKEN_PROGRAM_ID,\n          systemProgram: web3.SystemProgram.programId,\n          rent: web3.SYSVAR_RENT_PUBKEY,\n        },\n      },\n    );\n\n    const instructions = [instruction];\n  \n    const GRAPE_AH_MEMO = {\n      state:6, // status (0: withdraw, 1: offer, 2: listing, 3: buy/execute (from listing), 4: buy/execute(accept offer), 5: cancel, 6: deposit)\n      ah:auctionHouseKey.toString(), // pk\n      mint:null, // mint\n      amount:amountAdjusted // price\n    };\n      \n    let derivedBuyerPDA = await web3.PublicKey.findProgramAddress([Buffer.from((buyerWalletKey).toBuffer())], auctionHouseKey);\n\n    instructions.push(\n        SystemProgram.transfer({\n            fromPubkey: buyerWalletKey,\n            toPubkey: derivedBuyerPDA[0],\n            lamports: 0,\n        })\n      );\n\n    instructions.push(\n      new TransactionInstruction({\n          keys: [{ pubkey: buyerWalletKey, isSigner: true, isWritable: true }],\n          data: Buffer.from(JSON.stringify(GRAPE_AH_MEMO), 'utf-8'),\n          programId: new PublicKey(\"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr\"),\n      })\n    );\n\n    return {\n      signers: signers,\n      instructions: instructions\n    }\n\n}","/Users/kirk/Solana/grape-art/src/utils/auctionHouse/acceptOffer.ts",["597","598","599"],"import {\n    ENV_AH,\n    AUCTION_HOUSE_ADDRESS,\n    WRAPPED_SOL_MINT,\n    TOKEN_PROGRAM_ID,\n  } from './helpers/constants';\nimport { PublicKey, SystemProgram, TransactionInstruction } from '@solana/web3.js'\nimport { BN, web3 } from '@project-serum/anchor';\nimport { GRAPE_RPC_ENDPOINT, OTHER_MARKETPLACES } from '../../utils/grapeTools/constants';\nimport {InstructionsAndSignersSet} from \"./helpers/types\";\n\nimport {\n    loadAuctionHouseProgram,\n    getAuctionHouseTradeState,\n    getTokenAmount,\n    getAtaForMint,\n    getAuctionHouseBuyerEscrow,\n    getAuctionHouseProgramAsSigner,\n    getMetadata,\n  } from './helpers/accounts';\nimport { getPriceWithMantissa } from './helpers/various';\nimport { decodeMetadata, Metadata } from './helpers/schema';\nimport { ASSOCIATED_TOKEN_PROGRAM_ID } from '@solana/spl-token';\n\nexport async function acceptOffer(offerAmount: number, mint: string, sellerWalletKey: PublicKey, buyerAddress: any): Promise<InstructionsAndSignersSet> {\n  //START SELL\n  let tokenSize = 1;\n  const auctionHouseKey = new web3.PublicKey(AUCTION_HOUSE_ADDRESS);\n  const mintKey = new web3.PublicKey(mint);\n  let anchorProgram = await loadAuctionHouseProgram(null, ENV_AH, GRAPE_RPC_ENDPOINT);\n  const auctionHouseObj = await anchorProgram.account.auctionHouse.fetch(auctionHouseKey,);    \n  const buyPriceAdjusted = new BN(\n    await getPriceWithMantissa(\n      offerAmount,\n      //@ts-ignore\n      auctionHouseObj.treasuryMint,\n      sellerWalletKey, \n      anchorProgram,\n    ),\n  );\n  const tokenSizeAdjusted = new BN(\n    await getPriceWithMantissa(\n      tokenSize,\n      mintKey,\n      sellerWalletKey, \n      anchorProgram,\n    ),\n  );\n  const tokenAccountKey = (await getAtaForMint(mintKey, sellerWalletKey))[0];\n  const [programAsSigner, programAsSignerBump] = await getAuctionHouseProgramAsSigner();\n  const [tradeState, tradeBump] = await getAuctionHouseTradeState(\n      auctionHouseKey,\n      sellerWalletKey,\n      tokenAccountKey,\n      //@ts-ignore\n      auctionHouseObj.treasuryMint,\n      mintKey,\n      tokenSizeAdjusted,\n      buyPriceAdjusted,\n  );\n  const [freeTradeState1, freeTradeBump] = await getAuctionHouseTradeState(\n    auctionHouseKey,\n    sellerWalletKey,\n    tokenAccountKey,\n    //@ts-ignore\n    auctionHouseObj.treasuryMint,\n    mintKey,\n    tokenSizeAdjusted,\n    new BN(0),\n  );\n\n  const signers: any[] = [];\n\n  const instruction = anchorProgram.instruction.sell(\n    tradeBump,\n    freeTradeBump,\n    programAsSignerBump,\n    buyPriceAdjusted,\n    tokenSizeAdjusted,\n    {\n      accounts: {\n        wallet: sellerWalletKey,\n        metadata: await getMetadata(mintKey),\n        tokenAccount: tokenAccountKey,\n        //@ts-ignore\n        authority: auctionHouseObj.authority,\n        auctionHouse: auctionHouseKey,\n        //@ts-ignore\n        auctionHouseFeeAccount: auctionHouseObj.auctionHouseFeeAccount,\n        sellerTradeState: tradeState,\n        freeSellerTradeState: freeTradeState1,\n        tokenProgram: TOKEN_PROGRAM_ID,\n        systemProgram: web3.SystemProgram.programId,\n        programAsSigner,\n        rent: web3.SYSVAR_RENT_PUBKEY,\n      },\n      signers,\n    },\n  ); \n\n  if (AUCTION_HOUSE_ADDRESS) {\n    //signers.push(auctionHouseKeypairLoaded);\n    instruction.keys\n      .filter(k => k.pubkey.equals(new PublicKey(AUCTION_HOUSE_ADDRESS)))\n      .map(k => (k.isSigner = false));\n  }\n\n  const instructions = [instruction];\n  //END SELL\n  \n  //START EXECUTE SALE\n\n  const buyerWalletKey = new web3.PublicKey(buyerAddress);\n  const isNative = auctionHouseObj.treasuryMint.equals(WRAPPED_SOL_MINT);\n  const buyPriceAdjusted2 = new BN(\n      await getPriceWithMantissa(\n        offerAmount,\n        //@ts-ignore\n        auctionHouseObj.treasuryMint,\n        sellerWalletKey, \n        anchorProgram,\n      ),\n  );\n\n  const tokenSizeAdjusted2 = new BN(\n    await getPriceWithMantissa(\n      tokenSize,\n      mintKey,\n      sellerWalletKey, \n      anchorProgram,\n    ),\n  );\n  const tokenAccountKey2 = (await getAtaForMint(mintKey, sellerWalletKey))[0];\n  const buyerTradeState = (\n      await getAuctionHouseTradeState(\n        auctionHouseKey,\n        buyerWalletKey,\n        tokenAccountKey2,\n        //@ts-ignore\n        auctionHouseObj.treasuryMint,\n        mintKey,\n        tokenSizeAdjusted2,\n        buyPriceAdjusted2,\n      )\n  )[0];\n  const sellerTradeState = (\n    await getAuctionHouseTradeState(\n      auctionHouseKey,\n      sellerWalletKey,\n      tokenAccountKey2,\n      //@ts-ignore\n      auctionHouseObj.treasuryMint,\n      mintKey,\n      tokenSizeAdjusted2,\n      buyPriceAdjusted2,\n    )\n  )[0];\n  const [freeTradeState, freeTradeStateBump] =\n  await getAuctionHouseTradeState(\n      auctionHouseKey,\n      sellerWalletKey,\n      tokenAccountKey2,\n      //@ts-ignore\n      auctionHouseObj.treasuryMint,\n      mintKey,\n      tokenSizeAdjusted2,\n      new BN(0),\n  );\n\n  const [escrowPaymentAccount, bump] = await getAuctionHouseBuyerEscrow(auctionHouseKey, buyerWalletKey,);\n\n  const metadata = await getMetadata(mintKey);\n  const metadataObj = await anchorProgram.provider.connection.getAccountInfo(metadata,);\n  const metadataDecoded: Metadata = decodeMetadata(Buffer.from(metadataObj.data),);\n  \n  const remainingAccounts = [];\n\n  for (let i = 0; i < metadataDecoded.data.creators.length; i++) {\n    remainingAccounts.push({\n        pubkey: new web3.PublicKey(metadataDecoded.data.creators[i].address),\n        isWritable: true,\n        isSigner: false,\n    });\n    if (!isNative) {\n        remainingAccounts.push({\n            pubkey: (await getAtaForMint(\n                        //@ts-ignore\n                        auctionHouseObj.treasuryMint,\n                        remainingAccounts[remainingAccounts.length - 1].pubkey,\n                        )\n                    )[0],\n            isWritable: true,\n            isSigner: false,\n        });\n    }\n  }\n\n  const tMint: web3.PublicKey = auctionHouseObj.treasuryMint;\n\n  const instruction2 = anchorProgram.instruction.executeSale(\n    bump,\n    freeTradeStateBump,\n    programAsSignerBump,\n    buyPriceAdjusted2,\n    tokenSizeAdjusted2,\n    {\n      accounts: {\n          buyer: buyerWalletKey,\n          seller: sellerWalletKey,\n          metadata,\n          tokenAccount: tokenAccountKey2,\n          tokenMint: mintKey,\n          escrowPaymentAccount,\n          treasuryMint: tMint,\n          sellerPaymentReceiptAccount: isNative ? sellerWalletKey : (\n              await getAtaForMint(tMint, sellerWalletKey)\n              )[0],\n          buyerReceiptTokenAccount: (\n              await getAtaForMint(mintKey, buyerWalletKey)\n          )[0],\n          //@ts-ignore\n          authority: auctionHouseObj.authority,\n          auctionHouse: auctionHouseKey,\n          //@ts-ignore\n          auctionHouseFeeAccount: auctionHouseObj.auctionHouseFeeAccount,\n          //@ts-ignore\n          auctionHouseTreasury: auctionHouseObj.auctionHouseTreasury,\n          sellerTradeState,\n          buyerTradeState,\n          tokenProgram: TOKEN_PROGRAM_ID,\n          systemProgram: web3.SystemProgram.programId,\n          ataProgram: ASSOCIATED_TOKEN_PROGRAM_ID,\n          programAsSigner,\n          rent: web3.SYSVAR_RENT_PUBKEY,\n          freeTradeState,\n      },\n      remainingAccounts,\n      signers,\n    },\n  );    \n\n  if (AUCTION_HOUSE_ADDRESS) {\n    //signers.push(auctionHouseKeypairLoaded);\n    instruction2.keys\n      .filter(k => k.pubkey.equals(new PublicKey(AUCTION_HOUSE_ADDRESS)))\n      .map(k => (k.isSigner = false));\n  }\n\n  const GRAPE_AH_MEMO = {\n    state:4, // status (0: withdraw, 1: offer, 2: listing, 3: buy/execute (from listing), 4: buy/execute(accept offer), 5: cancel)\n    ah:auctionHouseKey.toString(), // pk\n    mint:mintKey.toString(), // mint\n    amount:buyPriceAdjusted.toNumber() // price\n  };\n\n  \n//  let derivedMintPDA = await web3.PublicKey.findProgramAddress([Buffer.from((mintKey).toBuffer())], auctionHouseKey);\n//  let derivedBuyerPDA = await web3.PublicKey.findProgramAddress([Buffer.from((sellerWalletKey).toBuffer())], auctionHouseKey);\n//  let derivedOwnerPDA = await web3.PublicKey.findProgramAddress([Buffer.from((new PublicKey(mintOwner)).toBuffer())], auctionHouseKey);\n/*\n  instructions.push(\n    SystemProgram.transfer({\n      fromPubkey: sellerWalletKey,\n      toPubkey: derivedMintPDA[0],\n      lamports: 0,\n    })\n  );\n\n  instructions.push(\n    SystemProgram.transfer({\n        fromPubkey: sellerWalletKey,\n        toPubkey: derivedBuyerPDA[0],\n        lamports: 0,\n    })\n  );\n  instructions.push(\n    SystemProgram.transfer({\n        fromPubkey: sellerWalletKey,\n        toPubkey: derivedOwnerPDA[0],\n        lamports: 0,\n    })\n  );*/\n  instructions.push(instruction2);\n\n  instructions.push(\n    new TransactionInstruction({\n        keys: [{ pubkey: sellerWalletKey, isSigner: true, isWritable: true }],\n        data: Buffer.from(JSON.stringify(GRAPE_AH_MEMO), 'utf-8'),\n        programId: new PublicKey(\"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr\"),\n    })\n  );\n  return {\n    signers: signers,\n    instructions: instructions\n  }\n}","/Users/kirk/Solana/grape-art/src/utils/auctionHouse/submitOffer.ts",["600","601","602"],"import {\n    ENV_AH,\n    AUCTION_HOUSE_ADDRESS,\n    WRAPPED_SOL_MINT,\n    TOKEN_PROGRAM_ID,\n  } from './helpers/constants';\nimport { PublicKey, SystemProgram, TransactionInstruction } from '@solana/web3.js'\nimport { BN, web3 } from '@project-serum/anchor';\nimport { GRAPE_RPC_ENDPOINT, OTHER_MARKETPLACES } from '../../utils/grapeTools/constants';\nimport {InstructionsAndSignersSet} from \"./helpers/types\";\n\nimport {\n    loadAuctionHouseProgram,\n    getAuctionHouseTradeState,\n    getTokenAmount,\n    getAtaForMint,\n    getAuctionHouseBuyerEscrow,\n    getMetadata,\n  } from './helpers/accounts';\nimport { getPriceWithMantissa } from './helpers/various';\nimport { ASSOCIATED_TOKEN_PROGRAM_ID, Token } from '@solana/spl-token';\n\nfunction convertSolVal(sol: any){\n  let sol_precision = 6;\n  return +sol/1000000000;\n}\n\n  export async function submitOffer(offerAmount: number, mint: string, walletPublicKey: string, mintOwner: any): Promise<InstructionsAndSignersSet> {\n\n    let tokenSize = 1;\n    const auctionHouseKey = new web3.PublicKey(AUCTION_HOUSE_ADDRESS);\n    const mintKey = new web3.PublicKey(mint);\n    let anchorProgram = await loadAuctionHouseProgram(null, ENV_AH, GRAPE_RPC_ENDPOINT);\n    const auctionHouseObj = await anchorProgram.account.auctionHouse.fetch(auctionHouseKey,);    \n    const buyerWalletKey = new web3.PublicKey(walletPublicKey);\n    //check if escrow amount already exists to determine if we need to deposit amount to grapevine \n    const escrow = (await getAuctionHouseBuyerEscrow(auctionHouseKey, buyerWalletKey))[0];\n    const escrow_amount = await getTokenAmount(anchorProgram,escrow,auctionHouseObj.treasuryMint,);\n    const escrowSolAmount = convertSolVal(escrow_amount);\n    //console.log('escrow_amount:',escrowSolAmount, 'offerAmount:', offerAmount);\n    //execute BUY\n    const buyPriceAdjusted = new BN(\n      await getPriceWithMantissa(\n          offerAmount,\n          //@ts-ignore\n          auctionHouseObj.treasuryMint,\n          buyerWalletKey,\n          anchorProgram,\n      ),\n    );\n\n    const tokenSizeAdjusted = new BN(\n      await getPriceWithMantissa(\n          tokenSize,\n          mintKey,\n          buyerWalletKey,\n          anchorProgram,\n      ),\n    ); \n\n    const [escrowPaymentAccount, escrowBump] = await getAuctionHouseBuyerEscrow(\n      auctionHouseKey,\n      buyerWalletKey, \n    );\n\n    const results = await anchorProgram.provider.connection.getTokenLargestAccounts(mintKey);    \n  \n    //const tokenAccountKey: web3.PublicKey = tokenAccount ? new web3.PublicKey(tokenAccount) : results.value[0].address;\n    const tokenAccountKey: web3.PublicKey = results.value[0].address;\n\n    const [tradeState, tradeBump] = await getAuctionHouseTradeState(\n      auctionHouseKey,\n      buyerWalletKey,\n      tokenAccountKey,\n      //@ts-ignore\n      auctionHouseObj.treasuryMint,\n      mintKey,\n      tokenSizeAdjusted,\n      buyPriceAdjusted,\n    );\n\n    const isNative = auctionHouseObj.treasuryMint.equals(WRAPPED_SOL_MINT);\n    const ata = (\n        await getAtaForMint(\n            //@ts-ignore\n            auctionHouseObj.treasuryMint,\n            buyerWalletKey,\n        )\n    )[0];\n\n    const transferAuthority = web3.Keypair.generate();\n    const signers = isNative ? [] : [transferAuthority];\n\n    const instruction = anchorProgram.instruction.buy(\n      tradeBump,\n      escrowBump,\n      buyPriceAdjusted,\n      tokenSizeAdjusted,\n      {\n          accounts: {\n              wallet: buyerWalletKey,\n              paymentAccount: isNative ? buyerWalletKey : ata,\n              transferAuthority: isNative ? web3.SystemProgram.programId : transferAuthority.publicKey,\n              metadata: await getMetadata(mintKey),\n              tokenAccount: tokenAccountKey,\n              escrowPaymentAccount,\n              //@ts-ignore\n              treasuryMint: auctionHouseObj.treasuryMint,\n              //@ts-ignore\n              authority: auctionHouseObj.authority,\n              auctionHouse: auctionHouseKey,\n              //@ts-ignore\n              auctionHouseFeeAccount: auctionHouseObj.auctionHouseFeeAccount,\n              buyerTradeState: tradeState,\n              tokenProgram: TOKEN_PROGRAM_ID,\n              systemProgram: web3.SystemProgram.programId,\n              rent: web3.SYSVAR_RENT_PUBKEY,\n          },\n      }\n    );\n    \n    //const instructions = [instruction];\n    const instructions = [\n      ...(isNative\n          ? []\n          : [\n              Token.createApproveInstruction(\n                  TOKEN_PROGRAM_ID,\n                  ata,\n                  transferAuthority.publicKey,\n                  buyerWalletKey, //walletKeyPair.publicKey, \n                  [],\n                  buyPriceAdjusted.toNumber(),\n              ),\n          ]),\n      instruction,\n      ...(isNative\n          ? []\n          : [\n              Token.createRevokeInstruction(\n                  TOKEN_PROGRAM_ID,\n                  ata,\n                  buyerWalletKey, //walletKeyPair.publicKey, \n                  [],\n              ),\n          ]),\n      ];\n    //END BUY\n\n    //CHECK IF DEPOSIT INSTRUCTTION IS NECESSARY\n    if (escrowSolAmount > 0){\n      //calculate how much more to deposit\n      let depositAmount = 0;\n      if (offerAmount < escrowSolAmount){\n          depositAmount = offerAmount;\n      } else {\n          depositAmount = (offerAmount - (offerAmount - escrowSolAmount));\n      }\n      //console.log('depositAmount:', depositAmount);\n      const amountAdjusted = await getPriceWithMantissa(\n        depositAmount,\n        //@ts-ignore\n        auctionHouseObj.treasuryMint,\n        buyerWalletKey,\n        anchorProgram,\n      );\n\n      const [escrowPaymentAccount, escrowBump] = await getAuctionHouseBuyerEscrow(\n        auctionHouseKey,\n        buyerWalletKey,\n      );\n\n      const isNative = auctionHouseObj.treasuryMint.equals(WRAPPED_SOL_MINT);\n\n      const ata = (\n        await getAtaForMint(\n          //@ts-ignore\n          auctionHouseObj.treasuryMint,\n          buyerWalletKey,\n        )\n      )[0];\n\n      const transferAuthority = web3.Keypair.generate();\n      //const signers = isNative ? [] : [transferAuthority];\n\n      const instruction2 = anchorProgram.instruction.deposit(\n        escrowBump,\n        new BN(amountAdjusted),\n        {\n          accounts: {\n            wallet: buyerWalletKey,\n            paymentAccount: isNative ? buyerWalletKey : ata,\n            transferAuthority: isNative\n              ? web3.SystemProgram.programId\n              : transferAuthority.publicKey,\n            escrowPaymentAccount,\n            //@ts-ignore\n            treasuryMint: auctionHouseObj.treasuryMint,\n            //@ts-ignore\n            authority: auctionHouseObj.authority,\n            auctionHouse: auctionHouseKey,\n            //@ts-ignore\n            auctionHouseFeeAccount: auctionHouseObj.auctionHouseFeeAccount,\n            tokenProgram: TOKEN_PROGRAM_ID,\n            systemProgram: web3.SystemProgram.programId,\n            rent: web3.SYSVAR_RENT_PUBKEY,\n          },\n        },\n      );\n      instructions.push(instruction2);\n    }\n    // END ADDING DEPOSIT\n\n    let derivedMintPDA = await web3.PublicKey.findProgramAddress([Buffer.from((mintKey).toBuffer())], auctionHouseKey);\n    let derivedBuyerPDA = await web3.PublicKey.findProgramAddress([Buffer.from((buyerWalletKey).toBuffer())], auctionHouseKey);\n    let derivedOwnerPDA = await web3.PublicKey.findProgramAddress([Buffer.from((new PublicKey(mintOwner)).toBuffer())], auctionHouseKey);\n  \n    const GRAPE_AH_MEMO = {\n      state:1, // status (0: withdraw, 1: offer, 2: listing, 3: buy/execute (from listing), 4: buy/execute(accept offer), 5: cancel)\n      ah:auctionHouseKey.toString(), // pk\n      mint:mintKey.toString(), // mint\n      amount:buyPriceAdjusted.toNumber() // price\n    };\n\n    instructions.push(\n      SystemProgram.transfer({\n        fromPubkey: buyerWalletKey,\n        toPubkey: derivedMintPDA[0],\n        lamports: 0,\n      })\n    );\n\n    instructions.push(\n      SystemProgram.transfer({\n          fromPubkey: buyerWalletKey,\n          toPubkey: derivedBuyerPDA[0],\n          lamports: 0,\n      })\n    );\n    instructions.push(\n      SystemProgram.transfer({\n          fromPubkey: buyerWalletKey,\n          toPubkey: derivedOwnerPDA[0],\n          lamports: 0,\n      })\n    );\n    instructions.push(\n      new TransactionInstruction({\n          keys: [{ pubkey: buyerWalletKey, isSigner: true, isWritable: true }],\n          data: Buffer.from(JSON.stringify(GRAPE_AH_MEMO), 'utf-8'),\n          programId: new PublicKey(\"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr\"),\n      })\n    );\n\n    return {\n      signers: signers,\n      instructions: instructions\n    }\n  \n\n\n  }","/Users/kirk/Solana/grape-art/src/utils/grapeTools/WalletAddress.tsx",["603","604"],"import React from \"react\"\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\n\nimport { Button, CardActionArea } from '@mui/material';\nimport Snackbar, { SnackbarOrigin } from '@mui/material/Snackbar';\n\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport InsertLinkIcon from '@mui/icons-material/InsertLink';\nimport moment from 'moment';\nimport { PublicKey } from '@solana/web3.js';\n\nimport { FEATURED_DAO_ARRAY } from './constants';\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\n    props,\n    ref,\n    ) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nexport function timeAgo(blockTime:string){\n    try{\n        let prettydate = moment.unix(+blockTime).format(\"MMMM Do YYYY, h:mm a\");\n                    //console.log(\"prettyForSaleDate: \"+prettyForSaleDate)\n        let timeago = moment.duration(moment(new Date()).diff(moment.unix(+blockTime))).asDays().toFixed(0);\n        //console.log(\"Time Ago: \"+timeago);\n        if (+timeago >= 1){\n            prettydate = timeago+' days ago';\n        } else{\n            let hoursago = moment.duration(moment(new Date()).diff(moment.unix(+blockTime))).asHours().toFixed(0);\n            if (+hoursago >= 1){\n                prettydate = hoursago+' hours ago';\n            } else {\n                let minutesAgo = moment.duration(moment(new Date()).diff(moment.unix(+blockTime))).asMinutes().toFixed(0);\n                if (+minutesAgo >= 1){\n                    prettydate = minutesAgo+' minutes ago';\n                } else {\n                    let secondsAgo = moment.duration(moment(new Date()).diff(moment.unix(+blockTime))).asSeconds().toFixed(0);\n                    if (+secondsAgo >= 1){\n                        prettydate = minutesAgo+' seconds ago';\n                    }\n                }\n            }\n        }  \n\n        return prettydate;\n    }catch(e){\n        return blockTime;\n    }\n}\n\nexport function trimAddress(addr: any, trim:any) {\n    let start = addr.substring(0, trim);\n    let end = addr.substring(addr.length - trim);\n    return `${start}...${end}`;\n}\n\nexport function ValidateCurve(address:string){\n    return PublicKey.isOnCurve(new PublicKey(address).toBuffer());\n}\n\nexport function ValidateAddress(address:any){\n    try{\n        if (address){\n            //let base58 = useMemo(() => props?.toBase58(), [props]) || null;\n            if ((address.length >= 32) && \n                (address.length <= 45)){    \n                    for (var featured of FEATURED_DAO_ARRAY){\n                        if (featured.address === address){\n                            return true;\n                        }\n                    }\n                    if ((address === 'JAbgQLj9MoJ2Kvie8t8Y6z6as3Epf7rDp87Po3wFwrNK'))\n                        return true;\n                return ValidateCurve(address);\n            }\n            return false;\n        }\n    } catch(e){console.log(\"ERR: \"+e)};\n    \n    return false;\n    \n}\n\nexport function MakeLinkableAddress(props:any){\n    const addr = props?.addr || \"\";\n    const trim = props?.trim;\n    const hasextlink = props?.hasextlink || false;\n    const hascopy = props?.hascopy || false;\n    const fontsize = props?.fontsize || \"16px\";\n    const permalink = props?.permalink || false;\n    const isDNS = props?.isDNS || null;\n    \n    let stri_addr = addr;\n    const [open_snackbar, setSnackbarState] = React.useState(false);\n    \n    const handleCopyClick = () => {\n        setSnackbarState(true);\n    };\n\n    const handleCloseSnackbar = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setSnackbarState(false);\n    };\n    \n    if (addr.length > 0){\n        if (trim>0)\n            stri_addr = trimAddress(addr, trim)\n    }\n\n    function ClipboardAction(){\n        if (hascopy){\n            return (\n                <Button size=\"small\" variant=\"text\">\n                    <CopyToClipboard \n                    text={addr} \n                    onCopy={handleCopyClick}\n                    >\n                        <ContentCopyIcon sx={{fontSize:fontsize, mr:0 }} />\n                    </CopyToClipboard>\n                    <Snackbar open={open_snackbar} autoHideDuration={2000} message=\"Copied\">\n                        <Alert onClose={handleCloseSnackbar} severity=\"success\" sx={{ width: '100%' }}>\n                        Copied!\n                        </Alert>\n                    </Snackbar>\n                </Button>\n            );\n        } else{\n            return <React.Fragment/>\n        }\n    }\n\n    function PermalinkAction(){\n        if (permalink){\n            return (\n                <Button size=\"small\" variant=\"text\">\n                    <CopyToClipboard \n                    text={window.location.href} \n                    onCopy={handleCopyClick}\n                    >\n                        <InsertLinkIcon sx={{fontSize:fontsize, ml:1 }} />\n                    </CopyToClipboard>\n                    <Snackbar open={open_snackbar} autoHideDuration={2000} message=\"Copied\">\n                        <Alert onClose={handleCloseSnackbar} severity=\"success\" sx={{ width: '100%' }}>\n                        Copied!\n                        </Alert>\n                    </Snackbar>\n                </Button>\n            );\n        } else{\n            return <React.Fragment/>\n        }\n    }\n    \n    if (addr.length > 0){\n        if (hasextlink){\n            return ( \n                <React.Fragment>\n                    <ClipboardAction />\n                    <Button size=\"small\" variant=\"text\" component=\"a\" href={`https://explorer.solana.com/address/${addr}`} target=\"_blank\">{stri_addr} <OpenInNewIcon sx={{fontSize:fontsize, ml:1}} /></Button>\n                    <PermalinkAction />\n                </React.Fragment>\n            )\n        } else {\n            return ( \n                <React.Fragment>\n                    <ClipboardAction />\n                    {isDNS ?\n                        <>{addr}</>\n                    :\n                    <Button size=\"small\" variant=\"text\" component=\"a\" href={`https://explorer.solana.com/address/${addr}`} target=\"_blank\">{stri_addr}</Button>\n                    }\n                    <PermalinkAction />\n                </React.Fragment>\n            )\n        }\n    } else{\n        return (\n            <React.Fragment>\n            </React.Fragment>\n        )\n    }\n}","/Users/kirk/Solana/grape-art/src/utils/grapeTools/ShareUrl.tsx",["605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624"],"/Users/kirk/Solana/grape-art/src/utils/name-service.tsx",["625","626","627","628"],"import { PublicKey, Connection } from \"@solana/web3.js\";\n//import { useAsync } from \"./utils.native\";\nimport { asyncCache } from \"./cache\";\nimport {\n  findOwnedNameAccountsForUser,\n  performReverseLookupBatch,\n} from \"./web3/name-auctioning\";\nimport { getHandleAndRegistryKey } from \"./web3/name-service\";\nimport { useConnection, useWallet } from '@solana/wallet-adapter-react';\n//import { Profile } from \"./web3/jabber\";\n\nexport const SOL_TLD_AUTHORITY = new PublicKey(\n  \"58PwtjSDuFHuUkYjH9BYnnQKHfwo9reZhC2zMJv9JPkx\"\n);\n\nexport const findDisplayName = async (\n  connection: Connection,\n  receiver: string\n) => {\n  let allNames: string[] = [];\n  let favoriteDisplayName: string | undefined = undefined;\n\n  try {\n      /*\n    try {\n      const profile = await Profile.retrieve(\n        connection,\n        new PublicKey(receiver)\n      );\n      favoriteDisplayName = profile.name.split(\":fdn:\")[1];\n      if (favoriteDisplayName) {\n        allNames.push(favoriteDisplayName);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n\n    const knownReceiver = await asyncCache.get<string[]>(receiver);\n    if (knownReceiver && knownReceiver?.length > 0) {\n      if (favoriteDisplayName && favoriteDisplayName !== knownReceiver[0]) {\n        await asyncCache.set(receiver, [\n          favoriteDisplayName,\n          ...knownReceiver?.filter((e) => e !== favoriteDisplayName),\n        ]);\n        return [\n          favoriteDisplayName,\n          ...knownReceiver?.filter((e) => e !== favoriteDisplayName),\n        ];\n      }\n      return knownReceiver;\n    }\n    */\n\n    const domainsAddresses = await findOwnedNameAccountsForUser(\n      connection,\n      new PublicKey(receiver)\n    );\n    domainsAddresses.sort((a, b) => a.toBase58().localeCompare(b.toBase58()));\n    if (domainsAddresses.length === 0) {\n      return [receiver];\n    }\n\n    const reverse = (\n      await performReverseLookupBatch(connection, domainsAddresses)\n    )\n      .filter((e) => !!e)\n      .map((e) => e + \".sol\") as string[];\n\n    allNames = [...allNames, ...reverse];\n\n    if (allNames.length > 0) {\n      await asyncCache.set(receiver, allNames);\n      return allNames;\n    }\n\n    try {\n      const [display] = await getHandleAndRegistryKey(\n        connection,\n        new PublicKey(receiver)\n      );\n      return [\"@\" + display];\n    } catch (err) {\n      console.log(err);\n    }\n\n    return [receiver];\n  } catch (err) {\n    console.log(err);\n    return undefined;\n  }\n};\n\nexport const useDisplayName = (contact: string | undefined) => {\n    const { connection } = useConnection();\n\n  const fn = async (): Promise<string[] | undefined> => {\n    if (!contact) return;\n    return await findDisplayName(connection, contact);\n  };\n\n  return false;\n  //return useAsync(fn, false);\n};\n\nexport const ownerHasDomain = async (\n  connection: Connection,\n  owner: PublicKey\n) => {\n  try {\n    const domainsAddresses = await findOwnedNameAccountsForUser(\n      connection,\n      owner\n    );\n    return domainsAddresses.length != 0;\n  } catch (err) {\n    console.log(err);\n  }\n  try {\n    await getHandleAndRegistryKey(connection, owner);\n    return true;\n  } catch (err) {\n    console.log(err);\n  }\n\n  return false;\n};\n\nexport const useUserHasDomainOrTwitter = () => {\n  const { publicKey } = useWallet();\n  const { connection } = useConnection();\n\n  const fn = async () => {\n    let hasDomain = false;\n    let hasTwitter = false;\n    if (!publicKey) return;\n    try {\n      const domainsAddresses = await findOwnedNameAccountsForUser(\n        connection,\n        publicKey\n      );\n      hasDomain = domainsAddresses.length !== 0;\n    } catch (err) {\n      console.log(err);\n    }\n\n    try {\n      await getHandleAndRegistryKey(connection, publicKey);\n      hasTwitter = true;\n    } catch (err) {\n      console.log(err);\n    }\n\n    return { hasTwitter: hasTwitter, hasDomain: hasDomain };\n  };\n  return false;\n  //return useAsync(fn, false);\n};\n","/Users/kirk/Solana/grape-art/src/components/static/SolCurrencyIcon.tsx",[],"/Users/kirk/Solana/grape-art/src/components/static/GrapeIcon.tsx",[],"/Users/kirk/Solana/grape-art/src/utils/grapeTools/whitelist.ts",[],"/Users/kirk/Solana/grape-art/src/utils/grapeTools/mintverification.ts",[],"/Users/kirk/Solana/grape-art/src/utils/grapeTools/RegexTextField.jsx",[],"/Users/kirk/Solana/grape-art/src/utils/web3/name-service.tsx",[],"/Users/kirk/Solana/grape-art/src/utils/web3/name-auctioning.tsx",[],"/Users/kirk/Solana/grape-art/src/utils/cache.tsx",["629"],"import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { ethers } from \"ethers\";\nimport { useEffect, useState, useCallback } from \"react\";\n\nexport function hashCode(s: string) {\n  let h = 0;\n  for (let i = 0; i < s.length; i++)\n    h = (Math.imul(31, h) + s.charCodeAt(i)) | 0;\n\n  return h.toString();\n}\n\nexport enum CachePrefix {\n  Message = \"message_\",\n  DecryptedMessage = \"decrypted_message_\",\n  Media = \"media_\",\n  DecryptedMedia = \"decrypted_media_\",\n  MessageCount = \"message_count_\",\n  RetrievedThread = \"retrieved_thread_\",\n  LastMsgCount = \"last_msg_count_\",\n  ProfilePicture = \"profile_pic_\",\n  Archive = \"archive_\",\n  CentralState = \"central_state_\",\n  Sha256 = \"sha256_\",\n  ProgramAddress = \"program_address_\",\n  IpfsHash = \"ipfs_hash_\",\n}\n\nexport class asyncCache {\n  static async get<T>(key: string): Promise<T | null> {\n    const cached = await AsyncStorage.getItem(hashCode(key));\n    if (!cached) {\n      return null;\n    }\n    return JSON.parse(cached);\n  }\n  static async set<T>(key: string, value: T) {\n    const stringified = JSON.stringify(value);\n    await AsyncStorage.setItem(hashCode(key), stringified);\n  }\n\n  static async sha256(data: ethers.utils.BytesLike): Promise<string> {\n    const cached = await asyncCache.get<string>(\n      CachePrefix.Sha256 + data.toString()\n    );\n    if (cached) {\n      return cached;\n    }\n    const result: string = await new Promise((resolve) =>\n      resolve(ethers.utils.sha256(data).slice(2))\n    );\n    await asyncCache.set(CachePrefix.Sha256 + data.toString(), result);\n    return result;\n  }\n}\n\nexport function useGetAsyncCache<T>(key: string, refresh?: boolean): T | null {\n  const [cached, setCached] = useState<T | null>(null);\n\n  const fn = useCallback(async () => {\n    return await asyncCache.get<T>(key);\n  }, [key]);\n\n  useEffect(() => {\n    let mounted = true;\n    fn().then((c) => {\n      if (!mounted) return null;\n      setCached(c);\n    });\n\n    return () => {\n      mounted = false;\n    };\n  }, [refresh, key]);\n  return cached;\n}","/Users/kirk/Solana/grape-art/src/utils/web3/program-address.tsx",["630"],"/** @solana/web3.js is not compatible with react-native */\nimport nacl from \"tweetnacl\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport { Buffer } from \"buffer\";\nimport BN from \"bn.js\";\nimport { asyncCache } from \"../cache\";\nimport { ethers } from \"ethers\";\n\nexport const MAX_SEED_LENGTH = 32;\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n\nexport async function createProgramAddress(\n  seeds: Array<Buffer | Uint8Array>,\n  programId: PublicKey\n): Promise<PublicKey> {\n  let buffer = Buffer.alloc(0);\n  seeds.forEach(function (seed) {\n    if (seed.length > MAX_SEED_LENGTH) {\n      throw new TypeError(`Max seed length exceeded`);\n    }\n    buffer = Buffer.concat([buffer, toBuffer(seed)]);\n  });\n  buffer = Buffer.concat([\n    buffer,\n    programId.toBuffer(),\n    Buffer.from(\"ProgramDerivedAddress\"),\n  ]);\n  const hash: string = await new Promise((resolve) =>\n    resolve(ethers.utils.sha256(new Uint8Array(buffer)).slice(2))\n  );\n  const publicKeyBytes = new BN(hash, 16).toArray(undefined, 32);\n\n  if (is_on_curve(publicKeyBytes)) {\n    throw new Error(`Invalid seeds, address must fall off the curve`);\n  }\n  const key = new PublicKey(publicKeyBytes);\n  return key;\n}\n\nexport async function findProgramAddress(\n  seeds: Array<Buffer | Uint8Array>,\n  programId: PublicKey\n): Promise<[PublicKey, number]> {\n  const cached = await asyncCache.get<{ address: string; nonce: number }>(\n    seeds.toString()\n  );\n  if (cached) {\n    return [new PublicKey(cached.address), cached.nonce];\n  }\n  let nonce = 255;\n  let address;\n  while (nonce != 0) {\n    try {\n      const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n      address = await createProgramAddress(seedsWithNonce, programId);\n      await asyncCache.set(seeds.toString(), {\n        address: address.toBase58(),\n        nonce: nonce,\n      });\n    } catch (err) {\n      if (err instanceof TypeError) {\n        throw err;\n      }\n      nonce--;\n      continue;\n    }\n    return [address, nonce];\n  }\n  throw new Error(`Unable to find a viable program address nonce`);\n}\n\n/* eslint-disable */\n//  @ts-ignore\nlet naclLowLevel = nacl.lowlevel;\n\n// Check that a pubkey is on the curve.\n// This function and its dependents were sourced from:\n// https://github.com/dchest/tweetnacl-js/blob/f1ec050ceae0861f34280e62498b1d3ed9c350c6/nacl.js#L792\nfunction is_on_curve(p: any) {\n  var r = [\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n  ];\n\n  var t = naclLowLevel.gf(),\n    chk = naclLowLevel.gf(),\n    num = naclLowLevel.gf(),\n    den = naclLowLevel.gf(),\n    den2 = naclLowLevel.gf(),\n    den4 = naclLowLevel.gf(),\n    den6 = naclLowLevel.gf();\n\n  naclLowLevel.set25519(r[2], gf1);\n  naclLowLevel.unpack25519(r[1], p);\n  naclLowLevel.S(num, r[1]);\n  naclLowLevel.M(den, num, naclLowLevel.D);\n  naclLowLevel.Z(num, num, r[2]);\n  naclLowLevel.A(den, r[2], den);\n\n  naclLowLevel.S(den2, den);\n  naclLowLevel.S(den4, den2);\n  naclLowLevel.M(den6, den4, den2);\n  naclLowLevel.M(t, den6, num);\n  naclLowLevel.M(t, t, den);\n\n  naclLowLevel.pow2523(t, t);\n  naclLowLevel.M(t, t, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(r[0], t, den);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) naclLowLevel.M(r[0], r[0], I);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) return 0;\n  return 1;\n}\nlet gf1 = naclLowLevel.gf([1]);\nlet I = naclLowLevel.gf([\n  0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7,\n  0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83,\n]);\nfunction neq25519(a: any, b: any) {\n  var c = new Uint8Array(32),\n    d = new Uint8Array(32);\n  naclLowLevel.pack25519(c, a);\n  naclLowLevel.pack25519(d, b);\n  return naclLowLevel.crypto_verify_32(c, 0, d, 0);\n}\n\n/* eslint-enable */",{"ruleId":"631","replacedBy":"632"},{"ruleId":"633","replacedBy":"634"},{"ruleId":"635","severity":1,"message":"636","line":1,"column":17,"nodeType":"637","messageId":"638","endLine":1,"endColumn":19},{"ruleId":"635","severity":1,"message":"639","line":1,"column":21,"nodeType":"637","messageId":"638","endLine":1,"endColumn":30},{"ruleId":"635","severity":1,"message":"640","line":1,"column":32,"nodeType":"637","messageId":"638","endLine":1,"endColumn":43},{"ruleId":"635","severity":1,"message":"641","line":2,"column":10,"nodeType":"637","messageId":"638","endLine":2,"endColumn":16},{"ruleId":"635","severity":1,"message":"642","line":3,"column":10,"nodeType":"637","messageId":"638","endLine":3,"endColumn":20},{"ruleId":"635","severity":1,"message":"643","line":9,"column":8,"nodeType":"637","messageId":"638","endLine":9,"endColumn":17},{"ruleId":"635","severity":1,"message":"644","line":12,"column":3,"nodeType":"637","messageId":"638","endLine":12,"endColumn":6},{"ruleId":"635","severity":1,"message":"645","line":22,"column":10,"nodeType":"637","messageId":"638","endLine":22,"endColumn":23},{"ruleId":"635","severity":1,"message":"646","line":22,"column":61,"nodeType":"637","messageId":"638","endLine":22,"endColumn":70},{"ruleId":"635","severity":1,"message":"647","line":23,"column":32,"nodeType":"637","messageId":"638","endLine":23,"endColumn":43},{"ruleId":"635","severity":1,"message":"648","line":23,"column":45,"nodeType":"637","messageId":"638","endLine":23,"endColumn":68},{"ruleId":"635","severity":1,"message":"649","line":24,"column":10,"nodeType":"637","messageId":"638","endLine":24,"endColumn":20},{"ruleId":"635","severity":1,"message":"650","line":24,"column":22,"nodeType":"637","messageId":"638","endLine":24,"endColumn":29},{"ruleId":"635","severity":1,"message":"651","line":24,"column":31,"nodeType":"637","messageId":"638","endLine":24,"endColumn":44},{"ruleId":"635","severity":1,"message":"652","line":24,"column":46,"nodeType":"637","messageId":"638","endLine":24,"endColumn":57},{"ruleId":"635","severity":1,"message":"653","line":24,"column":59,"nodeType":"637","messageId":"638","endLine":24,"endColumn":72},{"ruleId":"635","severity":1,"message":"654","line":25,"column":10,"nodeType":"637","messageId":"638","endLine":25,"endColumn":16},{"ruleId":"635","severity":1,"message":"655","line":27,"column":10,"nodeType":"637","messageId":"638","endLine":27,"endColumn":21},{"ruleId":"635","severity":1,"message":"656","line":63,"column":10,"nodeType":"637","messageId":"638","endLine":63,"endColumn":28},{"ruleId":"631","replacedBy":"632"},{"ruleId":"633","replacedBy":"634"},{"ruleId":"657","severity":1,"message":"658","line":33,"column":35,"nodeType":"659","messageId":"660","endLine":115,"endColumn":2,"fix":"661"},{"ruleId":"635","severity":1,"message":"662","line":3,"column":10,"nodeType":"637","messageId":"638","endLine":3,"endColumn":14},{"ruleId":"635","severity":1,"message":"663","line":5,"column":9,"nodeType":"637","messageId":"638","endLine":5,"endColumn":24},{"ruleId":"635","severity":1,"message":"664","line":14,"column":8,"nodeType":"637","messageId":"638","endLine":14,"endColumn":16},{"ruleId":"635","severity":1,"message":"665","line":18,"column":5,"nodeType":"637","messageId":"638","endLine":18,"endColumn":27},{"ruleId":"635","severity":1,"message":"666","line":23,"column":5,"nodeType":"637","messageId":"638","endLine":23,"endColumn":13},{"ruleId":"635","severity":1,"message":"667","line":24,"column":5,"nodeType":"637","messageId":"638","endLine":24,"endColumn":9},{"ruleId":"635","severity":1,"message":"668","line":25,"column":5,"nodeType":"637","messageId":"638","endLine":25,"endColumn":12},{"ruleId":"635","severity":1,"message":"669","line":29,"column":5,"nodeType":"637","messageId":"638","endLine":29,"endColumn":10},{"ruleId":"635","severity":1,"message":"670","line":38,"column":8,"nodeType":"637","messageId":"638","endLine":38,"endColumn":18},{"ruleId":"635","severity":1,"message":"671","line":40,"column":8,"nodeType":"637","messageId":"638","endLine":40,"endColumn":29},{"ruleId":"635","severity":1,"message":"672","line":55,"column":11,"nodeType":"637","messageId":"638","endLine":55,"endColumn":22},{"ruleId":"635","severity":1,"message":"673","line":102,"column":7,"nodeType":"637","messageId":"638","endLine":102,"endColumn":12},{"ruleId":"635","severity":1,"message":"674","line":110,"column":13,"nodeType":"637","messageId":"638","endLine":110,"endColumn":22},{"ruleId":"635","severity":1,"message":"675","line":111,"column":12,"nodeType":"637","messageId":"638","endLine":111,"endColumn":25},{"ruleId":"635","severity":1,"message":"676","line":113,"column":12,"nodeType":"637","messageId":"638","endLine":113,"endColumn":22},{"ruleId":"635","severity":1,"message":"677","line":113,"column":24,"nodeType":"637","messageId":"638","endLine":113,"endColumn":37},{"ruleId":"635","severity":1,"message":"678","line":114,"column":12,"nodeType":"637","messageId":"638","endLine":114,"endColumn":21},{"ruleId":"635","severity":1,"message":"679","line":114,"column":23,"nodeType":"637","messageId":"638","endLine":114,"endColumn":35},{"ruleId":"635","severity":1,"message":"680","line":115,"column":12,"nodeType":"637","messageId":"638","endLine":115,"endColumn":18},{"ruleId":"635","severity":1,"message":"681","line":115,"column":20,"nodeType":"637","messageId":"638","endLine":115,"endColumn":29},{"ruleId":"635","severity":1,"message":"682","line":116,"column":23,"nodeType":"637","messageId":"638","endLine":116,"endColumn":35},{"ruleId":"635","severity":1,"message":"683","line":117,"column":12,"nodeType":"637","messageId":"638","endLine":117,"endColumn":23},{"ruleId":"635","severity":1,"message":"684","line":120,"column":11,"nodeType":"637","messageId":"638","endLine":120,"endColumn":23},{"ruleId":"635","severity":1,"message":"685","line":124,"column":11,"nodeType":"637","messageId":"638","endLine":124,"endColumn":19},{"ruleId":"635","severity":1,"message":"686","line":125,"column":11,"nodeType":"637","messageId":"638","endLine":125,"endColumn":23},{"ruleId":"635","severity":1,"message":"687","line":129,"column":11,"nodeType":"637","messageId":"638","endLine":129,"endColumn":17},{"ruleId":"635","severity":1,"message":"688","line":175,"column":11,"nodeType":"637","messageId":"638","endLine":175,"endColumn":17},{"ruleId":"635","severity":1,"message":"689","line":176,"column":11,"nodeType":"637","messageId":"638","endLine":176,"endColumn":23},{"ruleId":"635","severity":1,"message":"690","line":178,"column":11,"nodeType":"637","messageId":"638","endLine":178,"endColumn":32},{"ruleId":"635","severity":1,"message":"691","line":187,"column":11,"nodeType":"637","messageId":"638","endLine":187,"endColumn":39},{"ruleId":"635","severity":1,"message":"692","line":207,"column":11,"nodeType":"637","messageId":"638","endLine":207,"endColumn":28},{"ruleId":"635","severity":1,"message":"693","line":212,"column":14,"nodeType":"637","messageId":"638","endLine":212,"endColumn":26},{"ruleId":"635","severity":1,"message":"694","line":237,"column":11,"nodeType":"637","messageId":"638","endLine":237,"endColumn":30},{"ruleId":"635","severity":1,"message":"695","line":260,"column":11,"nodeType":"637","messageId":"638","endLine":260,"endColumn":30},{"ruleId":"635","severity":1,"message":"640","line":1,"column":38,"nodeType":"637","messageId":"638","endLine":1,"endColumn":49},{"ruleId":"635","severity":1,"message":"696","line":1,"column":51,"nodeType":"637","messageId":"638","endLine":1,"endColumn":55},{"ruleId":"635","severity":1,"message":"697","line":3,"column":10,"nodeType":"637","messageId":"638","endLine":3,"endColumn":16},{"ruleId":"635","severity":1,"message":"698","line":7,"column":8,"nodeType":"637","messageId":"638","endLine":7,"endColumn":19},{"ruleId":"635","severity":1,"message":"699","line":8,"column":8,"nodeType":"637","messageId":"638","endLine":8,"endColumn":22},{"ruleId":"635","severity":1,"message":"700","line":14,"column":10,"nodeType":"637","messageId":"638","endLine":14,"endColumn":23},{"ruleId":"635","severity":1,"message":"701","line":14,"column":42,"nodeType":"637","messageId":"638","endLine":14,"endColumn":53},{"ruleId":"635","severity":1,"message":"702","line":15,"column":10,"nodeType":"637","messageId":"638","endLine":15,"endColumn":17},{"ruleId":"635","severity":1,"message":"703","line":21,"column":23,"nodeType":"637","messageId":"638","endLine":21,"endColumn":25},{"ruleId":"635","severity":1,"message":"651","line":22,"column":33,"nodeType":"637","messageId":"638","endLine":22,"endColumn":46},{"ruleId":"635","severity":1,"message":"704","line":22,"column":61,"nodeType":"637","messageId":"638","endLine":22,"endColumn":83},{"ruleId":"635","severity":1,"message":"654","line":24,"column":10,"nodeType":"637","messageId":"638","endLine":24,"endColumn":16},{"ruleId":"635","severity":1,"message":"705","line":28,"column":10,"nodeType":"637","messageId":"638","endLine":28,"endColumn":20},{"ruleId":"635","severity":1,"message":"706","line":28,"column":30,"nodeType":"637","messageId":"638","endLine":28,"endColumn":35},{"ruleId":"635","severity":1,"message":"707","line":37,"column":5,"nodeType":"637","messageId":"638","endLine":37,"endColumn":21},{"ruleId":"635","severity":1,"message":"708","line":38,"column":5,"nodeType":"637","messageId":"638","endLine":38,"endColumn":21},{"ruleId":"635","severity":1,"message":"709","line":46,"column":5,"nodeType":"637","messageId":"638","endLine":46,"endColumn":16},{"ruleId":"635","severity":1,"message":"710","line":47,"column":5,"nodeType":"637","messageId":"638","endLine":47,"endColumn":35},{"ruleId":"635","severity":1,"message":"711","line":48,"column":5,"nodeType":"637","messageId":"638","endLine":48,"endColumn":18},{"ruleId":"635","severity":1,"message":"712","line":65,"column":5,"nodeType":"637","messageId":"638","endLine":65,"endColumn":14},{"ruleId":"635","severity":1,"message":"713","line":92,"column":5,"nodeType":"637","messageId":"638","endLine":92,"endColumn":18},{"ruleId":"635","severity":1,"message":"714","line":93,"column":5,"nodeType":"637","messageId":"638","endLine":93,"endColumn":20},{"ruleId":"635","severity":1,"message":"715","line":94,"column":5,"nodeType":"637","messageId":"638","endLine":94,"endColumn":16},{"ruleId":"635","severity":1,"message":"716","line":95,"column":5,"nodeType":"637","messageId":"638","endLine":95,"endColumn":21},{"ruleId":"635","severity":1,"message":"717","line":96,"column":5,"nodeType":"637","messageId":"638","endLine":96,"endColumn":14},{"ruleId":"635","severity":1,"message":"718","line":99,"column":10,"nodeType":"637","messageId":"638","endLine":99,"endColumn":24},{"ruleId":"635","severity":1,"message":"719","line":104,"column":10,"nodeType":"637","messageId":"638","endLine":104,"endColumn":37},{"ruleId":"635","severity":1,"message":"720","line":104,"column":39,"nodeType":"637","messageId":"638","endLine":104,"endColumn":44},{"ruleId":"635","severity":1,"message":"721","line":121,"column":8,"nodeType":"637","messageId":"638","endLine":121,"endColumn":16},{"ruleId":"635","severity":1,"message":"722","line":132,"column":10,"nodeType":"637","messageId":"638","endLine":132,"endColumn":22},{"ruleId":"635","severity":1,"message":"723","line":136,"column":10,"nodeType":"637","messageId":"638","endLine":136,"endColumn":25},{"ruleId":"635","severity":1,"message":"724","line":136,"column":27,"nodeType":"637","messageId":"638","endLine":136,"endColumn":46},{"ruleId":"635","severity":1,"message":"725","line":136,"column":48,"nodeType":"637","messageId":"638","endLine":136,"endColumn":68},{"ruleId":"635","severity":1,"message":"726","line":136,"column":70,"nodeType":"637","messageId":"638","endLine":136,"endColumn":88},{"ruleId":"635","severity":1,"message":"727","line":137,"column":10,"nodeType":"637","messageId":"638","endLine":137,"endColumn":18},{"ruleId":"635","severity":1,"message":"728","line":139,"column":7,"nodeType":"637","messageId":"638","endLine":139,"endColumn":18},{"ruleId":"635","severity":1,"message":"729","line":165,"column":9,"nodeType":"637","messageId":"638","endLine":165,"endColumn":19},{"ruleId":"635","severity":1,"message":"730","line":176,"column":10,"nodeType":"637","messageId":"638","endLine":176,"endColumn":18},{"ruleId":"635","severity":1,"message":"731","line":200,"column":7,"nodeType":"637","messageId":"638","endLine":200,"endColumn":19},{"ruleId":"635","severity":1,"message":"732","line":292,"column":10,"nodeType":"637","messageId":"638","endLine":292,"endColumn":22},{"ruleId":"635","severity":1,"message":"733","line":303,"column":10,"nodeType":"637","messageId":"638","endLine":303,"endColumn":23},{"ruleId":"635","severity":1,"message":"734","line":313,"column":6,"nodeType":"637","messageId":"638","endLine":313,"endColumn":11},{"ruleId":"635","severity":1,"message":"735","line":326,"column":15,"nodeType":"637","messageId":"638","endLine":326,"endColumn":32},{"ruleId":"635","severity":1,"message":"736","line":330,"column":15,"nodeType":"637","messageId":"638","endLine":330,"endColumn":24},{"ruleId":"737","severity":1,"message":"738","line":365,"column":12,"nodeType":"739","endLine":365,"endColumn":28,"suggestions":"740"},{"ruleId":"635","severity":1,"message":"741","line":470,"column":19,"nodeType":"637","messageId":"638","endLine":470,"endColumn":27},{"ruleId":"635","severity":1,"message":"742","line":471,"column":12,"nodeType":"637","messageId":"638","endLine":471,"endColumn":19},{"ruleId":"635","severity":1,"message":"743","line":472,"column":12,"nodeType":"637","messageId":"638","endLine":472,"endColumn":27},{"ruleId":"635","severity":1,"message":"744","line":474,"column":12,"nodeType":"637","messageId":"638","endLine":474,"endColumn":24},{"ruleId":"635","severity":1,"message":"745","line":477,"column":13,"nodeType":"637","messageId":"638","endLine":477,"endColumn":23},{"ruleId":"635","severity":1,"message":"746","line":479,"column":12,"nodeType":"637","messageId":"638","endLine":479,"endColumn":23},{"ruleId":"635","severity":1,"message":"747","line":479,"column":25,"nodeType":"637","messageId":"638","endLine":479,"endColumn":39},{"ruleId":"635","severity":1,"message":"748","line":492,"column":21,"nodeType":"637","messageId":"638","endLine":492,"endColumn":32},{"ruleId":"737","severity":1,"message":"749","line":516,"column":12,"nodeType":"739","endLine":516,"endColumn":21,"suggestions":"750"},{"ruleId":"657","severity":1,"message":"658","line":665,"column":29,"nodeType":"659","messageId":"660","endLine":665,"endColumn":40,"fix":"751"},{"ruleId":"635","severity":1,"message":"752","line":670,"column":31,"nodeType":"637","messageId":"638","endLine":670,"endColumn":35},{"ruleId":"635","severity":1,"message":"748","line":690,"column":25,"nodeType":"637","messageId":"638","endLine":690,"endColumn":36},{"ruleId":"635","severity":1,"message":"753","line":692,"column":25,"nodeType":"637","messageId":"638","endLine":692,"endColumn":35},{"ruleId":"635","severity":1,"message":"754","line":711,"column":19,"nodeType":"637","messageId":"638","endLine":711,"endColumn":34},{"ruleId":"635","severity":1,"message":"755","line":735,"column":17,"nodeType":"637","messageId":"638","endLine":735,"endColumn":25},{"ruleId":"756","severity":1,"message":"757","line":736,"column":22,"nodeType":"637","messageId":"758","endLine":736,"endColumn":27},{"ruleId":"635","severity":1,"message":"759","line":745,"column":33,"nodeType":"637","messageId":"638","endLine":745,"endColumn":41},{"ruleId":"635","severity":1,"message":"760","line":746,"column":33,"nodeType":"637","messageId":"638","endLine":746,"endColumn":44},{"ruleId":"635","severity":1,"message":"761","line":762,"column":41,"nodeType":"637","messageId":"638","endLine":762,"endColumn":45},{"ruleId":"756","severity":1,"message":"762","line":826,"column":22,"nodeType":"637","messageId":"758","endLine":826,"endColumn":23},{"ruleId":"635","severity":1,"message":"763","line":920,"column":20,"nodeType":"637","messageId":"638","endLine":920,"endColumn":29},{"ruleId":"635","severity":1,"message":"764","line":921,"column":18,"nodeType":"637","messageId":"638","endLine":921,"endColumn":25},{"ruleId":"635","severity":1,"message":"765","line":923,"column":12,"nodeType":"637","messageId":"638","endLine":923,"endColumn":16},{"ruleId":"635","severity":1,"message":"766","line":923,"column":18,"nodeType":"637","messageId":"638","endLine":923,"endColumn":25},{"ruleId":"635","severity":1,"message":"767","line":924,"column":11,"nodeType":"637","messageId":"638","endLine":924,"endColumn":19},{"ruleId":"635","severity":1,"message":"745","line":926,"column":13,"nodeType":"637","messageId":"638","endLine":926,"endColumn":23},{"ruleId":"635","severity":1,"message":"768","line":927,"column":12,"nodeType":"637","messageId":"638","endLine":927,"endColumn":24},{"ruleId":"635","severity":1,"message":"769","line":927,"column":26,"nodeType":"637","messageId":"638","endLine":927,"endColumn":41},{"ruleId":"635","severity":1,"message":"770","line":928,"column":12,"nodeType":"637","messageId":"638","endLine":928,"endColumn":23},{"ruleId":"635","severity":1,"message":"771","line":928,"column":25,"nodeType":"637","messageId":"638","endLine":928,"endColumn":39},{"ruleId":"635","severity":1,"message":"772","line":930,"column":12,"nodeType":"637","messageId":"638","endLine":930,"endColumn":26},{"ruleId":"635","severity":1,"message":"773","line":930,"column":28,"nodeType":"637","messageId":"638","endLine":930,"endColumn":45},{"ruleId":"635","severity":1,"message":"774","line":939,"column":11,"nodeType":"637","messageId":"638","endLine":939,"endColumn":23},{"ruleId":"635","severity":1,"message":"775","line":1016,"column":25,"nodeType":"637","messageId":"638","endLine":1016,"endColumn":35},{"ruleId":"737","severity":1,"message":"776","line":1046,"column":12,"nodeType":"739","endLine":1046,"endColumn":14,"suggestions":"777"},{"ruleId":"635","severity":1,"message":"778","line":1105,"column":28,"nodeType":"637","messageId":"638","endLine":1105,"endColumn":41},{"ruleId":"635","severity":1,"message":"779","line":1106,"column":31,"nodeType":"637","messageId":"638","endLine":1106,"endColumn":47},{"ruleId":"737","severity":1,"message":"780","line":1148,"column":8,"nodeType":"739","endLine":1148,"endColumn":10,"suggestions":"781"},{"ruleId":"635","severity":1,"message":"782","line":1225,"column":28,"nodeType":"637","messageId":"638","endLine":1225,"endColumn":44},{"ruleId":"635","severity":1,"message":"783","line":1230,"column":30,"nodeType":"637","messageId":"638","endLine":1230,"endColumn":49},{"ruleId":"635","severity":1,"message":"784","line":1231,"column":12,"nodeType":"637","messageId":"638","endLine":1231,"endColumn":32},{"ruleId":"635","severity":1,"message":"785","line":1231,"column":34,"nodeType":"637","messageId":"638","endLine":1231,"endColumn":57},{"ruleId":"635","severity":1,"message":"786","line":1233,"column":12,"nodeType":"637","messageId":"638","endLine":1233,"endColumn":19},{"ruleId":"635","severity":1,"message":"741","line":1234,"column":19,"nodeType":"637","messageId":"638","endLine":1234,"endColumn":27},{"ruleId":"635","severity":1,"message":"742","line":1235,"column":12,"nodeType":"637","messageId":"638","endLine":1235,"endColumn":19},{"ruleId":"635","severity":1,"message":"743","line":1236,"column":12,"nodeType":"637","messageId":"638","endLine":1236,"endColumn":27},{"ruleId":"635","severity":1,"message":"765","line":1237,"column":12,"nodeType":"637","messageId":"638","endLine":1237,"endColumn":16},{"ruleId":"635","severity":1,"message":"766","line":1237,"column":18,"nodeType":"637","messageId":"638","endLine":1237,"endColumn":25},{"ruleId":"635","severity":1,"message":"787","line":1240,"column":11,"nodeType":"637","messageId":"638","endLine":1240,"endColumn":22},{"ruleId":"635","severity":1,"message":"788","line":1246,"column":11,"nodeType":"637","messageId":"638","endLine":1246,"endColumn":34},{"ruleId":"635","severity":1,"message":"789","line":1250,"column":11,"nodeType":"637","messageId":"638","endLine":1250,"endColumn":28},{"ruleId":"756","severity":1,"message":"790","line":1458,"column":30,"nodeType":"637","messageId":"758","endLine":1458,"endColumn":34},{"ruleId":"635","severity":1,"message":"791","line":1585,"column":17,"nodeType":"637","messageId":"638","endLine":1585,"endColumn":38},{"ruleId":"756","severity":1,"message":"757","line":1597,"column":22,"nodeType":"637","messageId":"758","endLine":1597,"endColumn":27},{"ruleId":"635","severity":1,"message":"792","line":1645,"column":37,"nodeType":"637","messageId":"638","endLine":1645,"endColumn":48},{"ruleId":"793","severity":1,"message":"794","line":1655,"column":37,"nodeType":"795","messageId":"796","endLine":1880,"endColumn":38},{"ruleId":"635","severity":1,"message":"761","line":1665,"column":53,"nodeType":"637","messageId":"638","endLine":1665,"endColumn":57},{"ruleId":"756","severity":1,"message":"762","line":1729,"column":82,"nodeType":"637","messageId":"758","endLine":1729,"endColumn":83},{"ruleId":"756","severity":1,"message":"762","line":1734,"column":82,"nodeType":"637","messageId":"758","endLine":1734,"endColumn":83},{"ruleId":"797","severity":1,"message":"798","line":1816,"column":119,"nodeType":"799","messageId":"800","endLine":1816,"endColumn":121},{"ruleId":"797","severity":1,"message":"801","line":1822,"column":122,"nodeType":"799","messageId":"800","endLine":1822,"endColumn":124},{"ruleId":"793","severity":1,"message":"794","line":1850,"column":61,"nodeType":"795","messageId":"796","endLine":1874,"endColumn":62},{"ruleId":"756","severity":1,"message":"762","line":1855,"column":78,"nodeType":"637","messageId":"758","endLine":1855,"endColumn":79},{"ruleId":"756","severity":1,"message":"762","line":1938,"column":22,"nodeType":"637","messageId":"758","endLine":1938,"endColumn":23},{"ruleId":"635","severity":1,"message":"802","line":1995,"column":17,"nodeType":"637","messageId":"638","endLine":1995,"endColumn":21},{"ruleId":"737","severity":1,"message":"803","line":2015,"column":8,"nodeType":"739","endLine":2015,"endColumn":32,"suggestions":"804"},{"ruleId":"797","severity":1,"message":"798","line":2029,"column":27,"nodeType":"799","messageId":"800","endLine":2029,"endColumn":29},{"ruleId":"797","severity":1,"message":"798","line":2184,"column":61,"nodeType":"799","messageId":"800","endLine":2184,"endColumn":63},{"ruleId":"635","severity":1,"message":"805","line":2308,"column":7,"nodeType":"637","messageId":"638","endLine":2308,"endColumn":22},{"ruleId":"797","severity":1,"message":"801","line":2327,"column":46,"nodeType":"799","messageId":"800","endLine":2327,"endColumn":48},{"ruleId":"635","severity":1,"message":"806","line":2420,"column":21,"nodeType":"637","messageId":"638","endLine":2420,"endColumn":31},{"ruleId":"635","severity":1,"message":"782","line":2421,"column":28,"nodeType":"637","messageId":"638","endLine":2421,"endColumn":44},{"ruleId":"635","severity":1,"message":"807","line":2422,"column":13,"nodeType":"637","messageId":"638","endLine":2422,"endColumn":28},{"ruleId":"635","severity":1,"message":"808","line":2422,"column":30,"nodeType":"637","messageId":"638","endLine":2422,"endColumn":43},{"ruleId":"635","severity":1,"message":"783","line":2423,"column":30,"nodeType":"637","messageId":"638","endLine":2423,"endColumn":49},{"ruleId":"635","severity":1,"message":"785","line":2424,"column":34,"nodeType":"637","messageId":"638","endLine":2424,"endColumn":57},{"ruleId":"635","severity":1,"message":"766","line":2426,"column":18,"nodeType":"637","messageId":"638","endLine":2426,"endColumn":25},{"ruleId":"635","severity":1,"message":"763","line":2577,"column":20,"nodeType":"637","messageId":"638","endLine":2577,"endColumn":29},{"ruleId":"635","severity":1,"message":"765","line":2579,"column":12,"nodeType":"637","messageId":"638","endLine":2579,"endColumn":16},{"ruleId":"635","severity":1,"message":"787","line":2580,"column":11,"nodeType":"637","messageId":"638","endLine":2580,"endColumn":22},{"ruleId":"635","severity":1,"message":"809","line":2584,"column":31,"nodeType":"637","messageId":"638","endLine":2584,"endColumn":49},{"ruleId":"635","severity":1,"message":"745","line":2588,"column":13,"nodeType":"637","messageId":"638","endLine":2588,"endColumn":23},{"ruleId":"635","severity":1,"message":"772","line":2597,"column":12,"nodeType":"637","messageId":"638","endLine":2597,"endColumn":26},{"ruleId":"635","severity":1,"message":"810","line":2634,"column":9,"nodeType":"637","messageId":"638","endLine":2634,"endColumn":18},{"ruleId":"635","severity":1,"message":"811","line":2700,"column":13,"nodeType":"637","messageId":"638","endLine":2700,"endColumn":21},{"ruleId":"635","severity":1,"message":"812","line":2701,"column":13,"nodeType":"637","messageId":"638","endLine":2701,"endColumn":20},{"ruleId":"635","severity":1,"message":"812","line":2710,"column":13,"nodeType":"637","messageId":"638","endLine":2710,"endColumn":20},{"ruleId":"635","severity":1,"message":"813","line":2717,"column":11,"nodeType":"637","messageId":"638","endLine":2717,"endColumn":27},{"ruleId":"635","severity":1,"message":"814","line":2723,"column":11,"nodeType":"637","messageId":"638","endLine":2723,"endColumn":38},{"ruleId":"657","severity":1,"message":"658","line":2748,"column":29,"nodeType":"659","messageId":"660","endLine":2748,"endColumn":40,"fix":"815"},{"ruleId":"635","severity":1,"message":"752","line":2760,"column":31,"nodeType":"637","messageId":"638","endLine":2760,"endColumn":35},{"ruleId":"635","severity":1,"message":"748","line":2784,"column":29,"nodeType":"637","messageId":"638","endLine":2784,"endColumn":40},{"ruleId":"635","severity":1,"message":"753","line":2786,"column":29,"nodeType":"637","messageId":"638","endLine":2786,"endColumn":39},{"ruleId":"635","severity":1,"message":"816","line":2828,"column":17,"nodeType":"637","messageId":"638","endLine":2828,"endColumn":30},{"ruleId":"737","severity":1,"message":"817","line":2884,"column":8,"nodeType":"739","endLine":2884,"endColumn":16,"suggestions":"818"},{"ruleId":"635","severity":1,"message":"819","line":3169,"column":21,"nodeType":"637","messageId":"638","endLine":3169,"endColumn":31},{"ruleId":"635","severity":1,"message":"820","line":3182,"column":26,"nodeType":"637","messageId":"638","endLine":3182,"endColumn":41},{"ruleId":"657","severity":1,"message":"658","line":3225,"column":40,"nodeType":"659","messageId":"660","endLine":3225,"endColumn":51,"fix":"821"},{"ruleId":"635","severity":1,"message":"822","line":3226,"column":21,"nodeType":"637","messageId":"638","endLine":3226,"endColumn":27},{"ruleId":"737","severity":1,"message":"823","line":3328,"column":8,"nodeType":"739","endLine":3328,"endColumn":16,"suggestions":"824"},{"ruleId":"797","severity":1,"message":"801","line":3341,"column":23,"nodeType":"799","messageId":"800","endLine":3341,"endColumn":25},{"ruleId":"635","severity":1,"message":"641","line":2,"column":10,"nodeType":"637","messageId":"638","endLine":2,"endColumn":16},{"ruleId":"635","severity":1,"message":"706","line":2,"column":18,"nodeType":"637","messageId":"638","endLine":2,"endColumn":23},{"ruleId":"635","severity":1,"message":"825","line":3,"column":16,"nodeType":"637","messageId":"638","endLine":3,"endColumn":27},{"ruleId":"635","severity":1,"message":"826","line":3,"column":29,"nodeType":"637","messageId":"638","endLine":3,"endColumn":36},{"ruleId":"635","severity":1,"message":"827","line":5,"column":10,"nodeType":"637","messageId":"638","endLine":5,"endColumn":23},{"ruleId":"635","severity":1,"message":"828","line":19,"column":10,"nodeType":"637","messageId":"638","endLine":19,"endColumn":29},{"ruleId":"635","severity":1,"message":"829","line":19,"column":31,"nodeType":"637","messageId":"638","endLine":19,"endColumn":46},{"ruleId":"635","severity":1,"message":"830","line":19,"column":61,"nodeType":"637","messageId":"638","endLine":19,"endColumn":68},{"ruleId":"635","severity":1,"message":"705","line":1,"column":23,"nodeType":"637","messageId":"638","endLine":1,"endColumn":33},{"ruleId":"635","severity":1,"message":"831","line":17,"column":7,"nodeType":"637","messageId":"638","endLine":17,"endColumn":20},{"ruleId":"635","severity":1,"message":"696","line":1,"column":51,"nodeType":"637","messageId":"638","endLine":1,"endColumn":55},{"ruleId":"635","severity":1,"message":"832","line":3,"column":10,"nodeType":"637","messageId":"638","endLine":3,"endColumn":16},{"ruleId":"635","severity":1,"message":"663","line":7,"column":9,"nodeType":"637","messageId":"638","endLine":7,"endColumn":24},{"ruleId":"635","severity":1,"message":"651","line":8,"column":33,"nodeType":"637","messageId":"638","endLine":8,"endColumn":46},{"ruleId":"635","severity":1,"message":"704","line":8,"column":61,"nodeType":"637","messageId":"638","endLine":8,"endColumn":83},{"ruleId":"635","severity":1,"message":"833","line":9,"column":10,"nodeType":"637","messageId":"638","endLine":9,"endColumn":14},{"ruleId":"635","severity":1,"message":"834","line":9,"column":16,"nodeType":"637","messageId":"638","endLine":9,"endColumn":19},{"ruleId":"635","severity":1,"message":"835","line":16,"column":10,"nodeType":"637","messageId":"638","endLine":16,"endColumn":27},{"ruleId":"635","severity":1,"message":"703","line":18,"column":23,"nodeType":"637","messageId":"638","endLine":18,"endColumn":25},{"ruleId":"635","severity":1,"message":"836","line":20,"column":5,"nodeType":"637","messageId":"638","endLine":20,"endColumn":14},{"ruleId":"635","severity":1,"message":"837","line":21,"column":5,"nodeType":"637","messageId":"638","endLine":21,"endColumn":26},{"ruleId":"635","severity":1,"message":"838","line":23,"column":5,"nodeType":"637","messageId":"638","endLine":23,"endColumn":32},{"ruleId":"635","severity":1,"message":"839","line":24,"column":5,"nodeType":"637","messageId":"638","endLine":24,"endColumn":26},{"ruleId":"635","severity":1,"message":"840","line":25,"column":5,"nodeType":"637","messageId":"638","endLine":25,"endColumn":17},{"ruleId":"635","severity":1,"message":"841","line":26,"column":5,"nodeType":"637","messageId":"638","endLine":26,"endColumn":21},{"ruleId":"635","severity":1,"message":"842","line":27,"column":5,"nodeType":"637","messageId":"638","endLine":27,"endColumn":23},{"ruleId":"635","severity":1,"message":"843","line":28,"column":5,"nodeType":"637","messageId":"638","endLine":28,"endColumn":13},{"ruleId":"635","severity":1,"message":"844","line":29,"column":5,"nodeType":"637","messageId":"638","endLine":29,"endColumn":32},{"ruleId":"635","severity":1,"message":"845","line":30,"column":5,"nodeType":"637","messageId":"638","endLine":30,"endColumn":33},{"ruleId":"635","severity":1,"message":"846","line":31,"column":5,"nodeType":"637","messageId":"638","endLine":31,"endColumn":26},{"ruleId":"635","severity":1,"message":"847","line":32,"column":5,"nodeType":"637","messageId":"638","endLine":32,"endColumn":26},{"ruleId":"635","severity":1,"message":"848","line":34,"column":10,"nodeType":"637","messageId":"638","endLine":34,"endColumn":16},{"ruleId":"635","severity":1,"message":"825","line":34,"column":31,"nodeType":"637","messageId":"638","endLine":34,"endColumn":42},{"ruleId":"635","severity":1,"message":"705","line":35,"column":10,"nodeType":"637","messageId":"638","endLine":35,"endColumn":20},{"ruleId":"635","severity":1,"message":"706","line":35,"column":30,"nodeType":"637","messageId":"638","endLine":35,"endColumn":35},{"ruleId":"635","severity":1,"message":"702","line":39,"column":10,"nodeType":"637","messageId":"638","endLine":39,"endColumn":17},{"ruleId":"635","severity":1,"message":"849","line":44,"column":5,"nodeType":"637","messageId":"638","endLine":44,"endColumn":15},{"ruleId":"635","severity":1,"message":"850","line":45,"column":5,"nodeType":"637","messageId":"638","endLine":45,"endColumn":10},{"ruleId":"635","severity":1,"message":"851","line":47,"column":5,"nodeType":"637","messageId":"638","endLine":47,"endColumn":15},{"ruleId":"635","severity":1,"message":"852","line":48,"column":5,"nodeType":"637","messageId":"638","endLine":48,"endColumn":11},{"ruleId":"635","severity":1,"message":"853","line":49,"column":5,"nodeType":"637","messageId":"638","endLine":49,"endColumn":12},{"ruleId":"635","severity":1,"message":"854","line":53,"column":5,"nodeType":"637","messageId":"638","endLine":53,"endColumn":14},{"ruleId":"635","severity":1,"message":"855","line":54,"column":5,"nodeType":"637","messageId":"638","endLine":54,"endColumn":18},{"ruleId":"635","severity":1,"message":"856","line":55,"column":5,"nodeType":"637","messageId":"638","endLine":55,"endColumn":21},{"ruleId":"635","severity":1,"message":"857","line":64,"column":5,"nodeType":"637","messageId":"638","endLine":64,"endColumn":14},{"ruleId":"635","severity":1,"message":"858","line":68,"column":5,"nodeType":"637","messageId":"638","endLine":68,"endColumn":10},{"ruleId":"635","severity":1,"message":"664","line":77,"column":5,"nodeType":"637","messageId":"638","endLine":77,"endColumn":13},{"ruleId":"635","severity":1,"message":"859","line":78,"column":5,"nodeType":"637","messageId":"638","endLine":78,"endColumn":19},{"ruleId":"635","severity":1,"message":"860","line":80,"column":5,"nodeType":"637","messageId":"638","endLine":80,"endColumn":18},{"ruleId":"635","severity":1,"message":"861","line":85,"column":5,"nodeType":"637","messageId":"638","endLine":85,"endColumn":15},{"ruleId":"635","severity":1,"message":"862","line":86,"column":5,"nodeType":"637","messageId":"638","endLine":86,"endColumn":16},{"ruleId":"635","severity":1,"message":"863","line":92,"column":8,"nodeType":"637","messageId":"638","endLine":92,"endColumn":18},{"ruleId":"635","severity":1,"message":"864","line":101,"column":8,"nodeType":"637","messageId":"638","endLine":101,"endColumn":31},{"ruleId":"635","severity":1,"message":"865","line":102,"column":8,"nodeType":"637","messageId":"638","endLine":102,"endColumn":28},{"ruleId":"635","severity":1,"message":"866","line":104,"column":8,"nodeType":"637","messageId":"638","endLine":104,"endColumn":30},{"ruleId":"635","severity":1,"message":"867","line":105,"column":8,"nodeType":"637","messageId":"638","endLine":105,"endColumn":31},{"ruleId":"635","severity":1,"message":"868","line":114,"column":8,"nodeType":"637","messageId":"638","endLine":114,"endColumn":17},{"ruleId":"635","severity":1,"message":"869","line":116,"column":8,"nodeType":"637","messageId":"638","endLine":116,"endColumn":19},{"ruleId":"635","severity":1,"message":"721","line":118,"column":8,"nodeType":"637","messageId":"638","endLine":118,"endColumn":16},{"ruleId":"635","severity":1,"message":"870","line":127,"column":8,"nodeType":"637","messageId":"638","endLine":127,"endColumn":23},{"ruleId":"635","severity":1,"message":"871","line":128,"column":8,"nodeType":"637","messageId":"638","endLine":128,"endColumn":40},{"ruleId":"635","severity":1,"message":"872","line":134,"column":8,"nodeType":"637","messageId":"638","endLine":134,"endColumn":25},{"ruleId":"635","severity":1,"message":"873","line":135,"column":8,"nodeType":"637","messageId":"638","endLine":135,"endColumn":18},{"ruleId":"635","severity":1,"message":"874","line":137,"column":10,"nodeType":"637","messageId":"638","endLine":137,"endColumn":22},{"ruleId":"635","severity":1,"message":"875","line":158,"column":10,"nodeType":"637","messageId":"638","endLine":158,"endColumn":22},{"ruleId":"635","severity":1,"message":"707","line":164,"column":5,"nodeType":"637","messageId":"638","endLine":164,"endColumn":21},{"ruleId":"635","severity":1,"message":"708","line":165,"column":5,"nodeType":"637","messageId":"638","endLine":165,"endColumn":21},{"ruleId":"635","severity":1,"message":"709","line":173,"column":5,"nodeType":"637","messageId":"638","endLine":173,"endColumn":16},{"ruleId":"635","severity":1,"message":"710","line":174,"column":5,"nodeType":"637","messageId":"638","endLine":174,"endColumn":35},{"ruleId":"635","severity":1,"message":"711","line":175,"column":5,"nodeType":"637","messageId":"638","endLine":175,"endColumn":18},{"ruleId":"635","severity":1,"message":"876","line":178,"column":10,"nodeType":"637","messageId":"638","endLine":178,"endColumn":21},{"ruleId":"635","severity":1,"message":"877","line":179,"column":10,"nodeType":"637","messageId":"638","endLine":179,"endColumn":23},{"ruleId":"635","severity":1,"message":"878","line":193,"column":10,"nodeType":"637","messageId":"638","endLine":193,"endColumn":45},{"ruleId":"635","severity":1,"message":"719","line":194,"column":10,"nodeType":"637","messageId":"638","endLine":194,"endColumn":37},{"ruleId":"635","severity":1,"message":"720","line":194,"column":39,"nodeType":"637","messageId":"638","endLine":194,"endColumn":44},{"ruleId":"635","severity":1,"message":"879","line":197,"column":26,"nodeType":"637","messageId":"638","endLine":197,"endColumn":34},{"ruleId":"635","severity":1,"message":"725","line":198,"column":10,"nodeType":"637","messageId":"638","endLine":198,"endColumn":30},{"ruleId":"635","severity":1,"message":"880","line":198,"column":32,"nodeType":"637","messageId":"638","endLine":198,"endColumn":43},{"ruleId":"635","severity":1,"message":"881","line":198,"column":45,"nodeType":"637","messageId":"638","endLine":198,"endColumn":73},{"ruleId":"635","severity":1,"message":"882","line":199,"column":10,"nodeType":"637","messageId":"638","endLine":199,"endColumn":25},{"ruleId":"635","severity":1,"message":"883","line":215,"column":7,"nodeType":"637","messageId":"638","endLine":215,"endColumn":13},{"ruleId":"635","severity":1,"message":"884","line":232,"column":7,"nodeType":"637","messageId":"638","endLine":232,"endColumn":24},{"ruleId":"635","severity":1,"message":"885","line":242,"column":7,"nodeType":"637","messageId":"638","endLine":242,"endColumn":22},{"ruleId":"635","severity":1,"message":"729","line":273,"column":9,"nodeType":"637","messageId":"638","endLine":273,"endColumn":19},{"ruleId":"635","severity":1,"message":"730","line":284,"column":10,"nodeType":"637","messageId":"638","endLine":284,"endColumn":18},{"ruleId":"635","severity":1,"message":"886","line":289,"column":9,"nodeType":"637","messageId":"638","endLine":289,"endColumn":22},{"ruleId":"635","severity":1,"message":"887","line":310,"column":21,"nodeType":"637","messageId":"638","endLine":310,"endColumn":31},{"ruleId":"635","severity":1,"message":"888","line":324,"column":11,"nodeType":"637","messageId":"638","endLine":324,"endColumn":23},{"ruleId":"635","severity":1,"message":"889","line":334,"column":11,"nodeType":"637","messageId":"638","endLine":334,"endColumn":35},{"ruleId":"635","severity":1,"message":"890","line":347,"column":11,"nodeType":"637","messageId":"638","endLine":347,"endColumn":26},{"ruleId":"635","severity":1,"message":"891","line":463,"column":11,"nodeType":"637","messageId":"638","endLine":463,"endColumn":30},{"ruleId":"635","severity":1,"message":"892","line":615,"column":13,"nodeType":"637","messageId":"638","endLine":615,"endColumn":27},{"ruleId":"756","severity":1,"message":"757","line":628,"column":22,"nodeType":"637","messageId":"758","endLine":628,"endColumn":27},{"ruleId":"635","severity":1,"message":"893","line":640,"column":33,"nodeType":"637","messageId":"638","endLine":640,"endColumn":48},{"ruleId":"635","severity":1,"message":"894","line":641,"column":33,"nodeType":"637","messageId":"638","endLine":641,"endColumn":47},{"ruleId":"635","severity":1,"message":"792","line":647,"column":33,"nodeType":"637","messageId":"638","endLine":647,"endColumn":44},{"ruleId":"793","severity":1,"message":"794","line":650,"column":29,"nodeType":"795","messageId":"796","endLine":851,"endColumn":30},{"ruleId":"635","severity":1,"message":"761","line":659,"column":45,"nodeType":"637","messageId":"638","endLine":659,"endColumn":49},{"ruleId":"793","severity":1,"message":"794","line":709,"column":53,"nodeType":"795","messageId":"796","endLine":784,"endColumn":54},{"ruleId":"793","severity":1,"message":"794","line":721,"column":61,"nodeType":"795","messageId":"796","endLine":782,"endColumn":62},{"ruleId":"756","severity":1,"message":"762","line":791,"column":58,"nodeType":"637","messageId":"758","endLine":791,"endColumn":59},{"ruleId":"635","severity":1,"message":"895","line":980,"column":11,"nodeType":"637","messageId":"638","endLine":980,"endColumn":23},{"ruleId":"737","severity":1,"message":"896","line":1305,"column":8,"nodeType":"739","endLine":1305,"endColumn":32,"suggestions":"897"},{"ruleId":"635","severity":1,"message":"822","line":1514,"column":24,"nodeType":"637","messageId":"638","endLine":1514,"endColumn":30},{"ruleId":"635","severity":1,"message":"898","line":1517,"column":11,"nodeType":"637","messageId":"638","endLine":1517,"endColumn":25},{"ruleId":"635","severity":1,"message":"899","line":1529,"column":11,"nodeType":"637","messageId":"638","endLine":1529,"endColumn":18},{"ruleId":"635","severity":1,"message":"900","line":1755,"column":11,"nodeType":"637","messageId":"638","endLine":1755,"endColumn":24},{"ruleId":"635","severity":1,"message":"822","line":1757,"column":24,"nodeType":"637","messageId":"638","endLine":1757,"endColumn":30},{"ruleId":"635","severity":1,"message":"901","line":1759,"column":11,"nodeType":"637","messageId":"638","endLine":1759,"endColumn":20},{"ruleId":"635","severity":1,"message":"899","line":1774,"column":11,"nodeType":"637","messageId":"638","endLine":1774,"endColumn":18},{"ruleId":"737","severity":1,"message":"902","line":1857,"column":7,"nodeType":"739","endLine":1857,"endColumn":9,"suggestions":"903"},{"ruleId":"635","severity":1,"message":"822","line":1966,"column":24,"nodeType":"637","messageId":"638","endLine":1966,"endColumn":30},{"ruleId":"635","severity":1,"message":"901","line":1967,"column":11,"nodeType":"637","messageId":"638","endLine":1967,"endColumn":20},{"ruleId":"635","severity":1,"message":"899","line":1982,"column":11,"nodeType":"637","messageId":"638","endLine":1982,"endColumn":18},{"ruleId":"635","severity":1,"message":"768","line":2124,"column":12,"nodeType":"637","messageId":"638","endLine":2124,"endColumn":24},{"ruleId":"635","severity":1,"message":"769","line":2124,"column":26,"nodeType":"637","messageId":"638","endLine":2124,"endColumn":41},{"ruleId":"635","severity":1,"message":"904","line":2127,"column":12,"nodeType":"637","messageId":"638","endLine":2127,"endColumn":19},{"ruleId":"635","severity":1,"message":"772","line":2128,"column":12,"nodeType":"637","messageId":"638","endLine":2128,"endColumn":26},{"ruleId":"635","severity":1,"message":"812","line":2207,"column":13,"nodeType":"637","messageId":"638","endLine":2207,"endColumn":20},{"ruleId":"635","severity":1,"message":"812","line":2216,"column":13,"nodeType":"637","messageId":"638","endLine":2216,"endColumn":20},{"ruleId":"737","severity":1,"message":"905","line":2227,"column":7,"nodeType":"739","endLine":2227,"endColumn":9,"suggestions":"906"},{"ruleId":"635","severity":1,"message":"768","line":2281,"column":12,"nodeType":"637","messageId":"638","endLine":2281,"endColumn":24},{"ruleId":"635","severity":1,"message":"769","line":2281,"column":26,"nodeType":"637","messageId":"638","endLine":2281,"endColumn":41},{"ruleId":"635","severity":1,"message":"904","line":2283,"column":12,"nodeType":"637","messageId":"638","endLine":2283,"endColumn":19},{"ruleId":"635","severity":1,"message":"772","line":2285,"column":12,"nodeType":"637","messageId":"638","endLine":2285,"endColumn":26},{"ruleId":"635","severity":1,"message":"907","line":2291,"column":11,"nodeType":"637","messageId":"638","endLine":2291,"endColumn":21},{"ruleId":"635","severity":1,"message":"812","line":2364,"column":13,"nodeType":"637","messageId":"638","endLine":2364,"endColumn":20},{"ruleId":"635","severity":1,"message":"812","line":2373,"column":13,"nodeType":"637","messageId":"638","endLine":2373,"endColumn":20},{"ruleId":"737","severity":1,"message":"908","line":2384,"column":7,"nodeType":"739","endLine":2384,"endColumn":9,"suggestions":"909"},{"ruleId":"635","severity":1,"message":"910","line":2438,"column":11,"nodeType":"637","messageId":"638","endLine":2438,"endColumn":30},{"ruleId":"635","severity":1,"message":"911","line":2441,"column":18,"nodeType":"637","messageId":"638","endLine":2441,"endColumn":25},{"ruleId":"635","severity":1,"message":"912","line":2450,"column":36,"nodeType":"637","messageId":"638","endLine":2450,"endColumn":59},{"ruleId":"635","severity":1,"message":"913","line":2451,"column":12,"nodeType":"637","messageId":"638","endLine":2451,"endColumn":32},{"ruleId":"635","severity":1,"message":"914","line":2451,"column":34,"nodeType":"637","messageId":"638","endLine":2451,"endColumn":55},{"ruleId":"635","severity":1,"message":"915","line":2457,"column":34,"nodeType":"637","messageId":"638","endLine":2457,"endColumn":57},{"ruleId":"635","severity":1,"message":"772","line":2472,"column":12,"nodeType":"637","messageId":"638","endLine":2472,"endColumn":26},{"ruleId":"635","severity":1,"message":"812","line":2502,"column":13,"nodeType":"637","messageId":"638","endLine":2502,"endColumn":20},{"ruleId":"635","severity":1,"message":"812","line":2510,"column":13,"nodeType":"637","messageId":"638","endLine":2510,"endColumn":20},{"ruleId":"635","severity":1,"message":"899","line":2517,"column":11,"nodeType":"637","messageId":"638","endLine":2517,"endColumn":18},{"ruleId":"635","severity":1,"message":"901","line":2525,"column":11,"nodeType":"637","messageId":"638","endLine":2525,"endColumn":20},{"ruleId":"635","severity":1,"message":"916","line":2535,"column":11,"nodeType":"637","messageId":"638","endLine":2535,"endColumn":32},{"ruleId":"635","severity":1,"message":"917","line":2542,"column":11,"nodeType":"637","messageId":"638","endLine":2542,"endColumn":25},{"ruleId":"737","severity":1,"message":"918","line":2716,"column":8,"nodeType":"739","endLine":2716,"endColumn":19,"suggestions":"919"},{"ruleId":"920","severity":1,"message":"921","line":2740,"column":47,"nodeType":"922","messageId":"923","endLine":2740,"endColumn":49},{"ruleId":"737","severity":1,"message":"924","line":2913,"column":8,"nodeType":"739","endLine":2913,"endColumn":42,"suggestions":"925"},{"ruleId":"737","severity":1,"message":"926","line":2927,"column":8,"nodeType":"739","endLine":2927,"endColumn":14,"suggestions":"927"},{"ruleId":"797","severity":1,"message":"798","line":3340,"column":87,"nodeType":"799","messageId":"800","endLine":3340,"endColumn":89},{"ruleId":"635","severity":1,"message":"732","line":3704,"column":10,"nodeType":"637","messageId":"638","endLine":3704,"endColumn":22},{"ruleId":"635","severity":1,"message":"733","line":3715,"column":10,"nodeType":"637","messageId":"638","endLine":3715,"endColumn":23},{"ruleId":"635","severity":1,"message":"734","line":3725,"column":6,"nodeType":"637","messageId":"638","endLine":3725,"endColumn":11},{"ruleId":"635","severity":1,"message":"928","line":3731,"column":12,"nodeType":"637","messageId":"638","endLine":3731,"endColumn":22},{"ruleId":"635","severity":1,"message":"929","line":3731,"column":24,"nodeType":"637","messageId":"638","endLine":3731,"endColumn":37},{"ruleId":"635","severity":1,"message":"904","line":3733,"column":12,"nodeType":"637","messageId":"638","endLine":3733,"endColumn":19},{"ruleId":"635","severity":1,"message":"806","line":3733,"column":21,"nodeType":"637","messageId":"638","endLine":3733,"endColumn":31},{"ruleId":"635","severity":1,"message":"820","line":3739,"column":26,"nodeType":"637","messageId":"638","endLine":3739,"endColumn":41},{"ruleId":"635","severity":1,"message":"930","line":3744,"column":24,"nodeType":"637","messageId":"638","endLine":3744,"endColumn":39},{"ruleId":"635","severity":1,"message":"931","line":3749,"column":14,"nodeType":"637","messageId":"638","endLine":3749,"endColumn":28},{"ruleId":"635","severity":1,"message":"932","line":3763,"column":11,"nodeType":"637","messageId":"638","endLine":3763,"endColumn":33},{"ruleId":"635","severity":1,"message":"933","line":3773,"column":26,"nodeType":"637","messageId":"638","endLine":3773,"endColumn":37},{"ruleId":"635","severity":1,"message":"745","line":3779,"column":17,"nodeType":"637","messageId":"638","endLine":3779,"endColumn":27},{"ruleId":"635","severity":1,"message":"735","line":3781,"column":15,"nodeType":"637","messageId":"638","endLine":3781,"endColumn":32},{"ruleId":"635","severity":1,"message":"752","line":3789,"column":27,"nodeType":"637","messageId":"638","endLine":3789,"endColumn":31},{"ruleId":"737","severity":1,"message":"934","line":3827,"column":12,"nodeType":"739","endLine":3827,"endColumn":22,"suggestions":"935"},{"ruleId":"737","severity":1,"message":"936","line":3882,"column":8,"nodeType":"739","endLine":3882,"endColumn":23,"suggestions":"937"},{"ruleId":"635","severity":1,"message":"938","line":1,"column":32,"nodeType":"637","messageId":"638","endLine":1,"endColumn":41},{"ruleId":"635","severity":1,"message":"939","line":9,"column":30,"nodeType":"637","messageId":"638","endLine":9,"endColumn":48},{"ruleId":"635","severity":1,"message":"886","line":23,"column":7,"nodeType":"637","messageId":"638","endLine":23,"endColumn":20},{"ruleId":"635","severity":1,"message":"940","line":131,"column":11,"nodeType":"637","messageId":"638","endLine":131,"endColumn":28},{"ruleId":"635","severity":1,"message":"941","line":133,"column":11,"nodeType":"637","messageId":"638","endLine":133,"endColumn":18},{"ruleId":"635","severity":1,"message":"939","line":8,"column":30,"nodeType":"637","messageId":"638","endLine":8,"endColumn":48},{"ruleId":"635","severity":1,"message":"651","line":4,"column":3,"nodeType":"637","messageId":"638","endLine":4,"endColumn":16},{"ruleId":"635","severity":1,"message":"942","line":27,"column":8,"nodeType":"637","messageId":"638","endLine":27,"endColumn":10},{"ruleId":"635","severity":1,"message":"943","line":93,"column":9,"nodeType":"637","messageId":"638","endLine":93,"endColumn":13},{"ruleId":"635","severity":1,"message":"944","line":99,"column":9,"nodeType":"637","messageId":"638","endLine":99,"endColumn":19},{"ruleId":"797","severity":1,"message":"798","line":453,"column":27,"nodeType":"799","messageId":"800","endLine":453,"endColumn":29},{"ruleId":"635","severity":1,"message":"939","line":9,"column":30,"nodeType":"637","messageId":"638","endLine":9,"endColumn":48},{"ruleId":"635","severity":1,"message":"945","line":14,"column":5,"nodeType":"637","messageId":"638","endLine":14,"endColumn":30},{"ruleId":"635","severity":1,"message":"941","line":56,"column":11,"nodeType":"637","messageId":"638","endLine":56,"endColumn":18},{"ruleId":"635","severity":1,"message":"942","line":2,"column":8,"nodeType":"637","messageId":"638","endLine":2,"endColumn":10},{"ruleId":"635","severity":1,"message":"946","line":3,"column":8,"nodeType":"637","messageId":"638","endLine":3,"endColumn":16},{"ruleId":"797","severity":1,"message":"801","line":20,"column":23,"nodeType":"799","messageId":"800","endLine":20,"endColumn":25},{"ruleId":"635","severity":1,"message":"651","line":1,"column":21,"nodeType":"637","messageId":"638","endLine":1,"endColumn":34},{"ruleId":"635","severity":1,"message":"652","line":1,"column":60,"nodeType":"637","messageId":"638","endLine":1,"endColumn":71},{"ruleId":"635","severity":1,"message":"947","line":2,"column":10,"nodeType":"637","messageId":"638","endLine":2,"endColumn":12},{"ruleId":"635","severity":1,"message":"948","line":2,"column":14,"nodeType":"637","messageId":"638","endLine":2,"endColumn":18},{"ruleId":"635","severity":1,"message":"836","line":5,"column":3,"nodeType":"637","messageId":"638","endLine":5,"endColumn":12},{"ruleId":"635","severity":1,"message":"837","line":6,"column":3,"nodeType":"637","messageId":"638","endLine":6,"endColumn":24},{"ruleId":"635","severity":1,"message":"949","line":8,"column":3,"nodeType":"637","messageId":"638","endLine":8,"endColumn":30},{"ruleId":"635","severity":1,"message":"838","line":9,"column":3,"nodeType":"637","messageId":"638","endLine":9,"endColumn":30},{"ruleId":"635","severity":1,"message":"839","line":10,"column":3,"nodeType":"637","messageId":"638","endLine":10,"endColumn":24},{"ruleId":"635","severity":1,"message":"840","line":11,"column":3,"nodeType":"637","messageId":"638","endLine":11,"endColumn":15},{"ruleId":"635","severity":1,"message":"841","line":12,"column":3,"nodeType":"637","messageId":"638","endLine":12,"endColumn":19},{"ruleId":"635","severity":1,"message":"845","line":16,"column":3,"nodeType":"637","messageId":"638","endLine":16,"endColumn":31},{"ruleId":"635","severity":1,"message":"950","line":85,"column":9,"nodeType":"637","messageId":"638","endLine":85,"endColumn":12},{"ruleId":"635","severity":1,"message":"651","line":7,"column":21,"nodeType":"637","messageId":"638","endLine":7,"endColumn":34},{"ruleId":"635","severity":1,"message":"939","line":9,"column":30,"nodeType":"637","messageId":"638","endLine":9,"endColumn":48},{"ruleId":"635","severity":1,"message":"951","line":15,"column":5,"nodeType":"637","messageId":"638","endLine":15,"endColumn":19},{"ruleId":"635","severity":1,"message":"939","line":8,"column":30,"nodeType":"637","messageId":"638","endLine":8,"endColumn":48},{"ruleId":"635","severity":1,"message":"939","line":8,"column":30,"nodeType":"637","messageId":"638","endLine":8,"endColumn":48},{"ruleId":"635","severity":1,"message":"939","line":9,"column":30,"nodeType":"637","messageId":"638","endLine":9,"endColumn":48},{"ruleId":"635","severity":1,"message":"945","line":14,"column":5,"nodeType":"637","messageId":"638","endLine":14,"endColumn":30},{"ruleId":"635","severity":1,"message":"951","line":15,"column":5,"nodeType":"637","messageId":"638","endLine":15,"endColumn":19},{"ruleId":"635","severity":1,"message":"719","line":20,"column":10,"nodeType":"637","messageId":"638","endLine":20,"endColumn":37},{"ruleId":"635","severity":1,"message":"651","line":7,"column":21,"nodeType":"637","messageId":"638","endLine":7,"endColumn":34},{"ruleId":"635","severity":1,"message":"939","line":9,"column":30,"nodeType":"637","messageId":"638","endLine":9,"endColumn":48},{"ruleId":"635","severity":1,"message":"951","line":15,"column":5,"nodeType":"637","messageId":"638","endLine":15,"endColumn":19},{"ruleId":"635","severity":1,"message":"939","line":9,"column":30,"nodeType":"637","messageId":"638","endLine":9,"endColumn":48},{"ruleId":"635","severity":1,"message":"719","line":21,"column":10,"nodeType":"637","messageId":"638","endLine":21,"endColumn":37},{"ruleId":"635","severity":1,"message":"886","line":24,"column":7,"nodeType":"637","messageId":"638","endLine":24,"endColumn":20},{"ruleId":"635","severity":1,"message":"952","line":5,"column":18,"nodeType":"637","messageId":"638","endLine":5,"endColumn":32},{"ruleId":"635","severity":1,"message":"859","line":6,"column":20,"nodeType":"637","messageId":"638","endLine":6,"endColumn":34},{"ruleId":"635","severity":1,"message":"952","line":18,"column":5,"nodeType":"637","messageId":"638","endLine":18,"endColumn":19},{"ruleId":"635","severity":1,"message":"953","line":27,"column":5,"nodeType":"637","messageId":"638","endLine":27,"endColumn":22},{"ruleId":"635","severity":1,"message":"954","line":29,"column":5,"nodeType":"637","messageId":"638","endLine":29,"endColumn":22},{"ruleId":"635","severity":1,"message":"955","line":38,"column":5,"nodeType":"637","messageId":"638","endLine":38,"endColumn":26},{"ruleId":"635","severity":1,"message":"956","line":39,"column":5,"nodeType":"637","messageId":"638","endLine":39,"endColumn":15},{"ruleId":"635","severity":1,"message":"957","line":40,"column":5,"nodeType":"637","messageId":"638","endLine":40,"endColumn":19},{"ruleId":"635","severity":1,"message":"958","line":41,"column":5,"nodeType":"637","messageId":"638","endLine":41,"endColumn":13},{"ruleId":"635","severity":1,"message":"959","line":42,"column":5,"nodeType":"637","messageId":"638","endLine":42,"endColumn":17},{"ruleId":"635","severity":1,"message":"960","line":43,"column":5,"nodeType":"637","messageId":"638","endLine":43,"endColumn":20},{"ruleId":"635","severity":1,"message":"961","line":44,"column":5,"nodeType":"637","messageId":"638","endLine":44,"endColumn":15},{"ruleId":"635","severity":1,"message":"962","line":45,"column":5,"nodeType":"637","messageId":"638","endLine":45,"endColumn":11},{"ruleId":"635","severity":1,"message":"963","line":46,"column":5,"nodeType":"637","messageId":"638","endLine":46,"endColumn":18},{"ruleId":"635","severity":1,"message":"964","line":47,"column":5,"nodeType":"637","messageId":"638","endLine":47,"endColumn":15},{"ruleId":"635","severity":1,"message":"965","line":48,"column":5,"nodeType":"637","messageId":"638","endLine":48,"endColumn":15},{"ruleId":"635","severity":1,"message":"966","line":50,"column":5,"nodeType":"637","messageId":"638","endLine":50,"endColumn":15},{"ruleId":"635","severity":1,"message":"967","line":53,"column":5,"nodeType":"637","messageId":"638","endLine":53,"endColumn":11},{"ruleId":"635","severity":1,"message":"968","line":54,"column":5,"nodeType":"637","messageId":"638","endLine":54,"endColumn":14},{"ruleId":"635","severity":1,"message":"969","line":56,"column":5,"nodeType":"637","messageId":"638","endLine":56,"endColumn":18},{"ruleId":"635","severity":1,"message":"675","line":73,"column":12,"nodeType":"637","messageId":"638","endLine":73,"endColumn":25},{"ruleId":"635","severity":1,"message":"970","line":73,"column":27,"nodeType":"637","messageId":"638","endLine":73,"endColumn":43},{"ruleId":"635","severity":1,"message":"971","line":21,"column":7,"nodeType":"637","messageId":"638","endLine":21,"endColumn":46},{"ruleId":"635","severity":1,"message":"972","line":96,"column":9,"nodeType":"637","messageId":"638","endLine":96,"endColumn":11},{"ruleId":"797","severity":1,"message":"801","line":114,"column":36,"nodeType":"799","messageId":"800","endLine":114,"endColumn":38},{"ruleId":"635","severity":1,"message":"972","line":132,"column":9,"nodeType":"637","messageId":"638","endLine":132,"endColumn":11},{"ruleId":"737","severity":1,"message":"973","line":74,"column":6,"nodeType":"739","endLine":74,"endColumn":20,"suggestions":"974"},{"ruleId":"797","severity":1,"message":"801","line":61,"column":16,"nodeType":"799","messageId":"800","endLine":61,"endColumn":18},"no-native-reassign",["975"],"no-negated-in-lhs",["976"],"@typescript-eslint/no-unused-vars","'FC' is defined but never used.","Identifier","unusedVar","'ReactNode' is defined but never used.","'useCallback' is defined but never used.","'styled' is defined but never used.","'HashRouter' is defined but never used.","'MuiDrawer' is defined but never used.","'Box' is defined but never used.","'useConnection' is defined but never used.","'useWallet' is defined but never used.","'WalletError' is defined but never used.","'WalletNotConnectedError' is defined but never used.","'Connection' is defined but never used.","'Keypair' is defined but never used.","'SystemProgram' is defined but never used.","'Transaction' is defined but never used.","'clusterApiUrl' is defined but never used.","'Helmet' is defined but never used.","'useSnackbar' is defined but never used.","'GRAPE_RPC_ENDPOINT' is defined but never used.","@typescript-eslint/no-array-constructor","The array literal notation [] is preferable.","NewExpression","useLiteral",{"range":"977","text":"978"},"'Link' is defined but never used.","'CopyToClipboard' is defined but never used.","'Snackbar' is defined but never used.","'WalletDisconnectButton' is defined but never used.","'MenuItem' is defined but never used.","'Menu' is defined but never used.","'Tooltip' is defined but never used.","'Paper' is defined but never used.","'IconButton' is defined but never used.","'DashboardOutlinedIcon' is defined but never used.","'HeaderProps' is defined but never used.","'Alert' is assigned a value but never used.","'open_menu' is assigned a value but never used.","'open_snackbar' is assigned a value but never used.","'tokenParam' is assigned a value but never used.","'setTokenParam' is assigned a value but never used.","'discordId' is assigned a value but never used.","'setDiscordId' is assigned a value but never used.","'userId' is assigned a value but never used.","'setUserId' is assigned a value but never used.","'setProviders' is assigned a value but never used.","'open_wallet' is assigned a value but never used.","'isWalletOpen' is assigned a value but never used.","'currPath' is assigned a value but never used.","'searchParams' is assigned a value but never used.","'routes' is assigned a value but never used.","'menuId' is assigned a value but never used.","'menuWalletId' is assigned a value but never used.","'handleProfileMenuOpen' is assigned a value but never used.","'handleWalletConnectClickOpen' is assigned a value but never used.","'handleCloseWallet' is assigned a value but never used.","'SimpleDialog' is defined but never used.","'handleClickSnackbar' is assigned a value but never used.","'handleCloseSnackbar' is assigned a value but never used.","'memo' is defined but never used.","'render' is defined but never used.","'ImageViewer' is defined but never used.","'InfiniteScroll' is defined but never used.","'formatAddress' is defined but never used.","'isValidAddr' is defined but never used.","'useWeb3' is defined but never used.","'lt' is defined but never used.","'TransactionInstruction' is defined but never used.","'makeStyles' is defined but never used.","'alpha' is defined but never used.","'WRAPPED_SOL_MINT' is defined but never used.","'TOKEN_PROGRAM_ID' is defined but never used.","'getMetadata' is defined but never used.","'getAuctionHouseProgramAsSigner' is defined but never used.","'loadWalletKey' is defined but never used.","'TableHead' is defined but never used.","'SpeedDialIcon' is defined but never used.","'SpeedDialAction' is defined but never used.","'FormControl' is defined but never used.","'FormControlLabel' is defined but never used.","'FormLabel' is defined but never used.","'SpeedDialProps' is defined but never used.","'ASSOCIATED_TOKEN_PROGRAM_ID' is defined but never used.","'Token' is defined but never used.","'InfoIcon' is defined but never used.","'getMintOwner' is defined but never used.","'AccessTimeSharp' is defined but never used.","'CollectionsOutlined' is defined but never used.","'ConstructionOutlined' is defined but never used.","'ContentCutOutlined' is defined but never used.","'relative' is defined but never used.","'StyledTable' is assigned a value but never used.","'ExpandMore' is assigned a value but never used.","'getParam' is defined but never used.","'PubKeyDialog' is assigned a value but never used.","'intFromBytes' is defined but never used.","'getInt64Bytes' is defined but never used.","'Props' is defined but never used.","'handleExpandClick' is assigned a value but never used.","'MD_PUBKEY' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getCollectionMeta' and 'mint'. Either include them or remove the dependency array.","ArrayExpression",["979"],"'setLimit' is assigned a value but never used.","'maxPage' is assigned a value but never used.","'beforeSignature' is assigned a value but never used.","'featuredmeta' is assigned a value but never used.","'connection' is assigned a value but never used.","'saleTimeAgo' is assigned a value but never used.","'setSaleTimeAgo' is assigned a value but never used.","'meta_primer' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'finalMeta' and 'getMeta'. Either include them or remove the dependency array.",["980"],{"range":"981","text":"982"},"'bump' is assigned a value but never used.","'meta_final' is assigned a value but never used.","'auctionHouseObj' is assigned a value but never used.","'featured' is assigned a value but never used.","@typescript-eslint/no-redeclare","'value' is already defined.","redeclared","'feePayer' is assigned a value but never used.","'progAddress' is assigned a value but never used.","'mcnt' is assigned a value but never used.","'i' is already defined.","'setPubKey' is assigned a value but never used.","'setType' is assigned a value but never used.","'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","'rpclimit' is assigned a value but never used.","'solanaDomain' is assigned a value but never used.","'setSolanaDomain' is assigned a value but never used.","'isFollowing' is assigned a value but never used.","'setIsFollowing' is assigned a value but never used.","'searchAddrInfo' is assigned a value but never used.","'setSearchAddrInfo' is assigned a value but never used.","'cyberConnect' is assigned a value but never used.","'setAddress' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'address', 'fetchProfilePicture', and 'loadingpicture'. Either include them or remove the dependency array.",["983"],"'setFollowItem' is assigned a value but never used.","'setFollowItemKey' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'initFollowListInfo' and 'publicKey'. Either include them or remove the dependency array.",["984"],"'setThisPublicKey' is assigned a value but never used.","'setWalletCollection' is assigned a value but never used.","'walletCollectionMeta' is assigned a value but never used.","'setWalletCollectionMeta' is assigned a value but never used.","'counter' is assigned a value but never used.","'rowsperpage' is assigned a value but never used.","'handleAlertWithdrawOpen' is assigned a value but never used.","'handleCancelOffer' is assigned a value but never used.","'item' is already defined.","'existSaleCancelAction' is assigned a value but never used.","'auctionMint' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'cntr' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'getOffers', 'loading', and 'offers'. Either include them or remove the dependency array.",["985"],"'StyledSpeedDial' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'enqueueSnackbar' is assigned a value but never used.","'closeSnackbar' is assigned a value but never used.","'setCollectionArray' is assigned a value but never used.","'fetchMore' is assigned a value but never used.","'tofollow' is assigned a value but never used.","'promise' is assigned a value but never used.","'handlePageChange' is assigned a value but never used.","'handleExpandCollectionClick' is assigned a value but never used.",{"range":"986","text":"982"},"'wallletlength' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'fetchProfilePicture', 'fetchSolanaDomain', 'getCollectionMeta', 'getFollowStatus', 'initFollowListInfo', and 'loadCount'. Either include them or remove the dependency array.",["987"],"'setGallery' is assigned a value but never used.","'setSearchParams' is assigned a value but never used.",{"range":"988","text":"982"},"'wallet' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'getWalletGallery', 'loadCount', and 'navigate'. Either include them or remove the dependency array.",["989"],"'useLocation' is defined but never used.","'NavLink' is defined but never used.","'GRAPE_PREVIEW' is defined but never used.","'MakeLinkableAddress' is defined but never used.","'ValidateAddress' is defined but never used.","'timeAgo' is defined but never used.","'themeInstance' is assigned a value but never used.","'struct' is defined but never used.","'u128' is defined but never used.","'u64' is defined but never used.","'getProfilePicture' is defined but never used.","'getRealms' is defined but never used.","'getVoteRecordsByVoter' is defined but never used.","'getTokenOwnerRecordsByOwner' is defined but never used.","'getGovernanceAccounts' is defined but never used.","'pubkeyFilter' is defined but never used.","'TokenOwnerRecord' is defined but never used.","'withCreateProposal' is defined but never used.","'VoteType' is defined but never used.","'getGovernanceProgramVersion' is defined but never used.","'serializeInstructionToBase64' is defined but never used.","'createInstructionData' is defined but never used.","'withInsertTransaction' is defined but never used.","'Router' is defined but never used.","'Pagination' is defined but never used.","'Stack' is defined but never used.","'AlertTitle' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'ImageList' is defined but never used.","'ImageListItem' is defined but never used.","'ImageListItemBar' is defined but never used.","'TableBody' is defined but never used.","'Badge' is defined but never used.","'SnackbarOrigin' is defined but never used.","'ListSubheader' is defined but never used.","'CardHeader' is defined but never used.","'CardContent' is defined but never used.","'QrCodeIcon' is defined but never used.","'RemoveCircleOutlineIcon' is defined but never used.","'AddCircleOutlineIcon' is defined but never used.","'AccountBoxOutlinedIcon' is defined but never used.","'InsertPhotoOutlinedIcon' is defined but never used.","'ShareIcon' is defined but never used.","'PreviewIcon' is defined but never used.","'ContentCopyIcon' is defined but never used.","'AccountBalanceWalletOutlinedIcon' is defined but never used.","'ImageOutlinedIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'AnchorWallet' is defined but never used.","'borderRadius' is defined but never used.","'cancelOffer' is defined but never used.","'withdrawOffer' is defined but never used.","'sendTransactionWithRetryWithKeypair' is defined but never used.","'Metadata' is defined but never used.","'ModeComment' is defined but never used.","'SentimentSatisfiedAltTwoTone' is defined but never used.","'propsToClassKey' is defined but never used.","'Search' is assigned a value but never used.","'SearchIconWrapper' is assigned a value but never used.","'StyledInputBase' is assigned a value but never used.","'sol_precision' is assigned a value but never used.","'setMintAta' is assigned a value but never used.","'anchorWallet' is assigned a value but never used.","'grape_governance_balance' is assigned a value but never used.","'setBuyNowPrompt' is assigned a value but never used.","'handleWithdrawOffer' is assigned a value but never used.","'forSaleTimeAgo' is assigned a value but never used.","'instructionType' is assigned a value but never used.","'allLogMessages' is assigned a value but never used.","'setSolanaPay' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'getOffers'. Either include it or remove the dependency array.",["990"],"'buyerPublicKey' is assigned a value but never used.","'onError' is assigned a value but never used.","'ggoconnection' is assigned a value but never used.","'salePrice' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'mintOwner'. Either include it or remove the dependency array.",["991"],"'loading' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'getLikeStatus' and 'initFollowListInfo'. Either include them or remove the dependency array.",["992"],"'NAME_SPACE' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'getFlagStatus' and 'initFollowListInfo'. Either include them or remove the dependency array.",["993"],"'collectionrawprimer' is assigned a value but never used.","'setMint' is assigned a value but never used.","'setGrapeOfferThreshhold' is assigned a value but never used.","'open_offers_collapse' is assigned a value but never used.","'setOpenOffersCollapse' is assigned a value but never used.","'setCollectionItemImages' is assigned a value but never used.","'handleClickOpenOffers' is assigned a value but never used.","'handleSendItem' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'getFollowStatus'. Either include it or remove the dependency array.",["994"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook React.useEffect has missing dependencies: 'fetchTokenAccountOwnerHoldings', 'getMintOwner', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.",["995"],"React Hook React.useEffect has missing dependencies: 'collectionItemImages', 'collectionitem.image', 'fetchTokenAccountData', and 'tokenOwners'. Either include them or remove the dependency array.",["996"],"'collection' is assigned a value but never used.","'setCollection' is assigned a value but never used.","'setInputPKValue' is assigned a value but never used.","'HandlePKSubmit' is defined but never used.","'CollectionProfileClear' is assigned a value but never used.","'setThisMint' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCollectionMeta'. Either include it or remove the dependency array.",["997"],"React Hook React.useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["998"],"'serialize' is defined but never used.","'OTHER_MARKETPLACES' is defined but never used.","'transferAuthority' is assigned a value but never used.","'currBal' is assigned a value but never used.","'fs' is defined but never used.","'uuid' is assigned a value but never used.","'totalShare' is assigned a value but never used.","'getAuctionHouseTradeState' is defined but never used.","'weighted' is defined but never used.","'BN' is defined but never used.","'web3' is defined but never used.","'getTokenOwnerRecordForRealm' is defined but never used.","'wit' is assigned a value but never used.","'getTokenAmount' is defined but never used.","'CardActionArea' is defined but never used.","'RedditShareButton' is defined but never used.","'TumblrShareButton' is defined but never used.","'FacebookMessengerIcon' is defined but never used.","'HatenaIcon' is defined but never used.","'InstapaperIcon' is defined but never used.","'LineIcon' is defined but never used.","'LinkedinIcon' is defined but never used.","'LivejournalIcon' is defined but never used.","'MailruIcon' is defined but never used.","'OKIcon' is defined but never used.","'PinterestIcon' is defined but never used.","'PocketIcon' is defined but never used.","'RedditIcon' is defined but never used.","'TumblrIcon' is defined but never used.","'VKIcon' is defined but never used.","'WeiboIcon' is defined but never used.","'WorkplaceIcon' is defined but never used.","'setSnackbarState' is assigned a value but never used.","'favoriteDisplayName' is assigned a value but never used.","'fn' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fn'. Either include it or remove the dependency array.",["999"],"no-global-assign","no-unsafe-negation",[1550,5239],"[\n    {\n        name: 'Magic Eden',\n        logo: 'https://magiceden.io/static/media/logo.ca418d75.svg',\n        //logo: 'https://magiceden.io/img/logo.png',\n        address: 'GUfCR9mK6azb9vcpsxgXyj7XRPAKJd4KMHTTVvtncGgp',\n        previewUrl: 'https://www.magiceden.io/item-details/',\n        url: 'https://www.magiceden.io'\n    },{\n        name: 'SolanArt',\n        logo: 'https://solanart.io/static/media/logo.0054f7e7.png',\n        address: '3D49QorJyNaL4rcpiynbuS3pRH4Y7EXEM6v6ZGaqfFGK',\n        previewUrl: 'https://solanart.io/search/?token=',\n        url: 'https://solanart.io'\n    },{\n        name: 'Digital Eyes',\n        logo: 'https://ik.imagekit.io/srjnqnjbpn9/logo/digitaleyes.svg?ik-sdk-version=react-1.0.11',\n        //logo: 'https://ik.imagekit.io/favicon-32x32.png',\n        address: 'F4ghBzHFNgJxV4wEQDchU5i7n4XWWMBSaq7CuswGiVsr',\n        previewUrl: '',\n        url: 'https://www.magiceden.io'\n    },{\n        name: 'Digital Eyes',\n        logo: 'https://ik.imagekit.io/srjnqnjbpn9/logo/digitaleyes.svg?ik-sdk-version=react-1.0.11',\n        //logo: 'https://ik.imagekit.io/srjnqnjbpn9/logo/favicon-32x32.png',\n        address: 'BweTPKW9QsWZTJnfbLz88ekKaWw7HrBJsStrduHryPgk',\n        previewUrl: '',\n        url: 'https://www.magiceden.io'\n    },{\n        name: 'Alph Art',\n        //logo: 'https://alpha.art/icon-root.svg',\n        logo: 'https://alpha.art/logo_192.png',\n        address: '4pUQS4Jo2dsfWzt3VgHXy3H6RYnEDd11oWPiaM2rdAPw',\n        previewUrl: 'https://alpha.art/t/',\n        url: 'https://www.alpha.art'\n    },{\n        name: 'FTX',\n        logo: 'https://ftx.us/static/media/ftxus_logo_white.b384ac52.svg',\n        address: '73tF8uN3BwVzUzwETv59WNAafuEBct2zTgYbYXLggQiU',\n        previewUrl: '',\n        url: 'https://ftx.us/nfts'\n    },{\n        name: 'FTX',\n        logo: 'https://ftx.us/static/media/ftxus_logo_white.b384ac52.svg',\n        address: 'HHvnfyY7vNWhjeHqCVyMPr4UjDp3ptqu3QbuFoCkrm8r',\n        previewUrl: '',\n        url: 'https://ftx.us/nfts'\n    },{\n        name: 'FTX',\n        logo: 'https://ftx.us/static/media/ftxus_logo_white.b384ac52.svg',\n        address: 'HznNaC2cz1iXMtHMG3HAgMH2xkrt2iTXfUKz6wwAAVPB',\n        previewUrl: '',\n        url: 'https://ftx.us/nfts'\n    },{\n        name: 'SMB Market',\n        //logo: 'https://market.solanamonkey.business/logo/smb-market.svg',\n        logo: 'https://market.solanamonkey.business/logo/smb.png',\n        address: 'G6xptnrkj4bxg9H9ZyPzmAnNsGghSxZ7oBCL1KNKJUza',\n        previewUrl: 'https://market.solanamonkey.business/item/',\n        url: 'https://market.solanamonkey.business/'\n    },{\n        name: 'SMB Market',\n        //logo: 'https://market.solanamonkey.business/logo/smb-market.svg',\n        logo: 'https://market.solanamonkey.business/logo/smb.png',\n        address: '7Ppgch9d4XRAygVNJP4bDkc7V6htYXGfghX4zzG9r4cH',\n        previewUrl: 'https://market.solanamonkey.business/item/',\n        url: 'https://market.solanamonkey.business/'\n    },{\n        name: 'SMB Market',\n        //logo: 'https://market.solanamonkey.business/logo/smb-market.svg',\n        logo: 'https://market.solanamonkey.business/logo/smb.png',\n        address: 'EQEpTS8SiVPUxyqRgT2Jdx9dHEwbpcbSZ2sotiAUZ7i7',\n        previewUrl: 'https://market.solanamonkey.business/item/',\n        url: 'https://market.solanamonkey.business/'\n    },{\n        name: 'SMB Market',\n        //logo: 'https://market.solanamonkey.business/logo/smb-market.svg',\n        logo: 'https://market.solanamonkey.business/logo/smb.png',\n        address: 'CPo76cw52gKMTyvCS9GpnnZfvmkQQxovLwQFxonZrCRU',\n        previewUrl: 'https://market.solanamonkey.business/item/',\n        url: 'https://market.solanamonkey.business/'\n    }\n]",{"desc":"1000","fix":"1001"},{"desc":"1002","fix":"1003"},[25261,25272],"[]",{"desc":"1004","fix":"1005"},{"desc":"1006","fix":"1007"},{"desc":"1008","fix":"1009"},[134867,134878],{"desc":"1010","fix":"1011"},[159826,159837],{"desc":"1012","fix":"1013"},{"desc":"1014","fix":"1015"},{"desc":"1016","fix":"1017"},{"desc":"1018","fix":"1019"},{"desc":"1020","fix":"1021"},{"desc":"1022","fix":"1023"},{"desc":"1024","fix":"1025"},{"desc":"1026","fix":"1027"},{"desc":"1028","fix":"1029"},{"desc":"1030","fix":"1031"},{"desc":"1032","fix":"1033"},"Update the dependencies array to be: [collectionitem, getCollectionMeta, mint]",{"range":"1034","text":"1035"},"Update the dependencies array to be: [finalMeta, getMeta, itemraw]",{"range":"1036","text":"1037"},"Update the dependencies array to be: [address, fetchProfilePicture, loadingpicture]",{"range":"1038","text":"1039"},"Update the dependencies array to be: [initFollowListInfo, publicKey]",{"range":"1040","text":"1041"},"Update the dependencies array to be: [getOffers, loading, offers, refresh, thisPublicKey]",{"range":"1042","text":"1043"},"Update the dependencies array to be: [fetchProfilePicture, fetchSolanaDomain, getCollectionMeta, getFollowStatus, initFollowListInfo, loadCount, pubkey]",{"range":"1044","text":"1045"},"Update the dependencies array to be: [getWalletGallery, loadCount, navigate, pubkey]",{"range":"1046","text":"1047"},"Update the dependencies array to be: [getOffers, mintAta, refreshOffers]",{"range":"1048","text":"1049"},"Update the dependencies array to be: [mintOwner]",{"range":"1050","text":"1051"},"Update the dependencies array to be: [getLikeStatus, initFollowListInfo]",{"range":"1052","text":"1053"},"Update the dependencies array to be: [getFlagStatus, initFollowListInfo]",{"range":"1054","text":"1055"},"Update the dependencies array to be: [getFollowStatus, publicKey]",{"range":"1056","text":"1057"},"Update the dependencies array to be: [fetchTokenAccountOwnerHoldings, getMintOwner, mintAta, props, publicKey, refreshOwner]",{"range":"1058","text":"1059"},"Update the dependencies array to be: [collectionItemImages, collectionitem.image, fetchTokenAccountData, mint, tokenOwners]",{"range":"1060","text":"1061"},"Update the dependencies array to be: [getCollectionMeta, thismint]",{"range":"1062","text":"1063"},"Update the dependencies array to be: [history, mint, refresh]",{"range":"1064","text":"1065"},"Update the dependencies array to be: [refresh, key, fn]",{"range":"1066","text":"1067"},[11966,11982],"[collectionitem, getCollectionMeta, mint]",[17594,17603],"[finalMeta, getMeta, itemraw]",[41135,41137],"[address, fetchProfilePicture, loadingpicture]",[44813,44815],"[initFollowListInfo, publicKey]",[100372,100396],"[getOffers, loading, offers, refresh, thisPublicKey]",[140101,140109],"[fetchProfilePicture, fetchSolanaDomain, getCollectionMeta, getFollowStatus, initFollowListInfo, loadCount, pubkey]",[163040,163048],"[getWalletGallery, loadCount, navigate, pubkey]",[70285,70309],"[getOffers, mintAta, refreshOffers]",[99315,99317],"[mintOwner]",[113768,113770],"[getLikeStatus, initFollowListInfo]",[119316,119318],"[getFlagStatus, initFollowListInfo]",[131618,131629],"[getFollowStatus, publicKey]",[140047,140081],"[fetchTokenAccountOwnerHoldings, getMintOwner, mintAta, props, publicKey, refreshOwner]",[140405,140411],"[collectionItemImages, collectionitem.image, fetchTokenAccountData, mint, tokenOwners]",[205208,205218],"[getCollectionMeta, thismint]",[206808,206823],"[history, mint, refresh]",[2000,2014],"[refresh, key, fn]"]